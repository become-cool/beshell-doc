import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as l,c as i,b as n,d as s,a,w as u,e as p}from"./app-DuvumQGL.js";const r={},d=n("h1",{id:"在-esp32-上用-javascript-开发-web-后端",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#在-esp32-上用-javascript-开发-web-后端"},[n("span",null,"在 ESP32 上用 JavaScript 开发 WEB 后端")])],-1),k={href:"https://mongoose.ws",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,[s("BeShell 在 ESP32 平台上实现了类似 "),n("code",null,"Node.js"),s(" 这样的 WEB 后端开发框架。")],-1),m=n("p",null,"BeShell 还提供的 文件系统、SQLite3 等模块，互联网前端、后端工程师可以平滑地从自己的技术栈过渡到 ESP32 单片机平台。",-1),b=n("p",null,"使用 BeShell 开发者可以轻易地将低成本的 ESP32 设备当作 微型、分布式，或者便携的 WEB 云服务器来使用。",-1),h=n("h2",{id:"_1-arduino-启动工程代码",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-arduino-启动工程代码"},[n("span",null,"1. Arduino 启动工程代码")])],-1),g=p(`<p>使用 mg 模块的 Arduion 工程代码如下：</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;BeShell.hpp&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> be<span class="token punctuation">;</span>

BeShell be<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// 启动 Mg 模块</span>
    beshell<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">use</span><span class="token generic class-name"><span class="token operator">&lt;</span>Mg<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>

    <span class="token comment">// 启动 WiFi 模块</span>
    beshell<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">use</span><span class="token generic class-name"><span class="token operator">&lt;</span>WiFi<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>

    <span class="token comment">// 启动 文件系统模块</span>
    beshell<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">use</span><span class="token generic class-name"><span class="token operator">&lt;</span>FS<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
    
    <span class="token comment">// 挂载分区</span>
    <span class="token class-name">FS</span><span class="token double-colon punctuation">::</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token function">FatFS</span><span class="token punctuation">(</span><span class="token string">&quot;ffat&quot;</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
    
    <span class="token comment">// 启动 BeShell</span>
    beshell<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 主循环</span>
<span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    beshell<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>ESP-IDF 框架下使用 WiFi 模块的工程类似</p></blockquote><p>接下来是 JavaScript 文件的例子。</p><h2 id="_2-简单-http-web-后端的例子" tabindex="-1"><a class="header-anchor" href="#_2-简单-http-web-后端的例子"><span>2. 简单 HTTP Web 后端的例子</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> wifi <span class="token keyword">from</span> <span class="token string">&quot;wifi&quot;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> mg <span class="token keyword">from</span> <span class="token string">&quot;mg&quot;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

    <span class="token comment">// 创建热点</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token operator">!</span> <span class="token keyword">await</span> wifi<span class="token punctuation">.</span><span class="token function">startAP</span><span class="token punctuation">(</span><span class="token string">&quot;BeShell-APP&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;12345678&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to start AP&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;AP started&quot;</span><span class="token punctuation">)</span>

    mg<span class="token punctuation">.</span><span class="token function">listenHttp</span><span class="token punctuation">(</span><span class="token string">&quot;0.0.0.0:80&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">ev<span class="token punctuation">,</span> req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token comment">// 处理 http 请求</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>ev<span class="token operator">==</span><span class="token string">&quot;http.msg&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 动态页面</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span> req<span class="token punctuation">.</span><span class="token function">uri</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;/hello&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
                res<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h3&gt;Hello World&lt;/h3&gt;&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 静态页面</span>
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                res<span class="token punctuation">.</span><span class="token function">serveDir</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">&quot;/public&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用手机或PC 连接到 ESP32 的热点，打开浏览器访问 <code>http://192.168.4.1/hello</code>，可以看到 <code>Hello World</code> 页面。</p>`,7),S={href:"https://beconsole.become.cool",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"public",-1),f=n("code",null,"public",-1),q=n("code",null,"http://192.168.4.1/xxx.html",-1),w=p('<p>这个例子演示了一个简单但是完整的 WEB APP, 如何响应动态HTTP请求，以及如何将前端静态页面部署到 ESP32 设备上。有 <code>Node.JS</code> 经验的开发者对这种模式应该非常熟悉。</p><blockquote><p>注意：<code>mg.listenHttp()</code> 的回调函数会接收全部的 mg 连接事件，包括 open, close, http.msg 等。所以需要判断 <code>ev</code> 参数来区分不同的事件。</p></blockquote><h2 id="_3-websocket-的例子" tabindex="-1"><a class="header-anchor" href="#_3-websocket-的例子"><span>3. WebSocket 的例子</span></a></h2><blockquote><p>该部分内容的文档还在整理中...</p></blockquote><h2 id="_4-数据库-sqlite3-的例子" tabindex="-1"><a class="header-anchor" href="#_4-数据库-sqlite3-的例子"><span>4. 数据库 SQLite3 的例子</span></a></h2><blockquote><p>该部分内容的文档还在整理中...</p></blockquote>',6);function P(y,T){const e=t("ExternalLinkIcon"),o=t("RouteLink");return l(),i("div",null,[d,n("p",null,[s("BeShell 集成了 "),n("a",k,[s("Mongoose 库"),a(e)]),s("，用来处理网络应用层的协议，包括 HTTP(S)、WebSocket、MQTT、SNTP、SMTP 等。")]),v,m,b,h,n("p",null,[s("这里主要介绍 mg 模块的 JavaScript API，如何在 ESP32 设备上运行 JavaScript 文件，请参考："),a(o,{to:"/guide/run-js-script.html"},{default:u(()=>[s("运行 JavaScript 脚本文件")]),_:1})]),g,n("p",null,[s("通过 "),n("a",S,[s("BeConsole"),a(e)]),s(" 在 ESP32 设备上创建 "),_,s(" 目录，上传一些文件到 "),f,s(" 目录，然后就可以直接通过 "),q,s(" 访问了。")]),w])}const W=c(r,[["render",P],["__file","http-server.html.vue"]]),x=JSON.parse('{"path":"/guide/http-server.html","title":"在 ESP32 上用 JavaScript 开发 WEB 后端","lang":"zh-CN","frontmatter":{"description":"在 ESP32 上用 JavaScript 开发 WEB 后端 BeShell 集成了 Mongoose 库，用来处理网络应用层的协议，包括 HTTP(S)、WebSocket、MQTT、SNTP、SMTP 等。 BeShell 在 ESP32 平台上实现了类似 Node.js 这样的 WEB 后端开发框架。 BeShell 还提供的 文件系统、SQL...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/guide/http-server.html"}],["meta",{"property":"og:title","content":"在 ESP32 上用 JavaScript 开发 WEB 后端"}],["meta",{"property":"og:description","content":"在 ESP32 上用 JavaScript 开发 WEB 后端 BeShell 集成了 Mongoose 库，用来处理网络应用层的协议，包括 HTTP(S)、WebSocket、MQTT、SNTP、SMTP 等。 BeShell 在 ESP32 平台上实现了类似 Node.js 这样的 WEB 后端开发框架。 BeShell 还提供的 文件系统、SQL..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-31T09:42:04.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-31T09:42:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"在 ESP32 上用 JavaScript 开发 WEB 后端\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-31T09:42:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. Arduino 启动工程代码","slug":"_1-arduino-启动工程代码","link":"#_1-arduino-启动工程代码","children":[]},{"level":2,"title":"2. 简单 HTTP Web 后端的例子","slug":"_2-简单-http-web-后端的例子","link":"#_2-简单-http-web-后端的例子","children":[]},{"level":2,"title":"3. WebSocket 的例子","slug":"_3-websocket-的例子","link":"#_3-websocket-的例子","children":[]},{"level":2,"title":"4. 数据库 SQLite3 的例子","slug":"_4-数据库-sqlite3-的例子","link":"#_4-数据库-sqlite3-的例子","children":[]}],"git":{"createdTime":1717148524000,"updatedTime":1717148524000,"contributors":[{"name":"alee","email":"alee_zhou@seminstructs.com","commits":1}]},"readingTime":{"minutes":1.94,"words":583},"filePathRelative":"guide/http-server.md","localizedDate":"2024年5月31日","autoDesc":true}');export{W as comp,x as data};
