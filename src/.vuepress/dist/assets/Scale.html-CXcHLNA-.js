import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as r,b as l,d as n,e as a,r as o,o as i}from"./app-CbJW3NnK.js";const d={},g={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},x={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},L={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},y={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},V={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"};function I(G,e){const t=o("ExternalLinkIcon");return i(),p("div",null,[e[58]||(e[58]=r('<h1 id="类-scale" tabindex="-1"><a class="header-anchor" href="#类-scale"><span>类: Scale</span></a></h1><h2 id="类属性" tabindex="-1"><a class="header-anchor" href="#类属性"><span>类属性</span></a></h2><p style="height:10px;margin:0px;"></p><h3 id="属性-mode" tabindex="-1"><a class="header-anchor" href="#属性-mode"><span><span class="member-header property"></span> 属性 mode</span></a></h3><p>类型: LV-CONST</p><p>访问: 可读, 可写</p>',6)),l("blockquote",null,[l("p",null,[e[1]||(e[1]=n("该属性是对 LVGL C API ")),e[2]||(e[2]=l("code",null,"lv_scale_get_mode",-1)),e[3]||(e[3]=n(", ")),e[4]||(e[4]=l("code",null,"lv_scale_set_mode",-1)),e[5]||(e[5]=n(" 的封装， 具体用法请参考 ")),l("a",g,[e[0]||(e[0]=n("LVGL文档")),a(t)])])]),e[59]||(e[59]=r('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-totaltickcount" tabindex="-1"><a class="header-anchor" href="#属性-totaltickcount"><span><span class="member-header property"></span> 属性 totalTickCount</span></a></h3><p>类型: number</p><p>访问: 可读, 可写</p>',5)),l("blockquote",null,[l("p",null,[e[7]||(e[7]=n("该属性是对 LVGL C API ")),e[8]||(e[8]=l("code",null,"lv_scale_get_total_tick_count",-1)),e[9]||(e[9]=n(", ")),e[10]||(e[10]=l("code",null,"lv_scale_set_total_tick_count",-1)),e[11]||(e[11]=n(" 的封装， 具体用法请参考 ")),l("a",m,[e[6]||(e[6]=n("LVGL文档")),a(t)])])]),e[60]||(e[60]=r('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-majortickevery" tabindex="-1"><a class="header-anchor" href="#属性-majortickevery"><span><span class="member-header property"></span> 属性 majorTickEvery</span></a></h3><p>类型: number</p><p>访问: 可读, 可写</p>',5)),l("blockquote",null,[l("p",null,[e[13]||(e[13]=n("该属性是对 LVGL C API ")),e[14]||(e[14]=l("code",null,"lv_scale_get_major_tick_every",-1)),e[15]||(e[15]=n(", ")),e[16]||(e[16]=l("code",null,"lv_scale_set_major_tick_every",-1)),e[17]||(e[17]=n(" 的封装， 具体用法请参考 ")),l("a",u,[e[12]||(e[12]=n("LVGL文档")),a(t)])])]),e[61]||(e[61]=r('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-labelshow" tabindex="-1"><a class="header-anchor" href="#属性-labelshow"><span><span class="member-header property"></span> 属性 labelShow</span></a></h3><p>类型: number</p><p>访问: 可读, 可写</p>',5)),l("blockquote",null,[l("p",null,[e[19]||(e[19]=n("该属性是对 LVGL C API ")),e[20]||(e[20]=l("code",null,"lv_scale_get_label_show",-1)),e[21]||(e[21]=n(", ")),e[22]||(e[22]=l("code",null,"lv_scale_set_label_show",-1)),e[23]||(e[23]=n(" 的封装， 具体用法请参考 ")),l("a",h,[e[18]||(e[18]=n("LVGL文档")),a(t)])])]),e[62]||(e[62]=r('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-anglerange" tabindex="-1"><a class="header-anchor" href="#属性-anglerange"><span><span class="member-header property"></span> 属性 angleRange</span></a></h3><p>类型: number</p><p>访问: 可读, 可写</p>',5)),l("blockquote",null,[l("p",null,[e[25]||(e[25]=n("该属性是对 LVGL C API ")),e[26]||(e[26]=l("code",null,"lv_scale_get_angle_range",-1)),e[27]||(e[27]=n(", ")),e[28]||(e[28]=l("code",null,"lv_scale_set_angle_range",-1)),e[29]||(e[29]=n(" 的封装， 具体用法请参考 ")),l("a",x,[e[24]||(e[24]=n("LVGL文档")),a(t)])])]),e[63]||(e[63]=r('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-rotation" tabindex="-1"><a class="header-anchor" href="#属性-rotation"><span><span class="member-header property"></span> 属性 rotation</span></a></h3><p>类型: number</p><p>访问: 只写</p>',5)),l("blockquote",null,[l("p",null,[e[31]||(e[31]=n("该属性是对 LVGL C API ")),e[32]||(e[32]=l("code",null,"lv_scale_set_rotation",-1)),e[33]||(e[33]=n(" 的封装， 具体用法请参考 ")),l("a",v,[e[30]||(e[30]=n("LVGL文档")),a(t)])])]),e[64]||(e[64]=r('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-postdraw" tabindex="-1"><a class="header-anchor" href="#属性-postdraw"><span><span class="member-header property"></span> 属性 postDraw</span></a></h3><p>类型: number</p><p>访问: 只写</p>',5)),l("blockquote",null,[l("p",null,[e[35]||(e[35]=n("该属性是对 LVGL C API ")),e[36]||(e[36]=l("code",null,"lv_scale_set_post_draw",-1)),e[37]||(e[37]=n(" 的封装， 具体用法请参考 ")),l("a",b,[e[34]||(e[34]=n("LVGL文档")),a(t)])])]),e[65]||(e[65]=r('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-rangeminvalue" tabindex="-1"><a class="header-anchor" href="#属性-rangeminvalue"><span><span class="member-header property"></span> 属性 rangeMinValue</span></a></h3><p>类型: number</p><p>访问: 只读</p>',5)),l("blockquote",null,[l("p",null,[e[39]||(e[39]=n("该属性是对 LVGL C API ")),e[40]||(e[40]=l("code",null,"lv_scale_get_range_min_value",-1)),e[41]||(e[41]=n(" 的封装， 具体用法请参考 ")),l("a",L,[e[38]||(e[38]=n("LVGL文档")),a(t)])])]),e[66]||(e[66]=r('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-rangemaxvalue" tabindex="-1"><a class="header-anchor" href="#属性-rangemaxvalue"><span><span class="member-header property"></span> 属性 rangeMaxValue</span></a></h3><p>类型: number</p><p>访问: 只读</p>',5)),l("blockquote",null,[l("p",null,[e[43]||(e[43]=n("该属性是对 LVGL C API ")),e[44]||(e[44]=l("code",null,"lv_scale_get_range_max_value",-1)),e[45]||(e[45]=n(" 的封装， 具体用法请参考 ")),l("a",f,[e[42]||(e[42]=n("LVGL文档")),a(t)])])]),e[67]||(e[67]=r('<p style="height:10px;margin:0px;"></p><h2 id="类方法" tabindex="-1"><a class="header-anchor" href="#类方法"><span>类方法</span></a></h2><p style="height:10px;margin:0px;"></p><h3 id="方法-setrange" tabindex="-1"><a class="header-anchor" href="#方法-setrange"><span><span class="member-header function"></span> 方法 setRange</span></a></h3><p>原型: setRange ()</p>',5)),l("blockquote",null,[l("p",null,[e[47]||(e[47]=n("该方法是对 LVGL C API ")),e[48]||(e[48]=l("code",null,"lv_scale_set_range",-1)),e[49]||(e[49]=n(" 的封装，具体用法请参考 ")),l("a",k,[e[46]||(e[46]=n("LVGL文档")),a(t)])])]),e[68]||(e[68]=r('<h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值"><span>返回值:</span></a></h4><p><code>undefined</code></p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-setlineneedlevalue" tabindex="-1"><a class="header-anchor" href="#方法-setlineneedlevalue"><span><span class="member-header function"></span> 方法 setLineNeedleValue</span></a></h3><p>原型: setLineNeedleValue ()</p>',6)),l("blockquote",null,[l("p",null,[e[51]||(e[51]=n("该方法是对 LVGL C API ")),e[52]||(e[52]=l("code",null,"lv_scale_set_line_needle_value",-1)),e[53]||(e[53]=n(" 的封装，具体用法请参考 ")),l("a",y,[e[50]||(e[50]=n("LVGL文档")),a(t)])])]),e[69]||(e[69]=r('<h4 id="返回值-1" tabindex="-1"><a class="header-anchor" href="#返回值-1"><span>返回值:</span></a></h4><p><code>undefined</code></p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-setimageneedlevalue" tabindex="-1"><a class="header-anchor" href="#方法-setimageneedlevalue"><span><span class="member-header function"></span> 方法 setImageNeedleValue</span></a></h3><p>原型: setImageNeedleValue ()</p>',6)),l("blockquote",null,[l("p",null,[e[55]||(e[55]=n("该方法是对 LVGL C API ")),e[56]||(e[56]=l("code",null,"lv_scale_set_image_needle_value",-1)),e[57]||(e[57]=n(" 的封装，具体用法请参考 ")),l("a",V,[e[54]||(e[54]=n("LVGL文档")),a(t)])])]),e[70]||(e[70]=l("h4",{id:"返回值-2",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#返回值-2"},[l("span",null,"返回值:")])],-1)),e[71]||(e[71]=l("p",null,[l("code",null,"undefined")],-1)),e[72]||(e[72]=l("p",{style:{height:"10px",margin:"0px"}},null,-1))])}const C=s(d,[["render",I],["__file","Scale.html.vue"]]),w=JSON.parse('{"path":"/api/lvgl/widgets/Scale.html","title":"类: Scale","lang":"zh-CN","frontmatter":{"headerDepth":2,"description":"类: Scale 类属性 属性 mode 类型: LV-CONST 访问: 可读, 可写 该属性是对 LVGL C API lv_scale_get_mode, lv_scale_set_mode 的封装， 具体用法请参考 LVGL文档 属性 totalTickCount 类型: number 访问: 可读, 可写 该属性是对 LVGL C API l...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/api/lvgl/widgets/Scale.html"}],["meta",{"property":"og:title","content":"类: Scale"}],["meta",{"property":"og:description","content":"类: Scale 类属性 属性 mode 类型: LV-CONST 访问: 可读, 可写 该属性是对 LVGL C API lv_scale_get_mode, lv_scale_set_mode 的封装， 具体用法请参考 LVGL文档 属性 totalTickCount 类型: number 访问: 可读, 可写 该属性是对 LVGL C API l..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-30T15:47:51.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-30T15:47:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类: Scale\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-30T15:47:51.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"类属性","slug":"类属性","link":"#类属性","children":[{"level":3,"title":"属性 mode","slug":"属性-mode","link":"#属性-mode","children":[]},{"level":3,"title":"属性 totalTickCount","slug":"属性-totaltickcount","link":"#属性-totaltickcount","children":[]},{"level":3,"title":"属性 majorTickEvery","slug":"属性-majortickevery","link":"#属性-majortickevery","children":[]},{"level":3,"title":"属性 labelShow","slug":"属性-labelshow","link":"#属性-labelshow","children":[]},{"level":3,"title":"属性 angleRange","slug":"属性-anglerange","link":"#属性-anglerange","children":[]},{"level":3,"title":"属性 rotation","slug":"属性-rotation","link":"#属性-rotation","children":[]},{"level":3,"title":"属性 postDraw","slug":"属性-postdraw","link":"#属性-postdraw","children":[]},{"level":3,"title":"属性 rangeMinValue","slug":"属性-rangeminvalue","link":"#属性-rangeminvalue","children":[]},{"level":3,"title":"属性 rangeMaxValue","slug":"属性-rangemaxvalue","link":"#属性-rangemaxvalue","children":[]}]},{"level":2,"title":"类方法","slug":"类方法","link":"#类方法","children":[{"level":3,"title":"方法  setRange","slug":"方法-setrange","link":"#方法-setrange","children":[]},{"level":3,"title":"方法  setLineNeedleValue","slug":"方法-setlineneedlevalue","link":"#方法-setlineneedlevalue","children":[]},{"level":3,"title":"方法  setImageNeedleValue","slug":"方法-setimageneedlevalue","link":"#方法-setimageneedlevalue","children":[]}]}],"git":{"createdTime":1714757277000,"updatedTime":1717084071000,"contributors":[{"name":"alee","email":"alee@chou.im","commits":5}]},"readingTime":{"minutes":2.25,"words":674},"filePathRelative":"api/lvgl/widgets/Scale.md","localizedDate":"2024年5月4日","autoDesc":true}');export{C as comp,w as data};
