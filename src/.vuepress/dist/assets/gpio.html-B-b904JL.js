import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as n,e as i,a as h,d as e,w as p,r as l,o as g}from"./app-CbJW3NnK.js";const u={};function m(b,a){const o=l("CodeTabs"),r=l("RouteLink");return g(),c("div",null,[a[6]||(a[6]=n("h1",{id:"模块-gpio",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#模块-gpio"},[n("span",null,"模块: GPIO")])],-1)),a[7]||(a[7]=n("p",null,[e("导入 "),n("code",null,"GPIO"),e(" 模块：")],-1)),i(o,{id:"6",data:[{id:"在.js文件中"},{id:"在REPL命令行下"}]},{title0:p(({value:s,isActive:t})=>a[0]||(a[0]=[e("在.js文件中")])),title1:p(({value:s,isActive:t})=>a[1]||(a[1]=[e("在REPL命令行下")])),tab0:p(({value:s,isActive:t})=>a[2]||(a[2]=[n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token operator"},"*"),e(),n("span",{class:"token keyword"},"as"),e(" wifi "),n("span",{class:"token keyword"},"from"),e(),n("span",{class:"token string"},"'GPIO'"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1)])),tab1:p(({value:s,isActive:t})=>a[3]||(a[3]=[n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),e(),n("span",{class:"token constant"},"GPIO"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1)])),_:1}),n("blockquote",null,[n("p",null,[a[5]||(a[5]=e("GPIO 模块的例子请参考：")),i(r,{to:"/guide/gpio.html"},{default:p(()=>a[4]||(a[4]=[e("用 JavaScript 控制 GPIO")])),_:1})])]),a[8]||(a[8]=h('<h2 id="模块函数" tabindex="-1"><a class="header-anchor" href="#模块函数"><span>模块函数</span></a></h2><p style="height:10px;margin:0px;"></p><h3 id="函数-setmode" tabindex="-1"><a class="header-anchor" href="#函数-setmode"><span><span class="member-header function"></span> 函数 setMode</span></a></h3><p>原型: setMode (pin:number, mode:string)</p><p>设置 GPIO 的工作模式</p><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">pin</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>number</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>引脚序号</p></li><li><p><span style="color:#007acc;">mode</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>string</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>模式, 可用值: &quot;input&quot;|&quot;output&quot;|&quot;output-od&quot;|&quot;input-output&quot;|&quot;input-output-od&quot;</p></li></ul><h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>bool</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-pull" tabindex="-1"><a class="header-anchor" href="#函数-pull"><span><span class="member-header function"></span> 函数 pull</span></a></h3><p>原型: pull (pin:number, mode:string)</p><p>设置 gpio pull 模式</p><p>参数 <code>pullMode</code> 的可选值为:</p><ul><li>up 上拉</li><li>down 下拉</li><li>updown 同时上下拉</li><li>floating 悬空</li></ul><h4 id="参数-1" tabindex="-1"><a class="header-anchor" href="#参数-1"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">pin</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>number</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>mcu可用的gpio编号</p></li><li><p><span style="color:#007acc;">mode</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>string</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span></p></li></ul><h4 id="返回值-1" tabindex="-1"><a class="header-anchor" href="#返回值-1"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>undefined</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-write" tabindex="-1"><a class="header-anchor" href="#函数-write"><span><span class="member-header function"></span> 函数 write</span></a></h3><p>原型: write (pin:number, value:number)</p><p>gpio 电平输出</p><h4 id="参数-2" tabindex="-1"><a class="header-anchor" href="#参数-2"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">pin</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>number</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>mcu可用的gpio编号</p></li><li><p><span style="color:#007acc;">value</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>number</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>输出电平 0|1</p></li></ul><h4 id="返回值-2" tabindex="-1"><a class="header-anchor" href="#返回值-2"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>undefined</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-read" tabindex="-1"><a class="header-anchor" href="#函数-read"><span><span class="member-header function"></span> 函数 read</span></a></h3><p>原型: read (pin:number)</p><p>gpio 电平输入</p><h4 id="参数-3" tabindex="-1"><a class="header-anchor" href="#参数-3"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">pin</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>number</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>mcu可用的gpio编号</p></li></ul><h4 id="返回值-3" tabindex="-1"><a class="header-anchor" href="#返回值-3"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>0, 1</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-adcsetbits" tabindex="-1"><a class="header-anchor" href="#函数-adcsetbits"><span><span class="member-header function"></span> 函数 adcSetBits</span></a></h3><p>原型: adcSetBits (adc:number, bits:number)</p><p>设置 adc 的位宽</p><h4 id="参数-4" tabindex="-1"><a class="header-anchor" href="#参数-4"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">adc</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>number</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>adc (目前版本只能为 1)</p></li><li><p><span style="color:#007acc;">bits</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>number</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>位宽 (9-12)</p></li></ul><h4 id="返回值-4" tabindex="-1"><a class="header-anchor" href="#返回值-4"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>bool</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-adcsetchannelatten" tabindex="-1"><a class="header-anchor" href="#函数-adcsetchannelatten"><span><span class="member-header function"></span> 函数 adcSetChannelAtten</span></a></h3><p>param pin:number mcu可用的gpio编号 param atten:number adc通道 (1|2)</p><p>原型: adcSetChannelAtten param pin:number mcu可用的gpio编号 param atten:number adc通道 (1|2) ()</p><p>设置 gpio 使用哪个 adc 通道</p><h4 id="返回值-5" tabindex="-1"><a class="header-anchor" href="#返回值-5"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>bool</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-watch" tabindex="-1"><a class="header-anchor" href="#函数-watch"><span><span class="member-header function"></span> 函数 watch</span></a></h3><p>原型: watch (pin:number, mode:string, callback:function)</p><p>监听 gpio 外部电平变化</p><h4 id="参数-5" tabindex="-1"><a class="header-anchor" href="#参数-5"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">pin</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>number</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>mcu可用的gpio编号</p></li><li><p><span style="color:#007acc;">mode</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>string</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>监听模式， 可选值为: &quot;rising&quot;|&quot;falling&quot;|&quot;both&quot;</p></li><li><p><span style="color:#007acc;">callback</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>function</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>回调函数，callback 的原型为 <code>function(pin, value)</code></p></li></ul><h4 id="返回值-6" tabindex="-1"><a class="header-anchor" href="#返回值-6"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>bool</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-blink" tabindex="-1"><a class="header-anchor" href="#函数-blink"><span><span class="member-header function"></span> 函数 blink</span></a></h3><p>原型: blink (pin:number, time:number)</p><p>GPIO 闪烁，执行该函数后，指定的引脚会持续高低电平切换。</p><h4 id="参数-6" tabindex="-1"><a class="header-anchor" href="#参数-6"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">pin</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>number</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>引脚序号</p></li><li><p><span style="color:#007acc;">time</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>number</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>间隔时间，单位毫秒，闪烁的半周期</p></li></ul><h4 id="返回值-7" tabindex="-1"><a class="header-anchor" href="#返回值-7"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>number</p><p>定时器id，可使用 <code>clearTimeout()</code> 停止闪烁。</p><p style="height:10px;margin:0px;"></p>',75))])}const k=d(u,[["render",m],["__file","gpio.html.vue"]]),f=JSON.parse('{"path":"/api/gpio.html","title":"模块: GPIO","lang":"zh-CN","frontmatter":{"headerDepth":2,"description":"模块: GPIO 导入 GPIO 模块： GPIO 模块的例子请参考： 模块函数 函数 setMode 原型: setMode (pin:number, mode:string) 设置 GPIO 的工作模式 参数: pin 类型number 参数说明引脚序号 mode 类型string 参数说明模式, 可用值: \\"input\\"|\\"output\\"|\\"ou...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/api/gpio.html"}],["meta",{"property":"og:title","content":"模块: GPIO"}],["meta",{"property":"og:description","content":"模块: GPIO 导入 GPIO 模块： GPIO 模块的例子请参考： 模块函数 函数 setMode 原型: setMode (pin:number, mode:string) 设置 GPIO 的工作模式 参数: pin 类型number 参数说明引脚序号 mode 类型string 参数说明模式, 可用值: \\"input\\"|\\"output\\"|\\"ou..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-31T09:42:04.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-31T09:42:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模块: GPIO\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-31T09:42:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"模块函数","slug":"模块函数","link":"#模块函数","children":[{"level":3,"title":"函数  setMode","slug":"函数-setmode","link":"#函数-setmode","children":[]},{"level":3,"title":"函数  pull","slug":"函数-pull","link":"#函数-pull","children":[]},{"level":3,"title":"函数  write","slug":"函数-write","link":"#函数-write","children":[]},{"level":3,"title":"函数  read","slug":"函数-read","link":"#函数-read","children":[]},{"level":3,"title":"函数  adcSetBits","slug":"函数-adcsetbits","link":"#函数-adcsetbits","children":[]},{"level":3,"title":"函数  adcSetChannelAtten","slug":"函数-adcsetchannelatten","link":"#函数-adcsetchannelatten","children":[]},{"level":3,"title":"函数  watch","slug":"函数-watch","link":"#函数-watch","children":[]},{"level":3,"title":"函数  blink","slug":"函数-blink","link":"#函数-blink","children":[]}]}],"git":{"createdTime":1714757277000,"updatedTime":1717148524000,"contributors":[{"name":"alee","email":"alee@chou.im","commits":2},{"name":"alee","email":"alee_zhou@seminstructs.com","commits":1}]},"readingTime":{"minutes":3.65,"words":1095},"filePathRelative":"api/gpio.md","localizedDate":"2024年5月4日","autoDesc":true}');export{k as comp,f as data};
