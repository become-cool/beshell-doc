import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as n,b as l,d as t,e as a,r as i,o}from"./app-CbJW3NnK.js";const d={},m={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},x={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},L={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"};function y(V,e){const r=i("ExternalLinkIcon");return o(),p("div",null,[e[38]||(e[38]=n('<h1 id="类-bar" tabindex="-1"><a class="header-anchor" href="#类-bar"><span>类: Bar</span></a></h1><h2 id="类属性" tabindex="-1"><a class="header-anchor" href="#类属性"><span>类属性</span></a></h2><p style="height:10px;margin:0px;"></p><h3 id="属性-mode" tabindex="-1"><a class="header-anchor" href="#属性-mode"><span><span class="member-header property"></span> 属性 mode</span></a></h3><p>类型: number</p><p>访问: 可读, 可写</p>',6)),l("blockquote",null,[l("p",null,[e[1]||(e[1]=t("该属性是对 LVGL C API ")),e[2]||(e[2]=l("code",null,"lv_bar_get_mode",-1)),e[3]||(e[3]=t(", ")),e[4]||(e[4]=l("code",null,"lv_bar_set_mode",-1)),e[5]||(e[5]=t(" 的封装， 具体用法请参考 ")),l("a",m,[e[0]||(e[0]=t("LVGL文档")),a(r)])])]),e[39]||(e[39]=n('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-value" tabindex="-1"><a class="header-anchor" href="#属性-value"><span><span class="member-header property"></span> 属性 value</span></a></h3><p>类型: number</p><p>访问: 只读</p>',5)),l("blockquote",null,[l("p",null,[e[7]||(e[7]=t("该属性是对 LVGL C API ")),e[8]||(e[8]=l("code",null,"lv_bar_get_value",-1)),e[9]||(e[9]=t(" 的封装， 具体用法请参考 ")),l("a",u,[e[6]||(e[6]=t("LVGL文档")),a(r)])])]),e[40]||(e[40]=n('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-startvalue" tabindex="-1"><a class="header-anchor" href="#属性-startvalue"><span><span class="member-header property"></span> 属性 startValue</span></a></h3><p>类型: number</p><p>访问: 只读</p>',5)),l("blockquote",null,[l("p",null,[e[11]||(e[11]=t("该属性是对 LVGL C API ")),e[12]||(e[12]=l("code",null,"lv_bar_get_start_value",-1)),e[13]||(e[13]=t(" 的封装， 具体用法请参考 ")),l("a",g,[e[10]||(e[10]=t("LVGL文档")),a(r)])])]),e[41]||(e[41]=n('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-minvalue" tabindex="-1"><a class="header-anchor" href="#属性-minvalue"><span><span class="member-header property"></span> 属性 minValue</span></a></h3><p>类型: number</p><p>访问: 只读</p>',5)),l("blockquote",null,[l("p",null,[e[15]||(e[15]=t("该属性是对 LVGL C API ")),e[16]||(e[16]=l("code",null,"lv_bar_get_min_value",-1)),e[17]||(e[17]=t(" 的封装， 具体用法请参考 ")),l("a",h,[e[14]||(e[14]=t("LVGL文档")),a(r)])])]),e[42]||(e[42]=n('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-maxvalue" tabindex="-1"><a class="header-anchor" href="#属性-maxvalue"><span><span class="member-header property"></span> 属性 maxValue</span></a></h3><p>类型: number</p><p>访问: 只读</p>',5)),l("blockquote",null,[l("p",null,[e[19]||(e[19]=t("该属性是对 LVGL C API ")),e[20]||(e[20]=l("code",null,"lv_bar_get_max_value",-1)),e[21]||(e[21]=t(" 的封装， 具体用法请参考 ")),l("a",v,[e[18]||(e[18]=t("LVGL文档")),a(r)])])]),e[43]||(e[43]=n('<p style="height:10px;margin:0px;"></p><h2 id="类方法" tabindex="-1"><a class="header-anchor" href="#类方法"><span>类方法</span></a></h2><p style="height:10px;margin:0px;"></p><h3 id="方法-setvalue" tabindex="-1"><a class="header-anchor" href="#方法-setvalue"><span><span class="member-header function"></span> 方法 setValue</span></a></h3><p>原型: setValue ()</p>',5)),l("blockquote",null,[l("p",null,[e[23]||(e[23]=t("该方法是对 LVGL C API ")),e[24]||(e[24]=l("code",null,"lv_bar_set_value",-1)),e[25]||(e[25]=t(" 的封装，具体用法请参考 ")),l("a",x,[e[22]||(e[22]=t("LVGL文档")),a(r)])])]),e[44]||(e[44]=n('<h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值"><span>返回值:</span></a></h4><p><code>undefined</code></p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-setstartvalue" tabindex="-1"><a class="header-anchor" href="#方法-setstartvalue"><span><span class="member-header function"></span> 方法 setStartValue</span></a></h3><p>原型: setStartValue ()</p>',6)),l("blockquote",null,[l("p",null,[e[27]||(e[27]=t("该方法是对 LVGL C API ")),e[28]||(e[28]=l("code",null,"lv_bar_set_start_value",-1)),e[29]||(e[29]=t(" 的封装，具体用法请参考 ")),l("a",b,[e[26]||(e[26]=t("LVGL文档")),a(r)])])]),e[45]||(e[45]=n('<h4 id="返回值-1" tabindex="-1"><a class="header-anchor" href="#返回值-1"><span>返回值:</span></a></h4><p><code>undefined</code></p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-setrange" tabindex="-1"><a class="header-anchor" href="#方法-setrange"><span><span class="member-header function"></span> 方法 setRange</span></a></h3><p>原型: setRange ()</p>',6)),l("blockquote",null,[l("p",null,[e[31]||(e[31]=t("该方法是对 LVGL C API ")),e[32]||(e[32]=l("code",null,"lv_bar_set_range",-1)),e[33]||(e[33]=t(" 的封装，具体用法请参考 ")),l("a",f,[e[30]||(e[30]=t("LVGL文档")),a(r)])])]),e[46]||(e[46]=n('<h4 id="返回值-2" tabindex="-1"><a class="header-anchor" href="#返回值-2"><span>返回值:</span></a></h4><p><code>undefined</code></p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-issymmetrical" tabindex="-1"><a class="header-anchor" href="#方法-issymmetrical"><span><span class="member-header function"></span> 方法 isSymmetrical</span></a></h3><p>原型: isSymmetrical ()</p>',6)),l("blockquote",null,[l("p",null,[e[35]||(e[35]=t("该方法是对 LVGL C API ")),e[36]||(e[36]=l("code",null,"lv_bar_is_symmetrical",-1)),e[37]||(e[37]=t(" 的封装，具体用法请参考 ")),l("a",L,[e[34]||(e[34]=t("LVGL文档")),a(r)])])]),e[47]||(e[47]=l("h4",{id:"返回值-3",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#返回值-3"},[l("span",null,"返回值:")])],-1)),e[48]||(e[48]=l("p",null,[l("code",null,"undefined")],-1)),e[49]||(e[49]=l("p",{style:{height:"10px",margin:"0px"}},null,-1))])}const I=s(d,[["render",y],["__file","Bar.html.vue"]]),A=JSON.parse('{"path":"/api/lvgl/widgets/Bar.html","title":"类: Bar","lang":"zh-CN","frontmatter":{"headerDepth":2,"description":"类: Bar 类属性 属性 mode 类型: number 访问: 可读, 可写 该属性是对 LVGL C API lv_bar_get_mode, lv_bar_set_mode 的封装， 具体用法请参考 LVGL文档 属性 value 类型: number 访问: 只读 该属性是对 LVGL C API lv_bar_get_value 的封装， ...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/api/lvgl/widgets/Bar.html"}],["meta",{"property":"og:title","content":"类: Bar"}],["meta",{"property":"og:description","content":"类: Bar 类属性 属性 mode 类型: number 访问: 可读, 可写 该属性是对 LVGL C API lv_bar_get_mode, lv_bar_set_mode 的封装， 具体用法请参考 LVGL文档 属性 value 类型: number 访问: 只读 该属性是对 LVGL C API lv_bar_get_value 的封装， ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-30T15:47:51.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-30T15:47:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类: Bar\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-30T15:47:51.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"类属性","slug":"类属性","link":"#类属性","children":[{"level":3,"title":"属性 mode","slug":"属性-mode","link":"#属性-mode","children":[]},{"level":3,"title":"属性 value","slug":"属性-value","link":"#属性-value","children":[]},{"level":3,"title":"属性 startValue","slug":"属性-startvalue","link":"#属性-startvalue","children":[]},{"level":3,"title":"属性 minValue","slug":"属性-minvalue","link":"#属性-minvalue","children":[]},{"level":3,"title":"属性 maxValue","slug":"属性-maxvalue","link":"#属性-maxvalue","children":[]}]},{"level":2,"title":"类方法","slug":"类方法","link":"#类方法","children":[{"level":3,"title":"方法  setValue","slug":"方法-setvalue","link":"#方法-setvalue","children":[]},{"level":3,"title":"方法  setStartValue","slug":"方法-setstartvalue","link":"#方法-setstartvalue","children":[]},{"level":3,"title":"方法  setRange","slug":"方法-setrange","link":"#方法-setrange","children":[]},{"level":3,"title":"方法  isSymmetrical","slug":"方法-issymmetrical","link":"#方法-issymmetrical","children":[]}]}],"git":{"createdTime":1714757277000,"updatedTime":1717084071000,"contributors":[{"name":"alee","email":"alee@chou.im","commits":5}]},"readingTime":{"minutes":1.66,"words":499},"filePathRelative":"api/lvgl/widgets/Bar.md","localizedDate":"2024年5月4日","autoDesc":true}');export{I as comp,A as data};
