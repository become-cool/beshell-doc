import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as h,c as i,b as e,a as t,w as p,e as l,d as n}from"./app-DuvumQGL.js";const o={},d=e("h1",{id:"类-httprequest",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#类-httprequest"},[e("span",null,"类: HTTPRequest")])],-1),c=e("p",null,"HTTPRequest 类用于 mg.Server 回调函数的参数 req , 不需要创建该类:",-1),g=l('<h2 id="类方法" tabindex="-1"><a class="header-anchor" href="#类方法"><span>类方法</span></a></h2><p style="height:10px;margin:0px;"></p><h3 id="方法-method" tabindex="-1"><a class="header-anchor" href="#方法-method"><span><span class="member-header function"></span> 方法 method</span></a></h3><p>原型: method ()</p><p>返回 http 请求的方法</p><p>&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;HEAD&quot;, &quot;OPTIONS&quot;, &quot;TRACE&quot;, &quot;CONNECT&quot; 等</p><h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>string</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-uri" tabindex="-1"><a class="header-anchor" href="#方法-uri"><span><span class="member-header function"></span> 方法 uri</span></a></h3><p>原型: uri ()</p><p>返回 http 请求的 uri</p><h4 id="返回值-1" tabindex="-1"><a class="header-anchor" href="#返回值-1"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>string</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-query" tabindex="-1"><a class="header-anchor" href="#方法-query"><span><span class="member-header function"></span> 方法 query</span></a></h3><p>原型: query ()</p><p>返回 http 请求的 query 部分</p><h4 id="返回值-2" tabindex="-1"><a class="header-anchor" href="#返回值-2"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>string</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-proto" tabindex="-1"><a class="header-anchor" href="#方法-proto"><span><span class="member-header function"></span> 方法 proto</span></a></h3><p>原型: proto ()</p><p>返回 http 请求的协议</p><p>&quot;http&quot;, &quot;https&quot;, &quot;ws&quot;, &quot;wss&quot; 等</p><h4 id="返回值-3" tabindex="-1"><a class="header-anchor" href="#返回值-3"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>string</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-header" tabindex="-1"><a class="header-anchor" href="#方法-header"><span><span class="member-header function"></span> 方法 header</span></a></h3><p>原型: header (name:string)</p><p>返回 http 请求的 header 内容</p><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">name</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>string</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>header的名称，如 &quot;Content-Type&quot;, &quot;Content-Length&quot;, &quot;Host&quot; 等</p></li></ul><h4 id="返回值-4" tabindex="-1"><a class="header-anchor" href="#返回值-4"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>string</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-allheaders" tabindex="-1"><a class="header-anchor" href="#方法-allheaders"><span><span class="member-header function"></span> 方法 allHeaders</span></a></h3><p>原型: allHeaders ()</p><p>返回 http 请求的所有 header 内容</p><h4 id="返回值-5" tabindex="-1"><a class="header-anchor" href="#返回值-5"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>object</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-body" tabindex="-1"><a class="header-anchor" href="#方法-body"><span><span class="member-header function"></span> 方法 body</span></a></h3><p>原型: body ()</p><p>返回 http 请求的 body 内容</p><h4 id="返回值-6" tabindex="-1"><a class="header-anchor" href="#返回值-6"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>string</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-chunk" tabindex="-1"><a class="header-anchor" href="#方法-chunk"><span><span class="member-header function"></span> 方法 chunk</span></a></h3><p>原型: chunk ()</p><p>返回 http 请求的 body 的 chunk 内容</p><p>当 body 比较长时，会分片触发事件，该方法返回事件回调时 chunk 内容</p><h4 id="返回值-7" tabindex="-1"><a class="header-anchor" href="#返回值-7"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>string</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-raw" tabindex="-1"><a class="header-anchor" href="#方法-raw"><span><span class="member-header function"></span> 方法 raw</span></a></h3><p>原型: raw ()</p><p>返回 http 请求的原始数据内容</p><h4 id="返回值-8" tabindex="-1"><a class="header-anchor" href="#返回值-8"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>string</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-rawhead" tabindex="-1"><a class="header-anchor" href="#方法-rawhead"><span><span class="member-header function"></span> 方法 rawHead</span></a></h3><p>原型: rawHead ()</p><p>返回 http 请求原始的 header 内容</p><h4 id="返回值-9" tabindex="-1"><a class="header-anchor" href="#返回值-9"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>string</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-matchuri" tabindex="-1"><a class="header-anchor" href="#方法-matchuri"><span><span class="member-header function"></span> 方法 matchURI</span></a></h3><p>原型: matchURI (pattern:string)</p><p>由 mg 提供的 uri 匹配检查函数</p><p>该函数是对 Mongoose mg_http_match_uri api 的封装</p><h4 id="参数-1" tabindex="-1"><a class="header-anchor" href="#参数-1"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">pattern</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>string</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>uri匹配模式</p></li></ul><h4 id="返回值-10" tabindex="-1"><a class="header-anchor" href="#返回值-10"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>bool</p><p style="height:10px;margin:0px;"></p>',86);function u(m,x){const a=r("RouteLink");return h(),i("div",null,[d,c,e("ul",null,[e("li",null,[e("p",null,[t(a,{to:"/api/mg/#%E5%87%BD%E6%95%B0-listenhttp"},{default:p(()=>[n("mg.listenHttp()")]),_:1})])]),e("li",null,[e("p",null,[t(a,{to:"/api/mg/#%E5%87%BD%E6%95%B0-connect"},{default:p(()=>[n("mg.connect()")]),_:1})])]),e("li",null,[e("p",null,[t(a,{to:"/api/mg/Server.html#%E6%96%B9%E6%B3%95-sethandler"},{default:p(()=>[n("mg.Server.setHandler()")]),_:1})])])]),g])}const f=s(o,[["render",u],["__file","HTTPRequest.html.vue"]]),q=JSON.parse('{"path":"/api/mg/HTTPRequest.html","title":"类: HTTPRequest","lang":"zh-CN","frontmatter":{"headerDepth":2,"description":"类: HTTPRequest HTTPRequest 类用于 mg.Server 回调函数的参数 req , 不需要创建该类: 类方法 方法 method 原型: method () 返回 http 请求的方法 \\"GET\\", \\"POST\\", \\"PUT\\", \\"DELETE\\", \\"HEAD\\", \\"OPTIONS\\", \\"TRACE\\", \\"CONNECT\\" 等...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/api/mg/HTTPRequest.html"}],["meta",{"property":"og:title","content":"类: HTTPRequest"}],["meta",{"property":"og:description","content":"类: HTTPRequest HTTPRequest 类用于 mg.Server 回调函数的参数 req , 不需要创建该类: 类方法 方法 method 原型: method () 返回 http 请求的方法 \\"GET\\", \\"POST\\", \\"PUT\\", \\"DELETE\\", \\"HEAD\\", \\"OPTIONS\\", \\"TRACE\\", \\"CONNECT\\" 等..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类: HTTPRequest\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"类方法","slug":"类方法","link":"#类方法","children":[{"level":3,"title":"方法  method","slug":"方法-method","link":"#方法-method","children":[]},{"level":3,"title":"方法  uri","slug":"方法-uri","link":"#方法-uri","children":[]},{"level":3,"title":"方法  query","slug":"方法-query","link":"#方法-query","children":[]},{"level":3,"title":"方法  proto","slug":"方法-proto","link":"#方法-proto","children":[]},{"level":3,"title":"方法  header","slug":"方法-header","link":"#方法-header","children":[]},{"level":3,"title":"方法  allHeaders","slug":"方法-allheaders","link":"#方法-allheaders","children":[]},{"level":3,"title":"方法  body","slug":"方法-body","link":"#方法-body","children":[]},{"level":3,"title":"方法  chunk","slug":"方法-chunk","link":"#方法-chunk","children":[]},{"level":3,"title":"方法  raw","slug":"方法-raw","link":"#方法-raw","children":[]},{"level":3,"title":"方法  rawHead","slug":"方法-rawhead","link":"#方法-rawhead","children":[]},{"level":3,"title":"方法  matchURI","slug":"方法-matchuri","link":"#方法-matchuri","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.56,"words":767},"filePathRelative":"api/mg/HTTPRequest.md","autoDesc":true}');export{f as comp,q as data};
