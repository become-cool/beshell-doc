import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as r,c as o,a as c,w as a,b as n,d as s,e as d}from"./app-CLOzLYWj.js";const h={},u=n("h1",{id:"模块-文件系统",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#模块-文件系统"},[n("span",null,"模块: 文件系统")])],-1),y=n("p",null,[s("导入 "),n("code",null,"文件系统"),s(" 模块：")],-1),g=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token keyword"},"as"),s(" wifi "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'文件系统'"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),k=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(` 文件系统
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),b=d(`<h2 id="模块函数" tabindex="-1"><a class="header-anchor" href="#模块函数"><span>模块函数</span></a></h2><p style="height:10px;margin:0px;"></p><h3 id="函数-mkdirsync" tabindex="-1"><a class="header-anchor" href="#函数-mkdirsync"><span><span class="member-header function"></span> 函数 mkdirSync</span></a></h3><p>原型: mkdirSync (path:string, recursive:bool=false)</p><p>同步创建目录</p><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">path</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>string</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>路径</p></li><li><p><span style="color:#007acc;">recursive=false</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>bool</p><p><span style="display:inline-block;width:100px;"><strong>默认值</strong></span>false</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>是否递归创建目录</p></li></ul><h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>bool</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-rmdirsync" tabindex="-1"><a class="header-anchor" href="#函数-rmdirsync"><span><span class="member-header function"></span> 函数 rmdirSync</span></a></h3><p>原型: rmdirSync (path:string)</p><p>同步删除目录。如果目录非空返回 false。</p><h4 id="参数-1" tabindex="-1"><a class="header-anchor" href="#参数-1"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">path</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>string</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>路径</p></li></ul><h4 id="返回值-1" tabindex="-1"><a class="header-anchor" href="#返回值-1"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>bool</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-unlinksync" tabindex="-1"><a class="header-anchor" href="#函数-unlinksync"><span><span class="member-header function"></span> 函数 unlinkSync</span></a></h3><p>原型: unlinkSync (path:string)</p><p>同步删除文件</p><h4 id="参数-2" tabindex="-1"><a class="header-anchor" href="#参数-2"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">path</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>string</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>路径</p></li></ul><h4 id="返回值-2" tabindex="-1"><a class="header-anchor" href="#返回值-2"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>bool</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-readfilesync" tabindex="-1"><a class="header-anchor" href="#函数-readfilesync"><span><span class="member-header function"></span> 函数 readFileSync</span></a></h3><p>原型: readFileSync (path:string, readlen:number=-1, offset:number=0)</p><p>同步读取文件</p><blockquote><p>函数返回的是一个 ArrayBuffer 对象，可以使用 ArrayBuffer.prototype.asString() 方法转换为字符串，例如：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>let content = fs.readFileSync(&quot;~/foo.bar&quot;).asString()
console.log(content)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h4 id="参数-3" tabindex="-1"><a class="header-anchor" href="#参数-3"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">path</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>string</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>路径</p></li><li><p><span style="color:#007acc;">readlen=-1</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>number</p><p><span style="display:inline-block;width:100px;"><strong>默认值</strong></span>-1</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>读取长度，-1表示全文</p></li><li><p><span style="color:#007acc;">offset=0</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>number</p><p><span style="display:inline-block;width:100px;"><strong>默认值</strong></span>0</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>开始位置</p></li></ul><h4 id="返回值-3" tabindex="-1"><a class="header-anchor" href="#返回值-3"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>ArrayBuffer</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-writefilesync" tabindex="-1"><a class="header-anchor" href="#函数-writefilesync"><span><span class="member-header function"></span> 函数 writeFileSync</span></a></h3><p>原型: writeFileSync (path:string, data:string|ArrayBuffer, append:bool=false)</p><p>同步写入文件，返回写入字节数量</p><h4 id="参数-4" tabindex="-1"><a class="header-anchor" href="#参数-4"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">path</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>string</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>路径</p></li><li><p><span style="color:#007acc;">data</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>string, ArrayBuffer</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>数据内容</p></li><li><p><span style="color:#007acc;">append=false</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>bool</p><p><span style="display:inline-block;width:100px;"><strong>默认值</strong></span>false</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>是否追加写入</p></li></ul><h4 id="返回值-4" tabindex="-1"><a class="header-anchor" href="#返回值-4"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>number</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-readdirsync" tabindex="-1"><a class="header-anchor" href="#函数-readdirsync"><span><span class="member-header function"></span> 函数 readdirSync</span></a></h3><p>原型: readdirSync (path:string, detail:bool=false)</p><p>同步读取目录下的所有成员。</p><p>如果 detail 参数为 false，仅返回文件名数字。</p><p>如果 detail 参数为 true，返回一个数组，数组元素为对象，对象格式如下：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> string <span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;file&quot;</span><span class="token operator">|</span><span class="token string">&quot;dir&quot;</span><span class="token operator">|</span><span class="token string">&quot;unknown&quot;</span> <span class="token punctuation">,</span>
        <span class="token literal-property property">size</span><span class="token operator">:</span> number
    <span class="token punctuation">}</span> <span class="token punctuation">,</span>
    <span class="token operator">...</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-5" tabindex="-1"><a class="header-anchor" href="#参数-5"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">path</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>string</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>路径</p></li><li><p><span style="color:#007acc;">detail=false</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>bool</p><p><span style="display:inline-block;width:100px;"><strong>默认值</strong></span>false</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>是否范围详细信息</p></li></ul><h4 id="返回值-5" tabindex="-1"><a class="header-anchor" href="#返回值-5"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>string[]</p><p>| object[]</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-statsync" tabindex="-1"><a class="header-anchor" href="#函数-statsync"><span><span class="member-header function"></span> 函数 statSync</span></a></h3><p>原型: statSync (path:string)</p><p>同步返回文件状态 如果文件不存在,返回 null; 否则返回包含详细信息的对象</p><p>返回对象格式:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">dev</span><span class="token operator">:</span>number<span class="token punctuation">,</span>
    <span class="token literal-property property">ino</span><span class="token operator">:</span>number<span class="token punctuation">,</span>
    <span class="token literal-property property">mode</span><span class="token operator">:</span>number<span class="token punctuation">,</span>
    <span class="token literal-property property">size</span><span class="token operator">:</span>number<span class="token punctuation">,</span>
    <span class="token literal-property property">isDir</span><span class="token operator">:</span>bool<span class="token punctuation">,</span>
    <span class="token literal-property property">atime</span><span class="token operator">:</span>number<span class="token punctuation">,</span>
    <span class="token literal-property property">mtime</span><span class="token operator">:</span>number<span class="token punctuation">,</span>
    <span class="token literal-property property">ctime</span><span class="token operator">:</span>number
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-6" tabindex="-1"><a class="header-anchor" href="#参数-6"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">path</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>string</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>文件路径</p></li></ul><h4 id="返回值-6" tabindex="-1"><a class="header-anchor" href="#返回值-6"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>null</p><p>| object</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-existssync" tabindex="-1"><a class="header-anchor" href="#函数-existssync"><span><span class="member-header function"></span> 函数 existsSync</span></a></h3><p>原型: existsSync (path:string)</p><p>同步返回路径是否存在</p><h4 id="参数-7" tabindex="-1"><a class="header-anchor" href="#参数-7"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">path</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>string</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>路径</p></li></ul><h4 id="返回值-7" tabindex="-1"><a class="header-anchor" href="#返回值-7"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>bool</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-isfilesync" tabindex="-1"><a class="header-anchor" href="#函数-isfilesync"><span><span class="member-header function"></span> 函数 isFileSync</span></a></h3><p>原型: isFileSync (path:string)</p><p>同步返回路径是否存在</p><h4 id="参数-8" tabindex="-1"><a class="header-anchor" href="#参数-8"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">path</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>string</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>路径</p></li></ul><h4 id="返回值-8" tabindex="-1"><a class="header-anchor" href="#返回值-8"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>bool</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-isdirsync" tabindex="-1"><a class="header-anchor" href="#函数-isdirsync"><span><span class="member-header function"></span> 函数 isDirSync</span></a></h3><p>原型: isDirSync (path:string)</p><p>同步返回路径是否存在</p><h4 id="参数-9" tabindex="-1"><a class="header-anchor" href="#参数-9"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">path</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>string</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>路径</p></li></ul><h4 id="返回值-9" tabindex="-1"><a class="header-anchor" href="#返回值-9"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>bool</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-open" tabindex="-1"><a class="header-anchor" href="#函数-open"><span><span class="member-header function"></span> 函数 open</span></a></h3><p>原型: open (path, mode=&quot;rw&quot;)</p><p>打开文件，返回文件句柄，用于后续操作</p><h4 id="参数-10" tabindex="-1"><a class="header-anchor" href="#参数-10"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">path</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>undefined</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>string 文件路径</p></li><li><p><span style="color:#007acc;">mode=&quot;rw&quot;</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>undefined</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>string 打开方式</p></li></ul><h4 id="返回值-10" tabindex="-1"><a class="header-anchor" href="#返回值-10"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>number</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-read" tabindex="-1"><a class="header-anchor" href="#函数-read"><span><span class="member-header function"></span> 函数 read</span></a></h3><p>原型: read (handle, length)</p><p>从文件中读指定长度的数据, 如果遇到错误抛出异常</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>open<span class="token punctuation">,</span>read<span class="token punctuation">,</span>close<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;fs&quot;</span>

<span class="token keyword">const</span> handle <span class="token operator">=</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;/sdcard/test.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">read</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;readed string:&quot;</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token function">close</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-11" tabindex="-1"><a class="header-anchor" href="#参数-11"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">handle</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>undefined</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>number 由open()返回的文件句柄</p></li><li><p><span style="color:#007acc;">length</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>undefined</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>number 读取长度</p></li></ul><h4 id="返回值-11" tabindex="-1"><a class="header-anchor" href="#返回值-11"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>ArrayBuffer</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-write" tabindex="-1"><a class="header-anchor" href="#函数-write"><span><span class="member-header function"></span> 函数 write</span></a></h3><p>原型: write (handle, data)</p><p>向文件写入数据,返回写入的字节数</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>open<span class="token punctuation">,</span>write<span class="token punctuation">,</span>close<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;fs&quot;</span>

<span class="token keyword">const</span> handle <span class="token operator">=</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;/sdcard/test.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token keyword">let</span> wrote <span class="token operator">=</span> <span class="token function">write</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;wrote bytes:&quot;</span><span class="token punctuation">,</span>wrote<span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token function">close</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-12" tabindex="-1"><a class="header-anchor" href="#参数-12"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">handle</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>undefined</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>number 由open()返回的文件句柄</p></li><li><p><span style="color:#007acc;">data</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>undefined</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>ArrayBuffer|string 写入的数据</p></li></ul><h4 id="返回值-12" tabindex="-1"><a class="header-anchor" href="#返回值-12"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>number</p><p>写入的字节数</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-seek" tabindex="-1"><a class="header-anchor" href="#函数-seek"><span><span class="member-header function"></span> 函数 seek</span></a></h3><p>原型: seek (handle, offset, whence)</p><p>移动文件指针到指定位置，影响 read/write 操作</p><h4 id="参数-13" tabindex="-1"><a class="header-anchor" href="#参数-13"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">handle</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>undefined</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>number 由open()返回的文件句柄</p></li><li><p><span style="color:#007acc;">offset</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>undefined</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>number 偏移量</p></li><li><p><span style="color:#007acc;">whence</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>undefined</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>0|1|2 0:从文件头开始，1:从当前位置开始，2:从文件尾开始</p></li></ul><h4 id="返回值-13" tabindex="-1"><a class="header-anchor" href="#返回值-13"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>number</p><p>返回0表示成功，非0表示失败原因</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-flush" tabindex="-1"><a class="header-anchor" href="#函数-flush"><span><span class="member-header function"></span> 函数 flush</span></a></h3><p>原型: flush (handle)</p><p>刷新文件缓冲区，将数据写入磁盘 (esp32 平台上没有实际效果)</p><h4 id="参数-14" tabindex="-1"><a class="header-anchor" href="#参数-14"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">handle</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>undefined</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>number 由open()返回的文件句柄</p></li></ul><h4 id="返回值-14" tabindex="-1"><a class="header-anchor" href="#返回值-14"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>number</p><p>返回0表示成功，非0表示失败原因</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-sync" tabindex="-1"><a class="header-anchor" href="#函数-sync"><span><span class="member-header function"></span> 函数 sync</span></a></h3><p>原型: sync (handle)</p><p>将数据立即写入存储介质（esp32 平台上没有实际效果）</p><h4 id="参数-15" tabindex="-1"><a class="header-anchor" href="#参数-15"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">handle</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>undefined</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>number 由open()返回的文件句柄</p></li></ul><h4 id="返回值-15" tabindex="-1"><a class="header-anchor" href="#返回值-15"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>number</p><p>返回0表示成功，非0表示失败原因</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-close" tabindex="-1"><a class="header-anchor" href="#函数-close"><span><span class="member-header function"></span> 函数 close</span></a></h3><p>原型: close (handle)</p><p>关闭 open 打开的文件句柄</p><h4 id="参数-16" tabindex="-1"><a class="header-anchor" href="#参数-16"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">handle</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>undefined</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>number 由open()返回的文件句柄</p></li></ul><h4 id="返回值-16" tabindex="-1"><a class="header-anchor" href="#返回值-16"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>number</p><p>返回0表示成功，非0表示失败原因</p><p style="height:10px;margin:0px;"></p>`,169);function x(m,f){const t=i("CodeTabs");return r(),o("div",null,[u,y,c(t,{id:"6",data:[{id:"在.js文件中"},{id:"在REPL命令行下"}]},{title0:a(({value:p,isActive:e})=>[s("在.js文件中")]),title1:a(({value:p,isActive:e})=>[s("在REPL命令行下")]),tab0:a(({value:p,isActive:e})=>[g]),tab1:a(({value:p,isActive:e})=>[k]),_:1}),b])}const S=l(h,[["render",x],["__file","fs.html.vue"]]),q=JSON.parse('{"path":"/api/fs.html","title":"模块: 文件系统","lang":"zh-CN","frontmatter":{"headerDepth":2,"description":"模块: 文件系统 导入 文件系统 模块： 模块函数 函数 mkdirSync 原型: mkdirSync (path:string, recursive:bool=false) 同步创建目录 参数: path 类型string 参数说明路径 recursive=false 类型bool 默认值false 参数说明是否递归创建目录 返回值: 类型bool...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/api/fs.html"}],["meta",{"property":"og:title","content":"模块: 文件系统"}],["meta",{"property":"og:description","content":"模块: 文件系统 导入 文件系统 模块： 模块函数 函数 mkdirSync 原型: mkdirSync (path:string, recursive:bool=false) 同步创建目录 参数: path 类型string 参数说明路径 recursive=false 类型bool 默认值false 参数说明是否递归创建目录 返回值: 类型bool..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-05T14:12:34.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-05T14:12:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模块: 文件系统\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-05T14:12:34.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"模块函数","slug":"模块函数","link":"#模块函数","children":[{"level":3,"title":"函数  mkdirSync","slug":"函数-mkdirsync","link":"#函数-mkdirsync","children":[]},{"level":3,"title":"函数  rmdirSync","slug":"函数-rmdirsync","link":"#函数-rmdirsync","children":[]},{"level":3,"title":"函数  unlinkSync","slug":"函数-unlinksync","link":"#函数-unlinksync","children":[]},{"level":3,"title":"函数  readFileSync","slug":"函数-readfilesync","link":"#函数-readfilesync","children":[]},{"level":3,"title":"函数  writeFileSync","slug":"函数-writefilesync","link":"#函数-writefilesync","children":[]},{"level":3,"title":"函数  readdirSync","slug":"函数-readdirsync","link":"#函数-readdirsync","children":[]},{"level":3,"title":"函数  statSync","slug":"函数-statsync","link":"#函数-statsync","children":[]},{"level":3,"title":"函数  existsSync","slug":"函数-existssync","link":"#函数-existssync","children":[]},{"level":3,"title":"函数  isFileSync","slug":"函数-isfilesync","link":"#函数-isfilesync","children":[]},{"level":3,"title":"函数  isDirSync","slug":"函数-isdirsync","link":"#函数-isdirsync","children":[]},{"level":3,"title":"函数  open","slug":"函数-open","link":"#函数-open","children":[]},{"level":3,"title":"函数  read","slug":"函数-read","link":"#函数-read","children":[]},{"level":3,"title":"函数  write","slug":"函数-write","link":"#函数-write","children":[]},{"level":3,"title":"函数  seek","slug":"函数-seek","link":"#函数-seek","children":[]},{"level":3,"title":"函数  flush","slug":"函数-flush","link":"#函数-flush","children":[]},{"level":3,"title":"函数  sync","slug":"函数-sync","link":"#函数-sync","children":[]},{"level":3,"title":"函数  close","slug":"函数-close","link":"#函数-close","children":[]}]}],"git":{"createdTime":1714757277000,"updatedTime":1714918354000,"contributors":[{"name":"alee","email":"alee@chou.im","commits":2}]},"readingTime":{"minutes":7.94,"words":2383},"filePathRelative":"api/fs.md","localizedDate":"2024年5月4日","autoDesc":true}');export{S as comp,q as data};
