import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as r,b as t,d as l,e as s,r as i,o as a}from"./app-CbJW3NnK.js";const d={},x={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},L={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"};function f(v,e){const n=i("ExternalLinkIcon");return a(),p("div",null,[e[36]||(e[36]=r('<h1 id="类-label" tabindex="-1"><a class="header-anchor" href="#类-label"><span>类: Label</span></a></h1><h2 id="类属性" tabindex="-1"><a class="header-anchor" href="#类属性"><span>类属性</span></a></h2><p style="height:10px;margin:0px;"></p><h3 id="属性-text" tabindex="-1"><a class="header-anchor" href="#属性-text"><span><span class="member-header property"></span> 属性 text</span></a></h3><p>类型: number</p><p>访问: 可读, 可写</p>',6)),t("blockquote",null,[t("p",null,[e[1]||(e[1]=l("该属性是对 LVGL C API ")),e[2]||(e[2]=t("code",null,"lv_label_get_text",-1)),e[3]||(e[3]=l(", ")),e[4]||(e[4]=t("code",null,"lv_label_set_text",-1)),e[5]||(e[5]=l(" 的封装， 具体用法请参考 ")),t("a",x,[e[0]||(e[0]=l("LVGL文档")),s(n)])])]),e[37]||(e[37]=r('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-textstatic" tabindex="-1"><a class="header-anchor" href="#属性-textstatic"><span><span class="member-header property"></span> 属性 textStatic</span></a></h3><p>类型:</p><p>访问: 只写</p>',5)),t("blockquote",null,[t("p",null,[e[7]||(e[7]=l("该属性是对 LVGL C API ")),e[8]||(e[8]=t("code",null,"lv_label_set_text_static",-1)),e[9]||(e[9]=l(" 的封装， 具体用法请参考 ")),t("a",m,[e[6]||(e[6]=l("LVGL文档")),s(n)])])]),e[38]||(e[38]=r('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-longmode" tabindex="-1"><a class="header-anchor" href="#属性-longmode"><span><span class="member-header property"></span> 属性 longMode</span></a></h3><p>类型: number</p><p>访问: 可读, 可写</p>',5)),t("blockquote",null,[t("p",null,[e[11]||(e[11]=l("该属性是对 LVGL C API ")),e[12]||(e[12]=t("code",null,"lv_label_get_long_mode",-1)),e[13]||(e[13]=l(", ")),e[14]||(e[14]=t("code",null,"lv_label_set_long_mode",-1)),e[15]||(e[15]=l(" 的封装， 具体用法请参考 ")),t("a",g,[e[10]||(e[10]=l("LVGL文档")),s(n)])])]),e[39]||(e[39]=r('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-textselectionstart" tabindex="-1"><a class="header-anchor" href="#属性-textselectionstart"><span><span class="member-header property"></span> 属性 textSelectionStart</span></a></h3><p>类型: number</p><p>访问: 可读, 可写</p>',5)),t("blockquote",null,[t("p",null,[e[17]||(e[17]=l("该属性是对 LVGL C API ")),e[18]||(e[18]=t("code",null,"lv_label_get_text_selection_start",-1)),e[19]||(e[19]=l(", ")),e[20]||(e[20]=t("code",null,"lv_label_set_text_selection_start",-1)),e[21]||(e[21]=l(" 的封装， 具体用法请参考 ")),t("a",u,[e[16]||(e[16]=l("LVGL文档")),s(n)])])]),e[40]||(e[40]=r('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-textselectionend" tabindex="-1"><a class="header-anchor" href="#属性-textselectionend"><span><span class="member-header property"></span> 属性 textSelectionEnd</span></a></h3><p>类型: number</p><p>访问: 可读, 可写</p>',5)),t("blockquote",null,[t("p",null,[e[23]||(e[23]=l("该属性是对 LVGL C API ")),e[24]||(e[24]=t("code",null,"lv_label_get_text_selection_end",-1)),e[25]||(e[25]=l(", ")),e[26]||(e[26]=t("code",null,"lv_label_set_text_selection_end",-1)),e[27]||(e[27]=l(" 的封装， 具体用法请参考 ")),t("a",b,[e[22]||(e[22]=l("LVGL文档")),s(n)])])]),e[41]||(e[41]=r('<p style="height:10px;margin:0px;"></p><h2 id="类方法" tabindex="-1"><a class="header-anchor" href="#类方法"><span>类方法</span></a></h2><p style="height:10px;margin:0px;"></p><h3 id="方法-instext" tabindex="-1"><a class="header-anchor" href="#方法-instext"><span><span class="member-header function"></span> 方法 insText</span></a></h3><p>原型: insText ()</p>',5)),t("blockquote",null,[t("p",null,[e[29]||(e[29]=l("该方法是对 LVGL C API ")),e[30]||(e[30]=t("code",null,"lv_label_ins_text",-1)),e[31]||(e[31]=l(" 的封装，具体用法请参考 ")),t("a",h,[e[28]||(e[28]=l("LVGL文档")),s(n)])])]),e[42]||(e[42]=r('<h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值"><span>返回值:</span></a></h4><p><code>undefined</code></p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-cuttext" tabindex="-1"><a class="header-anchor" href="#方法-cuttext"><span><span class="member-header function"></span> 方法 cutText</span></a></h3><p>原型: cutText ()</p>',6)),t("blockquote",null,[t("p",null,[e[33]||(e[33]=l("该方法是对 LVGL C API ")),e[34]||(e[34]=t("code",null,"lv_label_cut_text",-1)),e[35]||(e[35]=l(" 的封装，具体用法请参考 ")),t("a",L,[e[32]||(e[32]=l("LVGL文档")),s(n)])])]),e[43]||(e[43]=t("h4",{id:"返回值-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#返回值-1"},[t("span",null,"返回值:")])],-1)),e[44]||(e[44]=t("p",null,[t("code",null,"undefined")],-1)),e[45]||(e[45]=t("p",{style:{height:"10px",margin:"0px"}},null,-1))])}const V=o(d,[["render",f],["__file","Label.html.vue"]]),G=JSON.parse('{"path":"/api/lvgl/widgets/Label.html","title":"类: Label","lang":"zh-CN","frontmatter":{"headerDepth":2,"description":"类: Label 类属性 属性 text 类型: number 访问: 可读, 可写 该属性是对 LVGL C API lv_label_get_text, lv_label_set_text 的封装， 具体用法请参考 LVGL文档 属性 textStatic 类型: 访问: 只写 该属性是对 LVGL C API lv_label_set_text_...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/api/lvgl/widgets/Label.html"}],["meta",{"property":"og:title","content":"类: Label"}],["meta",{"property":"og:description","content":"类: Label 类属性 属性 text 类型: number 访问: 可读, 可写 该属性是对 LVGL C API lv_label_get_text, lv_label_set_text 的封装， 具体用法请参考 LVGL文档 属性 textStatic 类型: 访问: 只写 该属性是对 LVGL C API lv_label_set_text_..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-30T15:47:51.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-30T15:47:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类: Label\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-30T15:47:51.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"类属性","slug":"类属性","link":"#类属性","children":[{"level":3,"title":"属性 text","slug":"属性-text","link":"#属性-text","children":[]},{"level":3,"title":"属性 textStatic","slug":"属性-textstatic","link":"#属性-textstatic","children":[]},{"level":3,"title":"属性 longMode","slug":"属性-longmode","link":"#属性-longmode","children":[]},{"level":3,"title":"属性 textSelectionStart","slug":"属性-textselectionstart","link":"#属性-textselectionstart","children":[]},{"level":3,"title":"属性 textSelectionEnd","slug":"属性-textselectionend","link":"#属性-textselectionend","children":[]}]},{"level":2,"title":"类方法","slug":"类方法","link":"#类方法","children":[{"level":3,"title":"方法  insText","slug":"方法-instext","link":"#方法-instext","children":[]},{"level":3,"title":"方法  cutText","slug":"方法-cuttext","link":"#方法-cuttext","children":[]}]}],"git":{"createdTime":1714757277000,"updatedTime":1717084071000,"contributors":[{"name":"alee","email":"alee@chou.im","commits":5}]},"readingTime":{"minutes":1.33,"words":399},"filePathRelative":"api/lvgl/widgets/Label.md","localizedDate":"2024年5月4日","autoDesc":true}');export{V as comp,G as data};
