import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o,c as r,d as c,w as n,a,b as s,e as d}from"./app-5u_q2cEL.js";const h={},g=a("h1",{id:"模块-wifi",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#模块-wifi"},[a("span",null,"模块: WiFi")])],-1),m=a("p",null,[s("导入 "),a("code",null,"WiFi"),s(" 模块：")],-1),u=a("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[a("pre",{class:"language-javascript"},[a("code",null,[a("span",{class:"token keyword"},"import"),s(),a("span",{class:"token operator"},"*"),s(),a("span",{class:"token keyword"},"as"),s(" wifi "),a("span",{class:"token keyword"},"from"),s(),a("span",{class:"token string"},"'WiFi'"),s(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),b=a("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[a("pre",{class:"language-javascript"},[a("code",null,[a("span",{class:"token keyword"},"import"),s(` WiFi
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),k=d(`<h2 id="模块函数" tabindex="-1"><a class="header-anchor" href="#模块函数"><span>模块函数</span></a></h2><p style="height:10px;margin:0px;"></p><h3 id="函数-setps" tabindex="-1"><a class="header-anchor" href="#函数-setps"><span><span class="member-header function"></span> 函数 setPS</span></a></h3><p>原型: setPS (mode:0|1|2)</p><p>设置 wifi 的节能模式 (PowerSafe)</p><p>参数 mode :</p><ul><li>0 关闭节能模式</li><li>1 最小</li><li>2 最大</li></ul><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">mode</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>0, 1, 2</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span></p></li></ul><h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>number</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-setmode" tabindex="-1"><a class="header-anchor" href="#函数-setmode"><span><span class="member-header function"></span> 函数 setMode</span></a></h3><p>原型: setMode (mode:0|1|2|3)</p><p>设置 wifi 的工作模式</p><p>参数 mode :</p><ul><li>0 未启动</li><li>1 STA</li><li>2 AP</li><li>3 STA + AP</li></ul><p>返回 0 表示 api 调用成功, 返回非 0 表示错误代码</p><h4 id="参数-1" tabindex="-1"><a class="header-anchor" href="#参数-1"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">mode</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>0, 1, 2, 3</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span></p></li></ul><h4 id="返回值-1" tabindex="-1"><a class="header-anchor" href="#返回值-1"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>number</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-getmode" tabindex="-1"><a class="header-anchor" href="#函数-getmode"><span><span class="member-header function"></span> 函数 getMode</span></a></h3><p>原型: getMode ()</p><p>返回设置 wifi 的工作模式</p><ul><li>0 未启动</li><li>1 STA</li><li>2 AP</li><li>3 STA + AP</li></ul><h4 id="返回值-2" tabindex="-1"><a class="header-anchor" href="#返回值-2"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>number</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-setapconfig" tabindex="-1"><a class="header-anchor" href="#函数-setapconfig"><span><span class="member-header function"></span> 函数 setAPConfig</span></a></h3><p>原型: setAPConfig (config:object)</p><p>设置 wifi AP 模式的参数</p><p>参数 mode :</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">ssid</span><span class="token operator">:</span> string <span class="token punctuation">,</span>
    password<span class="token operator">?</span><span class="token operator">:</span> string <span class="token punctuation">,</span>
    <span class="token string">&quot;threshold.authmode&quot;</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token number">0</span><span class="token operator">-</span><span class="token number">8</span> <span class="token punctuation">,</span>
    channel<span class="token operator">?</span><span class="token operator">:</span> <span class="token number">1</span><span class="token operator">-</span><span class="token number">13</span> <span class="token punctuation">,</span>
    max_connection<span class="token operator">?</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">4</span> <span class="token punctuation">,</span> <span class="token comment">// 最大客户连接数</span>
    ssid_hidden<span class="token operator">?</span><span class="token operator">:</span>bool <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token punctuation">,</span>    <span class="token comment">// 热点不会被扫描到</span>
    beacon_interval<span class="token operator">?</span><span class="token operator">:</span> number <span class="token punctuation">,</span>
    pairwise_cipher<span class="token operator">?</span><span class="token operator">:</span> number <span class="token punctuation">,</span>
    ftm_responder<span class="token operator">?</span><span class="token operator">:</span> bool <span class="token punctuation">,</span>        <span class="token comment">// Enable FTM Responder mode</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果 <code>password</code> 为空, 则 <code>threshold.authmode</code> 自动设置为 <code>WIFI_AUTH_OPEN</code></p><p>返回 0 表示 api 调用成功, 返回非 0 表示错误代码</p><h4 id="参数-2" tabindex="-1"><a class="header-anchor" href="#参数-2"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">config</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>object</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span></p></li></ul><h4 id="返回值-3" tabindex="-1"><a class="header-anchor" href="#返回值-3"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>number</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-setstaconfig" tabindex="-1"><a class="header-anchor" href="#函数-setstaconfig"><span><span class="member-header function"></span> 函数 setStaConfig</span></a></h3><p>原型: setStaConfig (config:object)</p><p>设置 wifi STA 模式的参数</p><p>参数 mode :</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">ssid</span><span class="token operator">:</span> string <span class="token punctuation">,</span>
    password<span class="token operator">?</span><span class="token operator">:</span> string <span class="token punctuation">,</span>
    <span class="token string">&quot;threshold.authmode&quot;</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token number">0</span><span class="token operator">-</span><span class="token number">8</span> <span class="token punctuation">,</span>
    scan_method<span class="token operator">?</span><span class="token operator">:</span> <span class="token number">0</span><span class="token operator">|</span><span class="token number">1</span> <span class="token punctuation">,</span>
    channel<span class="token operator">?</span><span class="token operator">:</span> <span class="token number">1</span><span class="token operator">-</span><span class="token number">13</span> <span class="token punctuation">,</span>
    listen_interval<span class="token operator">?</span><span class="token operator">:</span>number <span class="token operator">=</span> <span class="token number">3</span> <span class="token punctuation">,</span>
    sort_method<span class="token operator">?</span><span class="token operator">:</span> <span class="token number">0</span><span class="token operator">|</span><span class="token number">1</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">,</span>       <span class="token comment">// sort the connect AP in the list by rssi or security mode</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果 <code>password</code> 为空, 则 <code>threshold.authmode</code> 自动设置为 <code>WIFI_AUTH_OPEN</code></p><p>返回 0 表示 api 调用成功, 返回非 0 表示错误代码</p><h4 id="参数-3" tabindex="-1"><a class="header-anchor" href="#参数-3"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">config</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>object</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span></p></li></ul><h4 id="返回值-4" tabindex="-1"><a class="header-anchor" href="#返回值-4"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>number</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-getconfig" tabindex="-1"><a class="header-anchor" href="#函数-getconfig"><span><span class="member-header function"></span> 函数 getConfig</span></a></h3><p>原型: getConfig (mode:1|2)</p><p>返回 wifi 的工作参数</p><p>返回的对象可参考 <code>setStaConfig()</code> 和 <code>setAPConfig()</code> 的 <code>mode</code> 参数</p><h4 id="参数-4" tabindex="-1"><a class="header-anchor" href="#参数-4"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">mode</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>1, 2</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span> 1代表 sta , 2代表 ap</p></li></ul><h4 id="返回值-5" tabindex="-1"><a class="header-anchor" href="#返回值-5"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>object</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-staconnect" tabindex="-1"><a class="header-anchor" href="#函数-staconnect"><span><span class="member-header function"></span> 函数 staConnect</span></a></h3><p>原型: staConnect ()</p><p>WiFi STA 连接到热点</p><p>ssid, password 等参数需要通过 wifi.setStaConfig() 设置</p><p>返回 0 仅表示api函数调用成功; 非 0 代表对应的错误</p><p>连接成功或失败回触发回调函数, 回调函数由 wifi.registerEventHandle() 设置</p><h4 id="返回值-6" tabindex="-1"><a class="header-anchor" href="#返回值-6"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>number</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-stadisconnect" tabindex="-1"><a class="header-anchor" href="#函数-stadisconnect"><span><span class="member-header function"></span> 函数 staDisconnect</span></a></h3><p>原型: staDisconnect ()</p><p>WiFi STA 断开连接</p><p>返回 0 表示成功; 非 0 代表对应的错误</p><h4 id="返回值-7" tabindex="-1"><a class="header-anchor" href="#返回值-7"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>number</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-getipinfo" tabindex="-1"><a class="header-anchor" href="#函数-getipinfo"><span><span class="member-header function"></span> 函数 getIpInfo</span></a></h3><p>原型: getIpInfo (type:number)</p><p>返回 AP/STA 的 IP</p><p>function 返回一个对象, 包含 ip, netmask, gw 信息</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">ip</span><span class="token operator">:</span>string<span class="token punctuation">,</span>
    <span class="token literal-property property">netmask</span><span class="token operator">:</span>string<span class="token punctuation">,</span>
    <span class="token literal-property property">gw</span><span class="token operator">:</span>string
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-5" tabindex="-1"><a class="header-anchor" href="#参数-5"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">type</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>number</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span>1代表 sta, 2代表 ap</p></li></ul><h4 id="返回值-8" tabindex="-1"><a class="header-anchor" href="#返回值-8"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>object</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-sethostname" tabindex="-1"><a class="header-anchor" href="#函数-sethostname"><span><span class="member-header function"></span> 函数 setHostname</span></a></h3><p>原型: setHostname (nane:string)</p><p>返回设置 wifi 的在局域网中可被显示的主机名</p><h4 id="参数-6" tabindex="-1"><a class="header-anchor" href="#参数-6"><span>参数:</span></a></h4><ul><li><p><span style="color:#007acc;">nane</span></p><p><span style="display:inline-block;width:100px;"><strong>类型</strong></span>string</p><p><span style="display:inline-block;width:100px;"><strong>参数说明</strong></span></p></li></ul><h4 id="返回值-9" tabindex="-1"><a class="header-anchor" href="#返回值-9"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>undefined</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-allsta" tabindex="-1"><a class="header-anchor" href="#函数-allsta"><span><span class="member-header function"></span> 函数 allSta</span></a></h3><p>原型: allSta ()</p><p>返回所有连接到本机AP的客户机</p><p>返回对象数组, 每个对象包含 mac 和 rssi 信息</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token literal-property property">mac</span><span class="token operator">:</span> <span class="token string">&quot;xx:xx&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">rssi</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>rssi</code> 值范围 -100 ~ 0, 单位为 dBm，表示信号强度，越大(绝对值越小)表示信号越强。</p><h4 id="返回值-10" tabindex="-1"><a class="header-anchor" href="#返回值-10"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>{mac:string,rssi:string}[]</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-registereventhandle" tabindex="-1"><a class="header-anchor" href="#函数-registereventhandle"><span><span class="member-header function"></span> 函数 registerEventHandle</span></a></h3><p>原型: registerEventHandle ()</p><p>注册一个事件函数, 当 wifi 状态变化时, 该函数会被调用</p><h4 id="返回值-11" tabindex="-1"><a class="header-anchor" href="#返回值-11"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>undefined</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-scanstart" tabindex="-1"><a class="header-anchor" href="#函数-scanstart"><span><span class="member-header function"></span> 函数 scanStart</span></a></h3><p>原型: scanStart ()</p><p>开始扫描附近的AP</p><blockquote><p>wifi STA 模式必须启动</p></blockquote><h4 id="返回值-12" tabindex="-1"><a class="header-anchor" href="#返回值-12"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>bool</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-scanstop" tabindex="-1"><a class="header-anchor" href="#函数-scanstop"><span><span class="member-header function"></span> 函数 scanStop</span></a></h3><p>原型: scanStop ()</p><p>停止AP扫描</p><h4 id="返回值-13" tabindex="-1"><a class="header-anchor" href="#返回值-13"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>bool</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-isscanning" tabindex="-1"><a class="header-anchor" href="#函数-isscanning"><span><span class="member-header function"></span> 函数 isScanning</span></a></h3><p>原型: isScanning ()</p><p>返回 AP 扫描是否正在进行</p><h4 id="返回值-14" tabindex="-1"><a class="header-anchor" href="#返回值-14"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>bool</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-scanrecords" tabindex="-1"><a class="header-anchor" href="#函数-scanrecords"><span><span class="member-header function"></span> 函数 scanRecords</span></a></h3><p>原型: scanRecords ()</p><p>取回 AP 扫描的结果</p><p>返回的数组格式:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">bssid</span><span class="token operator">:</span>string <span class="token punctuation">,</span>
         <span class="token literal-property property">ssid</span><span class="token operator">:</span>string <span class="token punctuation">,</span>
         <span class="token literal-property property">channel</span><span class="token operator">:</span>number <span class="token punctuation">,</span>
         <span class="token literal-property property">rssi</span><span class="token operator">:</span>number <span class="token punctuation">,</span>
         <span class="token literal-property property">authmode</span><span class="token operator">:</span>number <span class="token punctuation">,</span>
     <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="返回值-15" tabindex="-1"><a class="header-anchor" href="#返回值-15"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>object[]</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-stastarted" tabindex="-1"><a class="header-anchor" href="#函数-stastarted"><span><span class="member-header function"></span> 函数 staStarted</span></a></h3><p>原型: staStarted ()</p><p>返回 WiFi STA 模式是否启动</p><h4 id="返回值-16" tabindex="-1"><a class="header-anchor" href="#返回值-16"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>bool</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-staconnected" tabindex="-1"><a class="header-anchor" href="#函数-staconnected"><span><span class="member-header function"></span> 函数 staConnected</span></a></h3><p>原型: staConnected ()</p><p>返回 WiFi STA 是否已经连接</p><h4 id="返回值-17" tabindex="-1"><a class="header-anchor" href="#返回值-17"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>bool</p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="函数-apstarted" tabindex="-1"><a class="header-anchor" href="#函数-apstarted"><span><span class="member-header function"></span> 函数 apStarted</span></a></h3><p>原型: apStarted ()</p><p>返回 WiFi AP 模式是否启用</p><h4 id="返回值-18" tabindex="-1"><a class="header-anchor" href="#返回值-18"><span>返回值:</span></a></h4><p><span style="display:inline-block;width:100px;margin-left:20px;"><strong>类型</strong></span>bool</p><p style="height:10px;margin:0px;"></p>`,175);function x(f,v){const t=l("CodeTabs");return o(),r("div",null,[g,m,c(t,{id:"6",data:[{id:"在.js文件中"},{id:"在REPL命令行下"}]},{title0:n(({value:e,isActive:p})=>[s("在.js文件中")]),title1:n(({value:e,isActive:p})=>[s("在REPL命令行下")]),tab0:n(({value:e,isActive:p})=>[u]),tab1:n(({value:e,isActive:p})=>[b]),_:1}),k])}const S=i(h,[["render",x],["__file","wifi.html.vue"]]),_=JSON.parse('{"path":"/api/wifi.html","title":"模块: WiFi","lang":"zh-CN","frontmatter":{"headerDepth":2,"description":"模块: WiFi 导入 WiFi 模块： 模块函数 函数 setPS 原型: setPS (mode:0|1|2) 设置 wifi 的节能模式 (PowerSafe) 参数 mode : 0 关闭节能模式 1 最小 2 最大 参数: mode 类型0, 1, 2 参数说明 返回值: 类型number 函数 setMode 原型: setMode (mo...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/api/wifi.html"}],["meta",{"property":"og:title","content":"模块: WiFi"}],["meta",{"property":"og:description","content":"模块: WiFi 导入 WiFi 模块： 模块函数 函数 setPS 原型: setPS (mode:0|1|2) 设置 wifi 的节能模式 (PowerSafe) 参数 mode : 0 关闭节能模式 1 最小 2 最大 参数: mode 类型0, 1, 2 参数说明 返回值: 类型number 函数 setMode 原型: setMode (mo..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-05T14:12:34.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-05T14:12:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模块: WiFi\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-05T14:12:34.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"模块函数","slug":"模块函数","link":"#模块函数","children":[{"level":3,"title":"函数  setPS","slug":"函数-setps","link":"#函数-setps","children":[]},{"level":3,"title":"函数  setMode","slug":"函数-setmode","link":"#函数-setmode","children":[]},{"level":3,"title":"函数  getMode","slug":"函数-getmode","link":"#函数-getmode","children":[]},{"level":3,"title":"函数  setAPConfig","slug":"函数-setapconfig","link":"#函数-setapconfig","children":[]},{"level":3,"title":"函数  setStaConfig","slug":"函数-setstaconfig","link":"#函数-setstaconfig","children":[]},{"level":3,"title":"函数  getConfig","slug":"函数-getconfig","link":"#函数-getconfig","children":[]},{"level":3,"title":"函数  staConnect","slug":"函数-staconnect","link":"#函数-staconnect","children":[]},{"level":3,"title":"函数  staDisconnect","slug":"函数-stadisconnect","link":"#函数-stadisconnect","children":[]},{"level":3,"title":"函数  getIpInfo","slug":"函数-getipinfo","link":"#函数-getipinfo","children":[]},{"level":3,"title":"函数  setHostname","slug":"函数-sethostname","link":"#函数-sethostname","children":[]},{"level":3,"title":"函数  allSta","slug":"函数-allsta","link":"#函数-allsta","children":[]},{"level":3,"title":"函数  registerEventHandle","slug":"函数-registereventhandle","link":"#函数-registereventhandle","children":[]},{"level":3,"title":"函数  scanStart","slug":"函数-scanstart","link":"#函数-scanstart","children":[]},{"level":3,"title":"函数  scanStop","slug":"函数-scanstop","link":"#函数-scanstop","children":[]},{"level":3,"title":"函数  isScanning","slug":"函数-isscanning","link":"#函数-isscanning","children":[]},{"level":3,"title":"函数  scanRecords","slug":"函数-scanrecords","link":"#函数-scanrecords","children":[]},{"level":3,"title":"函数  staStarted","slug":"函数-stastarted","link":"#函数-stastarted","children":[]},{"level":3,"title":"函数  staConnected","slug":"函数-staconnected","link":"#函数-staconnected","children":[]},{"level":3,"title":"函数  apStarted","slug":"函数-apstarted","link":"#函数-apstarted","children":[]}]}],"git":{"createdTime":1714757277000,"updatedTime":1714918354000,"contributors":[{"name":"alee","email":"alee@chou.im","commits":2}]},"readingTime":{"minutes":5.68,"words":1703},"filePathRelative":"api/wifi.md","localizedDate":"2024年5月4日","autoDesc":true}');export{S as comp,_ as data};
