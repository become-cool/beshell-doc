import{_ as u}from"./20240526_150209-ByTjn2ZS.js";import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as r,c as k,a as n,b as s,d as l,w as a,e as o}from"./app-ChgrVHeb.js";const m="/assets/20240526_151035-DvikS1b1.png",v="/assets/20240526_153323-o0KFfJ2E.png",b={},h=o(`<h1 id="运行-javascript-脚本文件" tabindex="-1"><a class="header-anchor" href="#运行-javascript-脚本文件"><span>运行 JavaScript 脚本文件</span></a></h1><p>BeShell 应用的主要逻辑应该写在 JavaScript 文件中。因此需要 BeShell 完善了 ESP32 的文件系统支持 📄 。</p><p>将存储介质 (flash 或 sd卡) 上的文件分区挂载到 BeShell 的文件系统，然后就可以像在其他平台上一样运行 JavaScript 文件。</p><ol><li><p>执行 <code>BeShell::use&lt;FS&gt;()</code> 应用文件系统模块。</p><blockquote><p>注意：应用 <code>FS</code> 模块需要在执行 <code>BeShell::setup()</code> 前。</p></blockquote></li><li><p>执行 <code>FS::mount()</code> 静态方法，将一个分区挂载到指定的路径。</p></li></ol><p>下面分别给出 Arduino 和 ESP-IDF 的简单例子。</p><h2 id="arduino" tabindex="-1"><a class="header-anchor" href="#arduino"><span>Arduino</span></a></h2><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;BeShell.hpp&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> be <span class="token punctuation">;</span>

BeShell beshell <span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// 应用文件系统模块</span>
    beshell<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">use</span><span class="token generic class-name"><span class="token operator">&lt;</span>FS<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>

    <span class="token comment">// 将 flash 中 label 为 ffat 的分区，以 Fat32 格式挂载到根目录</span>
    <span class="token class-name">FS</span><span class="token double-colon punctuation">::</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token function">FatFS</span><span class="token punctuation">(</span><span class="token string">&quot;ffat&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>

    <span class="token comment">// 启动 BeShell</span>
    beshell<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    beshell<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>FatFS 类构造函数的第二个参数表示如果分区存在，但挂载失败(未初始化的分区)，则自动格式化。</p></blockquote><p>在菜单栏 <code>工具</code> -&gt; <code>开发板: xxx</code> 子菜单中选择对应的 ESP32 开发板。</p><figure><img src="`+u+'" alt="选择对应的ESP32开发板" width="640" tabindex="0" loading="lazy"><figcaption>选择对应的ESP32开发板</figcaption></figure><p>在菜单栏 <code>工具</code> -&gt; <code>Partition Scheme: xxx</code> 子菜单中选择合适的分区方案。</p><figure><img src="'+m+`" alt="选择合适的分区方案" width="640" tabindex="0" loading="lazy"><figcaption>选择合适的分区方案</figcaption></figure><p>以上图为例，flash 总大小 4MB, APP 程序分区 1.2MB, FatFS 分区 label 为 ffat, 大小 1.5 MB。</p><h2 id="esp-idf" tabindex="-1"><a class="header-anchor" href="#esp-idf"><span>ESP-IDF</span></a></h2><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;BeShell.hpp&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> be <span class="token punctuation">;</span>

BeShell beshell <span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">app_main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// 应用文件系统模块</span>
    beshell<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">use</span><span class="token generic class-name"><span class="token operator">&lt;</span>FS<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>

    <span class="token comment">// 将 flash 中 label 为 fsroot 的分区，以 LittleFS 格式挂载到根目录</span>
    <span class="token class-name">FS</span><span class="token double-colon punctuation">::</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token function">LittleFS</span><span class="token punctuation">(</span><span class="token string">&quot;fsroot&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>

    <span class="token comment">// 启动 BeShell</span>
    beshell<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>

    <span class="token comment">// beshell 主循环</span>
    beshell<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ESP-IDF 项目使用分区表文件 <code>partitions.csv</code> 来定义 flash 上的分区。BeShell 针对 4MB/8MB/16MB 的 flash 大小，提供了默认的分区方案。对应的分区表文件存放在 BeShell/filesystem 目录下。可以在 <code>idf.py menuconfig</code> 配置界面里填入对应的分区表文件路径。</p><p>VSCode ESP-IDF 扩展提供了一个 UI 界面在替代 基于命令行的 <code>idf.py menuconfig</code> 配置界面。</p><figure><img src="`+v+'" alt="在配置界面填入分区表文件路径" width="640" tabindex="0" loading="lazy"><figcaption>在配置界面填入分区表文件路径</figcaption></figure><p>你也可以根据自己的开发板flash大小和需要，修改分区表里的内容。</p><h2 id="测试文件操作" tabindex="-1"><a class="header-anchor" href="#测试文件操作"><span>测试文件操作</span></a></h2><p>无论用 Arduino 还是 ESP-IDF，在编译烧录后，都可以用以下方式测试文件系统。</p>',21),f={href:"https://beconsole.become.cool",target:"_blank",rel:"noopener noreferrer"},g=o(`<li><p>在终端输入 <code>ls</code> 命令回车，查看根目录下的文件列表。返回应该是空的，因为还没有文件。</p></li><li><p>在根目录下创建一个文件，输入 <code>touch main.js</code> 命令，创建一个文件。</p></li><li><p>输入 <code>ls</code> 命令，查看根目录下的文件列表。应该能看到 <code>main.js</code> 了文件。</p></li><li><p>在左侧文件列表中，选择根目录，右键菜单 <code>刷新</code> ，文件列表里会出现刚才创建的 <code>main.js</code> 文件。</p></li><li><p>双击 <code>main.js</code> 文件，编辑器里会打开 <code>main.js</code> 文件。</p></li><li><p>在编辑器里输入以下内容，然后保存：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>__filename<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;loader&#39;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Greetings from&quot;</span><span class="token punctuation">,</span> <span class="token function">__filename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在终端里输入 <code>. main.js</code> 命令，运行 <code>main.js</code> 文件，返回结果应该是：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Greetings from /main.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>命令开头的 <code>.</code> 表示运行 JavaScript 文件。这和 bash 里的 <code>.</code> 命令有些类似，但不同的是不会在命令行变量空间内执行。</p></blockquote><blockquote><p>BeShell 也提供了类似 NodeJS 的 <code>__filename</code> 和 <code>__dirname</code>，但在 BeShell 中，他们是函数，而不是变量，并且需要从 <code>loader</code> 模块导入。</p></blockquote></li>`,7),S=n("p",null,[s("最后一步演示如何从在 app 启动时自动运行 "),n("code",null,"main.js"),s(" 文件。在 cpp 代码里调用："),n("code",null,"evalScript()"),s(" 方法：")],-1),_=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp","data-title":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<BeShell.hpp>")]),s(`

`),n("span",{class:"token keyword"},"using"),s(),n("span",{class:"token keyword"},"namespace"),s(" be "),n("span",{class:"token punctuation"},";"),s(`

BeShell beshell `),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"setup"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token comment"},"// 应用文件系统模块"),s(`
    beshell`),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"use"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),s("FS"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"// 将 flash 中 label 为 ffat 的分区，以 Fat32 格式挂载到根目录"),s(`
    `),n("span",{class:"token class-name"},"FS"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"mount"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token function"},"FatFS"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"ffat"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"// 自动运行 main.js 文件"),s(`
    beshell`),n("span",{class:"token punctuation"},"."),s("engine"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"evalScript"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/main.js"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"// 启动 BeShell"),s(`
    beshell`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setup"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"loop"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    beshell`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"loop"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp","data-title":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<BeShell.hpp>")]),s(`

`),n("span",{class:"token keyword"},"using"),s(),n("span",{class:"token keyword"},"namespace"),s(" be "),n("span",{class:"token punctuation"},";"),s(`

BeShell beshell `),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"app_main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token comment"},"// 应用文件系统模块"),s(`
    beshell`),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"use"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),s("FS"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"// 将 flash 中 label 为 fsroot 的分区，以 LittleFS 格式挂载到根目录"),s(`
    `),n("span",{class:"token class-name"},"FS"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"mount"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token function"},"LittleFS"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"fsroot"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"// 启动 BeShell"),s(`
    beshell`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setup"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"// 自动运行 main.js 文件"),s(`
    beshell`),n("span",{class:"token punctuation"},"."),s("engine"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"evalScript"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/main.js"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"// beshell 主循环"),s(`
    beshell`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function B(w,F){const p=c("ExternalLinkIcon"),i=c("CodeTabs");return r(),k("div",null,[h,n("ol",null,[n("li",null,[n("p",null,[s("在浏览器中打开 "),n("a",f,[s("BeConsole"),l(p)]),s(" ，连接esp32开发板。")])]),g,n("li",null,[S,l(i,{id:"132",data:[{id:"Arduino"},{id:"ESP-IDF"}]},{title0:a(({value:e,isActive:t})=>[s("Arduino")]),title1:a(({value:e,isActive:t})=>[s("ESP-IDF")]),tab0:a(({value:e,isActive:t})=>[_]),tab1:a(({value:e,isActive:t})=>[y]),_:1})])])])}const E=d(b,[["render",B],["__file","run-js-script.html.vue"]]),P=JSON.parse('{"path":"/guide/run-js-script.html","title":"运行   JavaScript 脚本文件","lang":"zh-CN","frontmatter":{"description":"运行 JavaScript 脚本文件 BeShell 应用的主要逻辑应该写在 JavaScript 文件中。因此需要 BeShell 完善了 ESP32 的文件系统支持 📄 。 将存储介质 (flash 或 sd卡) 上的文件分区挂载到 BeShell 的文件系统，然后就可以像在其他平台上一样运行 JavaScript 文件。 执行 BeShell:...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/guide/run-js-script.html"}],["meta",{"property":"og:title","content":"运行   JavaScript 脚本文件"}],["meta",{"property":"og:description","content":"运行 JavaScript 脚本文件 BeShell 应用的主要逻辑应该写在 JavaScript 文件中。因此需要 BeShell 完善了 ESP32 的文件系统支持 📄 。 将存储介质 (flash 或 sd卡) 上的文件分区挂载到 BeShell 的文件系统，然后就可以像在其他平台上一样运行 JavaScript 文件。 执行 BeShell:..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"运行   JavaScript 脚本文件\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Arduino","slug":"arduino","link":"#arduino","children":[]},{"level":2,"title":"ESP-IDF","slug":"esp-idf","link":"#esp-idf","children":[]},{"level":2,"title":"测试文件操作","slug":"测试文件操作","link":"#测试文件操作","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.46,"words":1039},"filePathRelative":"guide/run-js-script.md","autoDesc":true}');export{E as comp,P as data};
