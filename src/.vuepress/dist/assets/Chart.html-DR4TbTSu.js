import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as l,b as t,d as n,e as p,r as i,o as a}from"./app-CbJW3NnK.js";const d={},h={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},x={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},L={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"};function y(b,e){const r=i("ExternalLinkIcon");return a(),o("div",null,[e[36]||(e[36]=l('<h1 id="类-chart" tabindex="-1"><a class="header-anchor" href="#类-chart"><span>类: Chart</span></a></h1><h2 id="类属性" tabindex="-1"><a class="header-anchor" href="#类属性"><span>类属性</span></a></h2><p style="height:10px;margin:0px;"></p><h3 id="属性-type" tabindex="-1"><a class="header-anchor" href="#属性-type"><span><span class="member-header property"></span> 属性 type</span></a></h3><p>类型: LV-CONST</p><p>访问: 可读, 可写</p>',6)),t("blockquote",null,[t("p",null,[e[1]||(e[1]=n("该属性是对 LVGL C API ")),e[2]||(e[2]=t("code",null,"lv_chart_get_type",-1)),e[3]||(e[3]=n(", ")),e[4]||(e[4]=t("code",null,"lv_chart_set_type",-1)),e[5]||(e[5]=n(" 的封装， 具体用法请参考 ")),t("a",h,[e[0]||(e[0]=n("LVGL文档")),p(r)])])]),e[37]||(e[37]=l('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-pointcount" tabindex="-1"><a class="header-anchor" href="#属性-pointcount"><span><span class="member-header property"></span> 属性 pointCount</span></a></h3><p>类型: number</p><p>访问: 可读, 可写</p>',5)),t("blockquote",null,[t("p",null,[e[7]||(e[7]=n("该属性是对 LVGL C API ")),e[8]||(e[8]=t("code",null,"lv_chart_get_point_count",-1)),e[9]||(e[9]=n(", ")),e[10]||(e[10]=t("code",null,"lv_chart_set_point_count",-1)),e[11]||(e[11]=n(" 的封装， 具体用法请参考 ")),t("a",u,[e[6]||(e[6]=n("LVGL文档")),p(r)])])]),e[38]||(e[38]=l('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-updatemode" tabindex="-1"><a class="header-anchor" href="#属性-updatemode"><span><span class="member-header property"></span> 属性 updateMode</span></a></h3><p>类型: LV-CONST</p><p>访问: 只写</p>',5)),t("blockquote",null,[t("p",null,[e[13]||(e[13]=n("该属性是对 LVGL C API ")),e[14]||(e[14]=t("code",null,"lv_chart_set_update_mode",-1)),e[15]||(e[15]=n(" 的封装， 具体用法请参考 ")),t("a",g,[e[12]||(e[12]=n("LVGL文档")),p(r)])])]),e[39]||(e[39]=l('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-pressedpoint" tabindex="-1"><a class="header-anchor" href="#属性-pressedpoint"><span><span class="member-header property"></span> 属性 pressedPoint</span></a></h3><p>类型: number</p><p>访问: 只读</p>',5)),t("blockquote",null,[t("p",null,[e[17]||(e[17]=n("该属性是对 LVGL C API ")),e[18]||(e[18]=t("code",null,"lv_chart_get_pressed_point",-1)),e[19]||(e[19]=n(" 的封装， 具体用法请参考 ")),t("a",m,[e[16]||(e[16]=n("LVGL文档")),p(r)])])]),e[40]||(e[40]=l('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-firstpointcenteroffset" tabindex="-1"><a class="header-anchor" href="#属性-firstpointcenteroffset"><span><span class="member-header property"></span> 属性 firstPointCenterOffset</span></a></h3><p>类型: number</p><p>访问: 只读</p>',5)),t("blockquote",null,[t("p",null,[e[21]||(e[21]=n("该属性是对 LVGL C API ")),e[22]||(e[22]=t("code",null,"lv_chart_get_first_point_center_offset",-1)),e[23]||(e[23]=n(" 的封装， 具体用法请参考 ")),t("a",f,[e[20]||(e[20]=n("LVGL文档")),p(r)])])]),e[41]||(e[41]=l('<p style="height:10px;margin:0px;"></p><h2 id="类方法" tabindex="-1"><a class="header-anchor" href="#类方法"><span>类方法</span></a></h2><p style="height:10px;margin:0px;"></p><h3 id="方法-setrange" tabindex="-1"><a class="header-anchor" href="#方法-setrange"><span><span class="member-header function"></span> 方法 setRange</span></a></h3><p>原型: setRange ()</p>',5)),t("blockquote",null,[t("p",null,[e[25]||(e[25]=n("该方法是对 LVGL C API ")),e[26]||(e[26]=t("code",null,"lv_chart_set_range",-1)),e[27]||(e[27]=n(" 的封装，具体用法请参考 ")),t("a",x,[e[24]||(e[24]=n("LVGL文档")),p(r)])])]),e[42]||(e[42]=l('<h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值"><span>返回值:</span></a></h4><p><code>undefined</code></p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-setdivlinecount" tabindex="-1"><a class="header-anchor" href="#方法-setdivlinecount"><span><span class="member-header function"></span> 方法 setDivLineCount</span></a></h3><p>原型: setDivLineCount ()</p>',6)),t("blockquote",null,[t("p",null,[e[29]||(e[29]=n("该方法是对 LVGL C API ")),e[30]||(e[30]=t("code",null,"lv_chart_set_div_line_count",-1)),e[31]||(e[31]=n(" 的封装，具体用法请参考 ")),t("a",L,[e[28]||(e[28]=n("LVGL文档")),p(r)])])]),e[43]||(e[43]=l('<h4 id="返回值-1" tabindex="-1"><a class="header-anchor" href="#返回值-1"><span>返回值:</span></a></h4><p><code>undefined</code></p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-refresh" tabindex="-1"><a class="header-anchor" href="#方法-refresh"><span><span class="member-header function"></span> 方法 refresh</span></a></h3><p>原型: refresh ()</p>',6)),t("blockquote",null,[t("p",null,[e[33]||(e[33]=n("该方法是对 LVGL C API ")),e[34]||(e[34]=t("code",null,"lv_chart_refresh",-1)),e[35]||(e[35]=n(" 的封装，具体用法请参考 ")),t("a",v,[e[32]||(e[32]=n("LVGL文档")),p(r)])])]),e[44]||(e[44]=t("h4",{id:"返回值-2",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#返回值-2"},[t("span",null,"返回值:")])],-1)),e[45]||(e[45]=t("p",null,[t("code",null,"undefined")],-1)),e[46]||(e[46]=t("p",{style:{height:"10px",margin:"0px"}},null,-1))])}const V=s(d,[["render",y],["__file","Chart.html.vue"]]),P=JSON.parse('{"path":"/api/lvgl/widgets/Chart.html","title":"类: Chart","lang":"zh-CN","frontmatter":{"headerDepth":2,"description":"类: Chart 类属性 属性 type 类型: LV-CONST 访问: 可读, 可写 该属性是对 LVGL C API lv_chart_get_type, lv_chart_set_type 的封装， 具体用法请参考 LVGL文档 属性 pointCount 类型: number 访问: 可读, 可写 该属性是对 LVGL C API lv_ch...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/api/lvgl/widgets/Chart.html"}],["meta",{"property":"og:title","content":"类: Chart"}],["meta",{"property":"og:description","content":"类: Chart 类属性 属性 type 类型: LV-CONST 访问: 可读, 可写 该属性是对 LVGL C API lv_chart_get_type, lv_chart_set_type 的封装， 具体用法请参考 LVGL文档 属性 pointCount 类型: number 访问: 可读, 可写 该属性是对 LVGL C API lv_ch..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-30T15:47:51.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-30T15:47:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类: Chart\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-30T15:47:51.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"类属性","slug":"类属性","link":"#类属性","children":[{"level":3,"title":"属性 type","slug":"属性-type","link":"#属性-type","children":[]},{"level":3,"title":"属性 pointCount","slug":"属性-pointcount","link":"#属性-pointcount","children":[]},{"level":3,"title":"属性 updateMode","slug":"属性-updatemode","link":"#属性-updatemode","children":[]},{"level":3,"title":"属性 pressedPoint","slug":"属性-pressedpoint","link":"#属性-pressedpoint","children":[]},{"level":3,"title":"属性 firstPointCenterOffset","slug":"属性-firstpointcenteroffset","link":"#属性-firstpointcenteroffset","children":[]}]},{"level":2,"title":"类方法","slug":"类方法","link":"#类方法","children":[{"level":3,"title":"方法  setRange","slug":"方法-setrange","link":"#方法-setrange","children":[]},{"level":3,"title":"方法  setDivLineCount","slug":"方法-setdivlinecount","link":"#方法-setdivlinecount","children":[]},{"level":3,"title":"方法  refresh","slug":"方法-refresh","link":"#方法-refresh","children":[]}]}],"git":{"createdTime":1714757277000,"updatedTime":1717084071000,"contributors":[{"name":"alee","email":"alee@chou.im","commits":5}]},"readingTime":{"minutes":1.5,"words":450},"filePathRelative":"api/lvgl/widgets/Chart.md","localizedDate":"2024年5月4日","autoDesc":true}');export{V as comp,P as data};
