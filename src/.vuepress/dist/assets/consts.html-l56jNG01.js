import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as l,c as e,e as p}from"./app-u7kf_eFM.js";const t={},_=p('<h3 id="lv_result_t"></h3><hr><h3 id="常量类型-lv-result-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-result-t"><span>常量类型 lv_result_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_result_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;invalid&quot;</p><p>对应 <code>LV_RESULT_INVALID</code></p></li><li><p>&quot;ok&quot;</p><p>对应 <code>LV_RESULT_OK</code></p></li></ul><h3 id="lv_anim_enable_t"></h3><hr><h3 id="常量类型-lv-anim-enable-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-anim-enable-t"><span>常量类型 lv_anim_enable_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_anim_enable_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;off&quot;</p><p>对应 <code>LV_ANIM_OFF</code></p></li><li><p>&quot;on&quot;</p><p>对应 <code>LV_ANIM_ON</code></p></li></ul><h3 id="lv_rb_color_t"></h3><hr><h3 id="常量类型-lv-rb-color-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-rb-color-t"><span>常量类型 lv_rb_color_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_rb_color_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;red&quot;</p><p>对应 <code>LV_RB_COLOR_RED</code></p></li><li><p>&quot;black&quot;</p><p>对应 <code>LV_RB_COLOR_BLACK</code></p></li></ul><h3 id="lv_align_t"></h3><hr><h3 id="常量类型-lv-align-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-align-t"><span>常量类型 lv_align_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_align_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;default&quot;</p><p>对应 <code>LV_ALIGN_DEFAULT</code></p></li><li><p>&quot;top-left&quot;</p><p>对应 <code>LV_ALIGN_TOP_LEFT</code></p></li><li><p>&quot;top-mid&quot;</p><p>对应 <code>LV_ALIGN_TOP_MID</code></p></li><li><p>&quot;top-right&quot;</p><p>对应 <code>LV_ALIGN_TOP_RIGHT</code></p></li><li><p>&quot;bottom-left&quot;</p><p>对应 <code>LV_ALIGN_BOTTOM_LEFT</code></p></li><li><p>&quot;bottom-mid&quot;</p><p>对应 <code>LV_ALIGN_BOTTOM_MID</code></p></li><li><p>&quot;bottom-right&quot;</p><p>对应 <code>LV_ALIGN_BOTTOM_RIGHT</code></p></li><li><p>&quot;left-mid&quot;</p><p>对应 <code>LV_ALIGN_LEFT_MID</code></p></li><li><p>&quot;right-mid&quot;</p><p>对应 <code>LV_ALIGN_RIGHT_MID</code></p></li><li><p>&quot;center&quot;</p><p>对应 <code>LV_ALIGN_CENTER</code></p></li><li><p>&quot;out-top-left&quot;</p><p>对应 <code>LV_ALIGN_OUT_TOP_LEFT</code></p></li><li><p>&quot;out-top-mid&quot;</p><p>对应 <code>LV_ALIGN_OUT_TOP_MID</code></p></li><li><p>&quot;out-top-right&quot;</p><p>对应 <code>LV_ALIGN_OUT_TOP_RIGHT</code></p></li><li><p>&quot;out-bottom-left&quot;</p><p>对应 <code>LV_ALIGN_OUT_BOTTOM_LEFT</code></p></li><li><p>&quot;out-bottom-mid&quot;</p><p>对应 <code>LV_ALIGN_OUT_BOTTOM_MID</code></p></li><li><p>&quot;out-bottom-right&quot;</p><p>对应 <code>LV_ALIGN_OUT_BOTTOM_RIGHT</code></p></li><li><p>&quot;out-left-top&quot;</p><p>对应 <code>LV_ALIGN_OUT_LEFT_TOP</code></p></li><li><p>&quot;out-left-mid&quot;</p><p>对应 <code>LV_ALIGN_OUT_LEFT_MID</code></p></li><li><p>&quot;out-left-bottom&quot;</p><p>对应 <code>LV_ALIGN_OUT_LEFT_BOTTOM</code></p></li><li><p>&quot;out-right-top&quot;</p><p>对应 <code>LV_ALIGN_OUT_RIGHT_TOP</code></p></li><li><p>&quot;out-right-mid&quot;</p><p>对应 <code>LV_ALIGN_OUT_RIGHT_MID</code></p></li><li><p>&quot;out-right-bottom&quot;</p><p>对应 <code>LV_ALIGN_OUT_RIGHT_BOTTOM</code></p></li></ul><h3 id="lv_dir_t"></h3><hr><h3 id="常量类型-lv-dir-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-dir-t"><span>常量类型 lv_dir_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_dir_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;none&quot;</p><p>对应 <code>LV_DIR_NONE</code></p></li><li><p>&quot;left&quot;</p><p>对应 <code>LV_DIR_LEFT</code></p></li><li><p>&quot;right&quot;</p><p>对应 <code>LV_DIR_RIGHT</code></p></li><li><p>&quot;top&quot;</p><p>对应 <code>LV_DIR_TOP</code></p></li><li><p>&quot;bottom&quot;</p><p>对应 <code>LV_DIR_BOTTOM</code></p></li><li><p>&quot;hor&quot;</p><p>对应 <code>LV_DIR_HOR</code></p></li><li><p>&quot;ver&quot;</p><p>对应 <code>LV_DIR_VER</code></p></li><li><p>&quot;all&quot;</p><p>对应 <code>LV_DIR_ALL</code></p></li></ul><h3 id="lv_opa_t"></h3><hr><h3 id="常量类型-lv-opa-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-opa-t"><span>常量类型 lv_opa_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_opa_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;transp&quot;</p><p>对应 <code>LV_OPA_TRANSP</code></p></li><li><p>&quot;0&quot;</p><p>对应 <code>LV_OPA_0</code></p></li><li><p>&quot;10&quot;</p><p>对应 <code>LV_OPA_10</code></p></li><li><p>&quot;20&quot;</p><p>对应 <code>LV_OPA_20</code></p></li><li><p>&quot;30&quot;</p><p>对应 <code>LV_OPA_30</code></p></li><li><p>&quot;40&quot;</p><p>对应 <code>LV_OPA_40</code></p></li><li><p>&quot;50&quot;</p><p>对应 <code>LV_OPA_50</code></p></li><li><p>&quot;60&quot;</p><p>对应 <code>LV_OPA_60</code></p></li><li><p>&quot;70&quot;</p><p>对应 <code>LV_OPA_70</code></p></li><li><p>&quot;80&quot;</p><p>对应 <code>LV_OPA_80</code></p></li><li><p>&quot;90&quot;</p><p>对应 <code>LV_OPA_90</code></p></li><li><p>&quot;100&quot;</p><p>对应 <code>LV_OPA_100</code></p></li><li><p>&quot;cover&quot;</p><p>对应 <code>LV_OPA_COVER</code></p></li></ul><h3 id="lv_color_format_t"></h3><hr><h3 id="常量类型-lv-color-format-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-color-format-t"><span>常量类型 lv_color_format_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_color_format_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;unknown&quot;</p><p>对应 <code>LV_COLOR_FORMAT_UNKNOWN</code></p></li><li><p>&quot;raw&quot;</p><p>对应 <code>LV_COLOR_FORMAT_RAW</code></p></li><li><p>&quot;raw-alpha&quot;</p><p>对应 <code>LV_COLOR_FORMAT_RAW_ALPHA</code></p></li><li><p>&quot;l8&quot;</p><p>对应 <code>LV_COLOR_FORMAT_L8</code></p></li><li><p>&quot;i1&quot;</p><p>对应 <code>LV_COLOR_FORMAT_I1</code></p></li><li><p>&quot;i2&quot;</p><p>对应 <code>LV_COLOR_FORMAT_I2</code></p></li><li><p>&quot;i4&quot;</p><p>对应 <code>LV_COLOR_FORMAT_I4</code></p></li><li><p>&quot;i8&quot;</p><p>对应 <code>LV_COLOR_FORMAT_I8</code></p></li><li><p>&quot;a8&quot;</p><p>对应 <code>LV_COLOR_FORMAT_A8</code></p></li><li><p>&quot;rgb565&quot;</p><p>对应 <code>LV_COLOR_FORMAT_RGB565</code></p></li><li><p>&quot;rgb565a8&quot;</p><p>对应 <code>LV_COLOR_FORMAT_RGB565A8</code></p></li><li><p>&quot;rgb888&quot;</p><p>对应 <code>LV_COLOR_FORMAT_RGB888</code></p></li><li><p>&quot;argb8888&quot;</p><p>对应 <code>LV_COLOR_FORMAT_ARGB8888</code></p></li><li><p>&quot;xrgb8888&quot;</p><p>对应 <code>LV_COLOR_FORMAT_XRGB8888</code></p></li><li><p>&quot;a1&quot;</p><p>对应 <code>LV_COLOR_FORMAT_A1</code></p></li><li><p>&quot;a2&quot;</p><p>对应 <code>LV_COLOR_FORMAT_A2</code></p></li><li><p>&quot;a4&quot;</p><p>对应 <code>LV_COLOR_FORMAT_A4</code></p></li><li><p>&quot;yuv-start&quot;</p><p>对应 <code>LV_COLOR_FORMAT_YUV_START</code></p></li><li><p>&quot;i420&quot;</p><p>对应 <code>LV_COLOR_FORMAT_I420</code></p></li><li><p>&quot;i422&quot;</p><p>对应 <code>LV_COLOR_FORMAT_I422</code></p></li><li><p>&quot;i444&quot;</p><p>对应 <code>LV_COLOR_FORMAT_I444</code></p></li><li><p>&quot;i400&quot;</p><p>对应 <code>LV_COLOR_FORMAT_I400</code></p></li><li><p>&quot;nv21&quot;</p><p>对应 <code>LV_COLOR_FORMAT_NV21</code></p></li><li><p>&quot;nv12&quot;</p><p>对应 <code>LV_COLOR_FORMAT_NV12</code></p></li><li><p>&quot;yuy2&quot;</p><p>对应 <code>LV_COLOR_FORMAT_YUY2</code></p></li><li><p>&quot;uyvy&quot;</p><p>对应 <code>LV_COLOR_FORMAT_UYVY</code></p></li><li><p>&quot;yuv-end&quot;</p><p>对应 <code>LV_COLOR_FORMAT_YUV_END</code></p></li><li><p>&quot;native&quot;</p><p>对应 <code>LV_COLOR_FORMAT_NATIVE</code></p></li><li><p>&quot;native-with-alpha&quot;</p><p>对应 <code>LV_COLOR_FORMAT_NATIVE_WITH_ALPHA</code></p></li></ul><h3 id="lv_palette_t"></h3><hr><h3 id="常量类型-lv-palette-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-palette-t"><span>常量类型 lv_palette_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_palette_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;red&quot;</p><p>对应 <code>LV_PALETTE_RED</code></p></li><li><p>&quot;pink&quot;</p><p>对应 <code>LV_PALETTE_PINK</code></p></li><li><p>&quot;purple&quot;</p><p>对应 <code>LV_PALETTE_PURPLE</code></p></li><li><p>&quot;deep-purple&quot;</p><p>对应 <code>LV_PALETTE_DEEP_PURPLE</code></p></li><li><p>&quot;indigo&quot;</p><p>对应 <code>LV_PALETTE_INDIGO</code></p></li><li><p>&quot;blue&quot;</p><p>对应 <code>LV_PALETTE_BLUE</code></p></li><li><p>&quot;light-blue&quot;</p><p>对应 <code>LV_PALETTE_LIGHT_BLUE</code></p></li><li><p>&quot;cyan&quot;</p><p>对应 <code>LV_PALETTE_CYAN</code></p></li><li><p>&quot;teal&quot;</p><p>对应 <code>LV_PALETTE_TEAL</code></p></li><li><p>&quot;green&quot;</p><p>对应 <code>LV_PALETTE_GREEN</code></p></li><li><p>&quot;light-green&quot;</p><p>对应 <code>LV_PALETTE_LIGHT_GREEN</code></p></li><li><p>&quot;lime&quot;</p><p>对应 <code>LV_PALETTE_LIME</code></p></li><li><p>&quot;yellow&quot;</p><p>对应 <code>LV_PALETTE_YELLOW</code></p></li><li><p>&quot;amber&quot;</p><p>对应 <code>LV_PALETTE_AMBER</code></p></li><li><p>&quot;orange&quot;</p><p>对应 <code>LV_PALETTE_ORANGE</code></p></li><li><p>&quot;deep-orange&quot;</p><p>对应 <code>LV_PALETTE_DEEP_ORANGE</code></p></li><li><p>&quot;brown&quot;</p><p>对应 <code>LV_PALETTE_BROWN</code></p></li><li><p>&quot;blue-grey&quot;</p><p>对应 <code>LV_PALETTE_BLUE_GREY</code></p></li><li><p>&quot;grey&quot;</p><p>对应 <code>LV_PALETTE_GREY</code></p></li><li><p>&quot;-last&quot;</p><p>对应 <code>_LV_PALETTE_LAST</code></p></li><li><p>&quot;none&quot;</p><p>对应 <code>LV_PALETTE_NONE</code></p></li></ul><h3 id="lv_image_flags_t"></h3><hr><h3 id="常量类型-lv-image-flags-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-image-flags-t"><span>常量类型 lv_image_flags_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_image_flags_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;premultiplied&quot;</p><p>对应 <code>LV_IMAGE_FLAGS_PREMULTIPLIED</code></p></li><li><p>&quot;modifiable&quot;</p><p>对应 <code>LV_IMAGE_FLAGS_MODIFIABLE</code></p></li><li><p>&quot;vectors&quot;</p><p>对应 <code>LV_IMAGE_FLAGS_VECTORS</code></p></li><li><p>&quot;compressed&quot;</p><p>对应 <code>LV_IMAGE_FLAGS_COMPRESSED</code></p></li><li><p>&quot;allocated&quot;</p><p>对应 <code>LV_IMAGE_FLAGS_ALLOCATED</code></p></li><li><p>&quot;user1&quot;</p><p>对应 <code>LV_IMAGE_FLAGS_USER1</code></p></li><li><p>&quot;user2&quot;</p><p>对应 <code>LV_IMAGE_FLAGS_USER2</code></p></li><li><p>&quot;user3&quot;</p><p>对应 <code>LV_IMAGE_FLAGS_USER3</code></p></li><li><p>&quot;user4&quot;</p><p>对应 <code>LV_IMAGE_FLAGS_USER4</code></p></li><li><p>&quot;user5&quot;</p><p>对应 <code>LV_IMAGE_FLAGS_USER5</code></p></li><li><p>&quot;user6&quot;</p><p>对应 <code>LV_IMAGE_FLAGS_USER6</code></p></li><li><p>&quot;user7&quot;</p><p>对应 <code>LV_IMAGE_FLAGS_USER7</code></p></li><li><p>&quot;user8&quot;</p><p>对应 <code>LV_IMAGE_FLAGS_USER8</code></p></li></ul><h3 id="lv_image_compress_t"></h3><hr><h3 id="常量类型-lv-image-compress-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-image-compress-t"><span>常量类型 lv_image_compress_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_image_compress_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;none&quot;</p><p>对应 <code>LV_IMAGE_COMPRESS_NONE</code></p></li><li><p>&quot;rle&quot;</p><p>对应 <code>LV_IMAGE_COMPRESS_RLE</code></p></li><li><p>&quot;lz4&quot;</p><p>对应 <code>LV_IMAGE_COMPRESS_LZ4</code></p></li></ul><h3 id="lv_thread_prio_t"></h3><hr><h3 id="常量类型-lv-thread-prio-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-thread-prio-t"><span>常量类型 lv_thread_prio_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_thread_prio_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;lowest&quot;</p><p>对应 <code>LV_THREAD_PRIO_LOWEST</code></p></li><li><p>&quot;low&quot;</p><p>对应 <code>LV_THREAD_PRIO_LOW</code></p></li><li><p>&quot;mid&quot;</p><p>对应 <code>LV_THREAD_PRIO_MID</code></p></li><li><p>&quot;high&quot;</p><p>对应 <code>LV_THREAD_PRIO_HIGH</code></p></li><li><p>&quot;highest&quot;</p><p>对应 <code>LV_THREAD_PRIO_HIGHEST</code></p></li></ul><h3 id="lv_font_subpx_t"></h3><hr><h3 id="常量类型-lv-font-subpx-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-font-subpx-t"><span>常量类型 lv_font_subpx_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_font_subpx_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;none&quot;</p><p>对应 <code>LV_FONT_SUBPX_NONE</code></p></li><li><p>&quot;hor&quot;</p><p>对应 <code>LV_FONT_SUBPX_HOR</code></p></li><li><p>&quot;ver&quot;</p><p>对应 <code>LV_FONT_SUBPX_VER</code></p></li><li><p>&quot;both&quot;</p><p>对应 <code>LV_FONT_SUBPX_BOTH</code></p></li></ul><h3 id="lv_font_kerning_t"></h3><hr><h3 id="常量类型-lv-font-kerning-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-font-kerning-t"><span>常量类型 lv_font_kerning_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_font_kerning_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;normal&quot;</p><p>对应 <code>LV_FONT_KERNING_NORMAL</code></p></li><li><p>&quot;none&quot;</p><p>对应 <code>LV_FONT_KERNING_NONE</code></p></li></ul><h3 id="lv_text_flag_t"></h3><hr><h3 id="常量类型-lv-text-flag-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-text-flag-t"><span>常量类型 lv_text_flag_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_text_flag_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;none&quot;</p><p>对应 <code>LV_TEXT_FLAG_NONE</code></p></li><li><p>&quot;expand&quot;</p><p>对应 <code>LV_TEXT_FLAG_EXPAND</code></p></li><li><p>&quot;fit&quot;</p><p>对应 <code>LV_TEXT_FLAG_FIT</code></p></li></ul><h3 id="lv_text_align_t"></h3><hr><h3 id="常量类型-lv-text-align-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-text-align-t"><span>常量类型 lv_text_align_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_text_align_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;auto&quot;</p><p>对应 <code>LV_TEXT_ALIGN_AUTO</code></p></li><li><p>&quot;left&quot;</p><p>对应 <code>LV_TEXT_ALIGN_LEFT</code></p></li><li><p>&quot;center&quot;</p><p>对应 <code>LV_TEXT_ALIGN_CENTER</code></p></li><li><p>&quot;right&quot;</p><p>对应 <code>LV_TEXT_ALIGN_RIGHT</code></p></li></ul><h3 id="lv_base_dir_t"></h3><hr><h3 id="常量类型-lv-base-dir-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-base-dir-t"><span>常量类型 lv_base_dir_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_base_dir_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;ltr&quot;</p><p>对应 <code>LV_BASE_DIR_LTR</code></p></li><li><p>&quot;rtl&quot;</p><p>对应 <code>LV_BASE_DIR_RTL</code></p></li><li><p>&quot;auto&quot;</p><p>对应 <code>LV_BASE_DIR_AUTO</code></p></li><li><p>&quot;neutral&quot;</p><p>对应 <code>LV_BASE_DIR_NEUTRAL</code></p></li><li><p>&quot;weak&quot;</p><p>对应 <code>LV_BASE_DIR_WEAK</code></p></li></ul><h3 id="lv_layout_t"></h3><hr><h3 id="常量类型-lv-layout-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-layout-t"><span>常量类型 lv_layout_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_layout_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;none&quot;</p><p>对应 <code>LV_LAYOUT_NONE</code></p></li><li><p>&quot;flex&quot;</p><p>对应 <code>LV_LAYOUT_FLEX</code></p></li><li><p>&quot;grid&quot;</p><p>对应 <code>LV_LAYOUT_GRID</code></p></li><li><p>&quot;-last&quot;</p><p>对应 <code>_LV_LAYOUT_LAST</code></p></li></ul><h3 id="lv_flex_align_t"></h3><hr><h3 id="常量类型-lv-flex-align-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-flex-align-t"><span>常量类型 lv_flex_align_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_flex_align_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;start&quot;</p><p>对应 <code>LV_FLEX_ALIGN_START</code></p></li><li><p>&quot;end&quot;</p><p>对应 <code>LV_FLEX_ALIGN_END</code></p></li><li><p>&quot;center&quot;</p><p>对应 <code>LV_FLEX_ALIGN_CENTER</code></p></li><li><p>&quot;space-evenly&quot;</p><p>对应 <code>LV_FLEX_ALIGN_SPACE_EVENLY</code></p></li><li><p>&quot;space-around&quot;</p><p>对应 <code>LV_FLEX_ALIGN_SPACE_AROUND</code></p></li><li><p>&quot;space-between&quot;</p><p>对应 <code>LV_FLEX_ALIGN_SPACE_BETWEEN</code></p></li></ul><h3 id="lv_flex_flow_t"></h3><hr><h3 id="常量类型-lv-flex-flow-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-flex-flow-t"><span>常量类型 lv_flex_flow_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_flex_flow_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;row&quot;</p><p>对应 <code>LV_FLEX_FLOW_ROW</code></p></li><li><p>&quot;column&quot;</p><p>对应 <code>LV_FLEX_FLOW_COLUMN</code></p></li><li><p>&quot;row-wrap&quot;</p><p>对应 <code>LV_FLEX_FLOW_ROW_WRAP</code></p></li><li><p>&quot;row-reverse&quot;</p><p>对应 <code>LV_FLEX_FLOW_ROW_REVERSE</code></p></li><li><p>&quot;row-wrap-reverse&quot;</p><p>对应 <code>LV_FLEX_FLOW_ROW_WRAP_REVERSE</code></p></li><li><p>&quot;column-wrap&quot;</p><p>对应 <code>LV_FLEX_FLOW_COLUMN_WRAP</code></p></li><li><p>&quot;column-reverse&quot;</p><p>对应 <code>LV_FLEX_FLOW_COLUMN_REVERSE</code></p></li><li><p>&quot;column-wrap-reverse&quot;</p><p>对应 <code>LV_FLEX_FLOW_COLUMN_WRAP_REVERSE</code></p></li></ul><h3 id="lv_grid_align_t"></h3><hr><h3 id="常量类型-lv-grid-align-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-grid-align-t"><span>常量类型 lv_grid_align_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_grid_align_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;start&quot;</p><p>对应 <code>LV_GRID_ALIGN_START</code></p></li><li><p>&quot;center&quot;</p><p>对应 <code>LV_GRID_ALIGN_CENTER</code></p></li><li><p>&quot;end&quot;</p><p>对应 <code>LV_GRID_ALIGN_END</code></p></li><li><p>&quot;stretch&quot;</p><p>对应 <code>LV_GRID_ALIGN_STRETCH</code></p></li><li><p>&quot;space-evenly&quot;</p><p>对应 <code>LV_GRID_ALIGN_SPACE_EVENLY</code></p></li><li><p>&quot;space-around&quot;</p><p>对应 <code>LV_GRID_ALIGN_SPACE_AROUND</code></p></li><li><p>&quot;space-between&quot;</p><p>对应 <code>LV_GRID_ALIGN_SPACE_BETWEEN</code></p></li></ul><h3 id="lv_blend_mode_t"></h3><hr><h3 id="常量类型-lv-blend-mode-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-blend-mode-t"><span>常量类型 lv_blend_mode_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_blend_mode_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;mode-normal&quot;</p><p>对应 <code>LV_BLEND_MODE_NORMAL</code></p></li><li><p>&quot;mode-additive&quot;</p><p>对应 <code>LV_BLEND_MODE_ADDITIVE</code></p></li><li><p>&quot;mode-subtractive&quot;</p><p>对应 <code>LV_BLEND_MODE_SUBTRACTIVE</code></p></li><li><p>&quot;mode-multiply&quot;</p><p>对应 <code>LV_BLEND_MODE_MULTIPLY</code></p></li></ul><h3 id="lv_text_decor_t"></h3><hr><h3 id="常量类型-lv-text-decor-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-text-decor-t"><span>常量类型 lv_text_decor_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_text_decor_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;none&quot;</p><p>对应 <code>LV_TEXT_DECOR_NONE</code></p></li><li><p>&quot;underline&quot;</p><p>对应 <code>LV_TEXT_DECOR_UNDERLINE</code></p></li><li><p>&quot;strikethrough&quot;</p><p>对应 <code>LV_TEXT_DECOR_STRIKETHROUGH</code></p></li></ul><h3 id="lv_border_side_t"></h3><hr><h3 id="常量类型-lv-border-side-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-border-side-t"><span>常量类型 lv_border_side_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_border_side_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;none&quot;</p><p>对应 <code>LV_BORDER_SIDE_NONE</code></p></li><li><p>&quot;bottom&quot;</p><p>对应 <code>LV_BORDER_SIDE_BOTTOM</code></p></li><li><p>&quot;top&quot;</p><p>对应 <code>LV_BORDER_SIDE_TOP</code></p></li><li><p>&quot;left&quot;</p><p>对应 <code>LV_BORDER_SIDE_LEFT</code></p></li><li><p>&quot;right&quot;</p><p>对应 <code>LV_BORDER_SIDE_RIGHT</code></p></li><li><p>&quot;full&quot;</p><p>对应 <code>LV_BORDER_SIDE_FULL</code></p></li><li><p>&quot;internal&quot;</p><p>对应 <code>LV_BORDER_SIDE_INTERNAL</code></p></li></ul><h3 id="lv_grad_dir_t"></h3><hr><h3 id="常量类型-lv-grad-dir-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-grad-dir-t"><span>常量类型 lv_grad_dir_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_grad_dir_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;none&quot;</p><p>对应 <code>LV_GRAD_DIR_NONE</code></p></li><li><p>&quot;ver&quot;</p><p>对应 <code>LV_GRAD_DIR_VER</code></p></li><li><p>&quot;hor&quot;</p><p>对应 <code>LV_GRAD_DIR_HOR</code></p></li></ul><h3 id="lv_style_prop_t"></h3><hr><h3 id="常量类型-lv-style-prop-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-style-prop-t"><span>常量类型 lv_style_prop_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_style_prop_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;prop-inv&quot;</p><p>对应 <code>LV_STYLE_PROP_INV</code></p></li><li><p>&quot;width&quot;</p><p>对应 <code>LV_STYLE_WIDTH</code></p></li><li><p>&quot;height&quot;</p><p>对应 <code>LV_STYLE_HEIGHT</code></p></li><li><p>&quot;length&quot;</p><p>对应 <code>LV_STYLE_LENGTH</code></p></li><li><p>&quot;min-width&quot;</p><p>对应 <code>LV_STYLE_MIN_WIDTH</code></p></li><li><p>&quot;max-width&quot;</p><p>对应 <code>LV_STYLE_MAX_WIDTH</code></p></li><li><p>&quot;min-height&quot;</p><p>对应 <code>LV_STYLE_MIN_HEIGHT</code></p></li><li><p>&quot;max-height&quot;</p><p>对应 <code>LV_STYLE_MAX_HEIGHT</code></p></li><li><p>&quot;x&quot;</p><p>对应 <code>LV_STYLE_X</code></p></li><li><p>&quot;y&quot;</p><p>对应 <code>LV_STYLE_Y</code></p></li><li><p>&quot;align&quot;</p><p>对应 <code>LV_STYLE_ALIGN</code></p></li><li><p>&quot;radius&quot;</p><p>对应 <code>LV_STYLE_RADIUS</code></p></li><li><p>&quot;pad-top&quot;</p><p>对应 <code>LV_STYLE_PAD_TOP</code></p></li><li><p>&quot;pad-bottom&quot;</p><p>对应 <code>LV_STYLE_PAD_BOTTOM</code></p></li><li><p>&quot;pad-left&quot;</p><p>对应 <code>LV_STYLE_PAD_LEFT</code></p></li><li><p>&quot;pad-right&quot;</p><p>对应 <code>LV_STYLE_PAD_RIGHT</code></p></li><li><p>&quot;pad-row&quot;</p><p>对应 <code>LV_STYLE_PAD_ROW</code></p></li><li><p>&quot;pad-column&quot;</p><p>对应 <code>LV_STYLE_PAD_COLUMN</code></p></li><li><p>&quot;layout&quot;</p><p>对应 <code>LV_STYLE_LAYOUT</code></p></li><li><p>&quot;margin-top&quot;</p><p>对应 <code>LV_STYLE_MARGIN_TOP</code></p></li><li><p>&quot;margin-bottom&quot;</p><p>对应 <code>LV_STYLE_MARGIN_BOTTOM</code></p></li><li><p>&quot;margin-left&quot;</p><p>对应 <code>LV_STYLE_MARGIN_LEFT</code></p></li><li><p>&quot;margin-right&quot;</p><p>对应 <code>LV_STYLE_MARGIN_RIGHT</code></p></li><li><p>&quot;bg-color&quot;</p><p>对应 <code>LV_STYLE_BG_COLOR</code></p></li><li><p>&quot;bg-opa&quot;</p><p>对应 <code>LV_STYLE_BG_OPA</code></p></li><li><p>&quot;bg-grad-dir&quot;</p><p>对应 <code>LV_STYLE_BG_GRAD_DIR</code></p></li><li><p>&quot;bg-main-stop&quot;</p><p>对应 <code>LV_STYLE_BG_MAIN_STOP</code></p></li><li><p>&quot;bg-grad-stop&quot;</p><p>对应 <code>LV_STYLE_BG_GRAD_STOP</code></p></li><li><p>&quot;bg-grad-color&quot;</p><p>对应 <code>LV_STYLE_BG_GRAD_COLOR</code></p></li><li><p>&quot;bg-main-opa&quot;</p><p>对应 <code>LV_STYLE_BG_MAIN_OPA</code></p></li><li><p>&quot;bg-grad-opa&quot;</p><p>对应 <code>LV_STYLE_BG_GRAD_OPA</code></p></li><li><p>&quot;bg-grad&quot;</p><p>对应 <code>LV_STYLE_BG_GRAD</code></p></li><li><p>&quot;base-dir&quot;</p><p>对应 <code>LV_STYLE_BASE_DIR</code></p></li><li><p>&quot;bg-image-src&quot;</p><p>对应 <code>LV_STYLE_BG_IMAGE_SRC</code></p></li><li><p>&quot;bg-image-opa&quot;</p><p>对应 <code>LV_STYLE_BG_IMAGE_OPA</code></p></li><li><p>&quot;bg-image-recolor&quot;</p><p>对应 <code>LV_STYLE_BG_IMAGE_RECOLOR</code></p></li><li><p>&quot;bg-image-recolor-opa&quot;</p><p>对应 <code>LV_STYLE_BG_IMAGE_RECOLOR_OPA</code></p></li><li><p>&quot;bg-image-tiled&quot;</p><p>对应 <code>LV_STYLE_BG_IMAGE_TILED</code></p></li><li><p>&quot;clip-corner&quot;</p><p>对应 <code>LV_STYLE_CLIP_CORNER</code></p></li><li><p>&quot;border-width&quot;</p><p>对应 <code>LV_STYLE_BORDER_WIDTH</code></p></li><li><p>&quot;border-color&quot;</p><p>对应 <code>LV_STYLE_BORDER_COLOR</code></p></li><li><p>&quot;border-opa&quot;</p><p>对应 <code>LV_STYLE_BORDER_OPA</code></p></li><li><p>&quot;border-side&quot;</p><p>对应 <code>LV_STYLE_BORDER_SIDE</code></p></li><li><p>&quot;border-post&quot;</p><p>对应 <code>LV_STYLE_BORDER_POST</code></p></li><li><p>&quot;outline-width&quot;</p><p>对应 <code>LV_STYLE_OUTLINE_WIDTH</code></p></li><li><p>&quot;outline-color&quot;</p><p>对应 <code>LV_STYLE_OUTLINE_COLOR</code></p></li><li><p>&quot;outline-opa&quot;</p><p>对应 <code>LV_STYLE_OUTLINE_OPA</code></p></li><li><p>&quot;outline-pad&quot;</p><p>对应 <code>LV_STYLE_OUTLINE_PAD</code></p></li><li><p>&quot;shadow-width&quot;</p><p>对应 <code>LV_STYLE_SHADOW_WIDTH</code></p></li><li><p>&quot;shadow-color&quot;</p><p>对应 <code>LV_STYLE_SHADOW_COLOR</code></p></li><li><p>&quot;shadow-opa&quot;</p><p>对应 <code>LV_STYLE_SHADOW_OPA</code></p></li><li><p>&quot;shadow-offset-x&quot;</p><p>对应 <code>LV_STYLE_SHADOW_OFFSET_X</code></p></li><li><p>&quot;shadow-offset-y&quot;</p><p>对应 <code>LV_STYLE_SHADOW_OFFSET_Y</code></p></li><li><p>&quot;shadow-spread&quot;</p><p>对应 <code>LV_STYLE_SHADOW_SPREAD</code></p></li><li><p>&quot;image-opa&quot;</p><p>对应 <code>LV_STYLE_IMAGE_OPA</code></p></li><li><p>&quot;image-recolor&quot;</p><p>对应 <code>LV_STYLE_IMAGE_RECOLOR</code></p></li><li><p>&quot;image-recolor-opa&quot;</p><p>对应 <code>LV_STYLE_IMAGE_RECOLOR_OPA</code></p></li><li><p>&quot;line-width&quot;</p><p>对应 <code>LV_STYLE_LINE_WIDTH</code></p></li><li><p>&quot;line-dash-width&quot;</p><p>对应 <code>LV_STYLE_LINE_DASH_WIDTH</code></p></li><li><p>&quot;line-dash-gap&quot;</p><p>对应 <code>LV_STYLE_LINE_DASH_GAP</code></p></li><li><p>&quot;line-rounded&quot;</p><p>对应 <code>LV_STYLE_LINE_ROUNDED</code></p></li><li><p>&quot;line-color&quot;</p><p>对应 <code>LV_STYLE_LINE_COLOR</code></p></li><li><p>&quot;line-opa&quot;</p><p>对应 <code>LV_STYLE_LINE_OPA</code></p></li><li><p>&quot;arc-width&quot;</p><p>对应 <code>LV_STYLE_ARC_WIDTH</code></p></li><li><p>&quot;arc-rounded&quot;</p><p>对应 <code>LV_STYLE_ARC_ROUNDED</code></p></li><li><p>&quot;arc-color&quot;</p><p>对应 <code>LV_STYLE_ARC_COLOR</code></p></li><li><p>&quot;arc-opa&quot;</p><p>对应 <code>LV_STYLE_ARC_OPA</code></p></li><li><p>&quot;arc-image-src&quot;</p><p>对应 <code>LV_STYLE_ARC_IMAGE_SRC</code></p></li><li><p>&quot;text-color&quot;</p><p>对应 <code>LV_STYLE_TEXT_COLOR</code></p></li><li><p>&quot;text-opa&quot;</p><p>对应 <code>LV_STYLE_TEXT_OPA</code></p></li><li><p>&quot;text-font&quot;</p><p>对应 <code>LV_STYLE_TEXT_FONT</code></p></li><li><p>&quot;text-letter-space&quot;</p><p>对应 <code>LV_STYLE_TEXT_LETTER_SPACE</code></p></li><li><p>&quot;text-line-space&quot;</p><p>对应 <code>LV_STYLE_TEXT_LINE_SPACE</code></p></li><li><p>&quot;text-decor&quot;</p><p>对应 <code>LV_STYLE_TEXT_DECOR</code></p></li><li><p>&quot;text-align&quot;</p><p>对应 <code>LV_STYLE_TEXT_ALIGN</code></p></li><li><p>&quot;opa&quot;</p><p>对应 <code>LV_STYLE_OPA</code></p></li><li><p>&quot;opa-layered&quot;</p><p>对应 <code>LV_STYLE_OPA_LAYERED</code></p></li><li><p>&quot;color-filter-dsc&quot;</p><p>对应 <code>LV_STYLE_COLOR_FILTER_DSC</code></p></li><li><p>&quot;color-filter-opa&quot;</p><p>对应 <code>LV_STYLE_COLOR_FILTER_OPA</code></p></li><li><p>&quot;anim&quot;</p><p>对应 <code>LV_STYLE_ANIM</code></p></li><li><p>&quot;anim-duration&quot;</p><p>对应 <code>LV_STYLE_ANIM_DURATION</code></p></li><li><p>&quot;transition&quot;</p><p>对应 <code>LV_STYLE_TRANSITION</code></p></li><li><p>&quot;blend-mode&quot;</p><p>对应 <code>LV_STYLE_BLEND_MODE</code></p></li><li><p>&quot;transform-width&quot;</p><p>对应 <code>LV_STYLE_TRANSFORM_WIDTH</code></p></li><li><p>&quot;transform-height&quot;</p><p>对应 <code>LV_STYLE_TRANSFORM_HEIGHT</code></p></li><li><p>&quot;translate-x&quot;</p><p>对应 <code>LV_STYLE_TRANSLATE_X</code></p></li><li><p>&quot;translate-y&quot;</p><p>对应 <code>LV_STYLE_TRANSLATE_Y</code></p></li><li><p>&quot;transform-scale-x&quot;</p><p>对应 <code>LV_STYLE_TRANSFORM_SCALE_X</code></p></li><li><p>&quot;transform-scale-y&quot;</p><p>对应 <code>LV_STYLE_TRANSFORM_SCALE_Y</code></p></li><li><p>&quot;transform-rotation&quot;</p><p>对应 <code>LV_STYLE_TRANSFORM_ROTATION</code></p></li><li><p>&quot;transform-pivot-x&quot;</p><p>对应 <code>LV_STYLE_TRANSFORM_PIVOT_X</code></p></li><li><p>&quot;transform-pivot-y&quot;</p><p>对应 <code>LV_STYLE_TRANSFORM_PIVOT_Y</code></p></li><li><p>&quot;transform-skew-x&quot;</p><p>对应 <code>LV_STYLE_TRANSFORM_SKEW_X</code></p></li><li><p>&quot;transform-skew-y&quot;</p><p>对应 <code>LV_STYLE_TRANSFORM_SKEW_Y</code></p></li><li><p>&quot;flex-flow&quot;</p><p>对应 <code>LV_STYLE_FLEX_FLOW</code></p></li><li><p>&quot;flex-main-place&quot;</p><p>对应 <code>LV_STYLE_FLEX_MAIN_PLACE</code></p></li><li><p>&quot;flex-cross-place&quot;</p><p>对应 <code>LV_STYLE_FLEX_CROSS_PLACE</code></p></li><li><p>&quot;flex-track-place&quot;</p><p>对应 <code>LV_STYLE_FLEX_TRACK_PLACE</code></p></li><li><p>&quot;flex-grow&quot;</p><p>对应 <code>LV_STYLE_FLEX_GROW</code></p></li><li><p>&quot;grid-column-align&quot;</p><p>对应 <code>LV_STYLE_GRID_COLUMN_ALIGN</code></p></li><li><p>&quot;grid-row-align&quot;</p><p>对应 <code>LV_STYLE_GRID_ROW_ALIGN</code></p></li><li><p>&quot;grid-row-dsc-array&quot;</p><p>对应 <code>LV_STYLE_GRID_ROW_DSC_ARRAY</code></p></li><li><p>&quot;grid-column-dsc-array&quot;</p><p>对应 <code>LV_STYLE_GRID_COLUMN_DSC_ARRAY</code></p></li><li><p>&quot;grid-cell-column-pos&quot;</p><p>对应 <code>LV_STYLE_GRID_CELL_COLUMN_POS</code></p></li><li><p>&quot;grid-cell-column-span&quot;</p><p>对应 <code>LV_STYLE_GRID_CELL_COLUMN_SPAN</code></p></li><li><p>&quot;grid-cell-x-align&quot;</p><p>对应 <code>LV_STYLE_GRID_CELL_X_ALIGN</code></p></li><li><p>&quot;grid-cell-row-pos&quot;</p><p>对应 <code>LV_STYLE_GRID_CELL_ROW_POS</code></p></li><li><p>&quot;grid-cell-row-span&quot;</p><p>对应 <code>LV_STYLE_GRID_CELL_ROW_SPAN</code></p></li><li><p>&quot;grid-cell-y-align&quot;</p><p>对应 <code>LV_STYLE_GRID_CELL_Y_ALIGN</code></p></li><li><p>&quot;-last-built-in-prop&quot;</p><p>对应 <code>_LV_STYLE_LAST_BUILT_IN_PROP</code></p></li><li><p>&quot;-num-built-in-props&quot;</p><p>对应 <code>_LV_STYLE_NUM_BUILT_IN_PROPS</code></p></li><li><p>&quot;prop-any&quot;</p><p>对应 <code>LV_STYLE_PROP_ANY</code></p></li><li><p>&quot;-prop-const&quot;</p><p>对应 <code>_LV_STYLE_PROP_CONST</code></p></li></ul><h3 id="lv_style_res_t"></h3><hr><h3 id="常量类型-lv-style-res-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-style-res-t"><span>常量类型 lv_style_res_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_style_res_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;not-found&quot;</p><p>对应 <code>LV_STYLE_RES_NOT_FOUND</code></p></li><li><p>&quot;found&quot;</p><p>对应 <code>LV_STYLE_RES_FOUND</code></p></li></ul><h3 id="lv_event_code_t"></h3><hr><h3 id="常量类型-lv-event-code-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-event-code-t"><span>常量类型 lv_event_code_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_event_code_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;all&quot;</p><p>对应 <code>LV_EVENT_ALL</code></p></li><li><p>&quot;pressed&quot;</p><p>对应 <code>LV_EVENT_PRESSED</code></p></li><li><p>&quot;pressing&quot;</p><p>对应 <code>LV_EVENT_PRESSING</code></p></li><li><p>&quot;press-lost&quot;</p><p>对应 <code>LV_EVENT_PRESS_LOST</code></p></li><li><p>&quot;short-clicked&quot;</p><p>对应 <code>LV_EVENT_SHORT_CLICKED</code></p></li><li><p>&quot;long-pressed&quot;</p><p>对应 <code>LV_EVENT_LONG_PRESSED</code></p></li><li><p>&quot;long-pressed-repeat&quot;</p><p>对应 <code>LV_EVENT_LONG_PRESSED_REPEAT</code></p></li><li><p>&quot;clicked&quot;</p><p>对应 <code>LV_EVENT_CLICKED</code></p></li><li><p>&quot;released&quot;</p><p>对应 <code>LV_EVENT_RELEASED</code></p></li><li><p>&quot;scroll-begin&quot;</p><p>对应 <code>LV_EVENT_SCROLL_BEGIN</code></p></li><li><p>&quot;scroll-throw-begin&quot;</p><p>对应 <code>LV_EVENT_SCROLL_THROW_BEGIN</code></p></li><li><p>&quot;scroll-end&quot;</p><p>对应 <code>LV_EVENT_SCROLL_END</code></p></li><li><p>&quot;scroll&quot;</p><p>对应 <code>LV_EVENT_SCROLL</code></p></li><li><p>&quot;gesture&quot;</p><p>对应 <code>LV_EVENT_GESTURE</code></p></li><li><p>&quot;key&quot;</p><p>对应 <code>LV_EVENT_KEY</code></p></li><li><p>&quot;focused&quot;</p><p>对应 <code>LV_EVENT_FOCUSED</code></p></li><li><p>&quot;defocused&quot;</p><p>对应 <code>LV_EVENT_DEFOCUSED</code></p></li><li><p>&quot;leave&quot;</p><p>对应 <code>LV_EVENT_LEAVE</code></p></li><li><p>&quot;hit-test&quot;</p><p>对应 <code>LV_EVENT_HIT_TEST</code></p></li><li><p>&quot;indev-reset&quot;</p><p>对应 <code>LV_EVENT_INDEV_RESET</code></p></li><li><p>&quot;cover-check&quot;</p><p>对应 <code>LV_EVENT_COVER_CHECK</code></p></li><li><p>&quot;refr-ext-draw-size&quot;</p><p>对应 <code>LV_EVENT_REFR_EXT_DRAW_SIZE</code></p></li><li><p>&quot;draw-main-begin&quot;</p><p>对应 <code>LV_EVENT_DRAW_MAIN_BEGIN</code></p></li><li><p>&quot;draw-main&quot;</p><p>对应 <code>LV_EVENT_DRAW_MAIN</code></p></li><li><p>&quot;draw-main-end&quot;</p><p>对应 <code>LV_EVENT_DRAW_MAIN_END</code></p></li><li><p>&quot;draw-post-begin&quot;</p><p>对应 <code>LV_EVENT_DRAW_POST_BEGIN</code></p></li><li><p>&quot;draw-post&quot;</p><p>对应 <code>LV_EVENT_DRAW_POST</code></p></li><li><p>&quot;draw-post-end&quot;</p><p>对应 <code>LV_EVENT_DRAW_POST_END</code></p></li><li><p>&quot;draw-task-added&quot;</p><p>对应 <code>LV_EVENT_DRAW_TASK_ADDED</code></p></li><li><p>&quot;value-changed&quot;</p><p>对应 <code>LV_EVENT_VALUE_CHANGED</code></p></li><li><p>&quot;insert&quot;</p><p>对应 <code>LV_EVENT_INSERT</code></p></li><li><p>&quot;refresh&quot;</p><p>对应 <code>LV_EVENT_REFRESH</code></p></li><li><p>&quot;ready&quot;</p><p>对应 <code>LV_EVENT_READY</code></p></li><li><p>&quot;cancel&quot;</p><p>对应 <code>LV_EVENT_CANCEL</code></p></li><li><p>&quot;create&quot;</p><p>对应 <code>LV_EVENT_CREATE</code></p></li><li><p>&quot;delete&quot;</p><p>对应 <code>LV_EVENT_DELETE</code></p></li><li><p>&quot;child-changed&quot;</p><p>对应 <code>LV_EVENT_CHILD_CHANGED</code></p></li><li><p>&quot;child-created&quot;</p><p>对应 <code>LV_EVENT_CHILD_CREATED</code></p></li><li><p>&quot;child-deleted&quot;</p><p>对应 <code>LV_EVENT_CHILD_DELETED</code></p></li><li><p>&quot;screen-unload-start&quot;</p><p>对应 <code>LV_EVENT_SCREEN_UNLOAD_START</code></p></li><li><p>&quot;screen-load-start&quot;</p><p>对应 <code>LV_EVENT_SCREEN_LOAD_START</code></p></li><li><p>&quot;screen-loaded&quot;</p><p>对应 <code>LV_EVENT_SCREEN_LOADED</code></p></li><li><p>&quot;screen-unloaded&quot;</p><p>对应 <code>LV_EVENT_SCREEN_UNLOADED</code></p></li><li><p>&quot;size-changed&quot;</p><p>对应 <code>LV_EVENT_SIZE_CHANGED</code></p></li><li><p>&quot;style-changed&quot;</p><p>对应 <code>LV_EVENT_STYLE_CHANGED</code></p></li><li><p>&quot;layout-changed&quot;</p><p>对应 <code>LV_EVENT_LAYOUT_CHANGED</code></p></li><li><p>&quot;get-self-size&quot;</p><p>对应 <code>LV_EVENT_GET_SELF_SIZE</code></p></li><li><p>&quot;invalidate-area&quot;</p><p>对应 <code>LV_EVENT_INVALIDATE_AREA</code></p></li><li><p>&quot;resolution-changed&quot;</p><p>对应 <code>LV_EVENT_RESOLUTION_CHANGED</code></p></li><li><p>&quot;color-format-changed&quot;</p><p>对应 <code>LV_EVENT_COLOR_FORMAT_CHANGED</code></p></li><li><p>&quot;refr-request&quot;</p><p>对应 <code>LV_EVENT_REFR_REQUEST</code></p></li><li><p>&quot;refr-start&quot;</p><p>对应 <code>LV_EVENT_REFR_START</code></p></li><li><p>&quot;refr-ready&quot;</p><p>对应 <code>LV_EVENT_REFR_READY</code></p></li><li><p>&quot;render-start&quot;</p><p>对应 <code>LV_EVENT_RENDER_START</code></p></li><li><p>&quot;render-ready&quot;</p><p>对应 <code>LV_EVENT_RENDER_READY</code></p></li><li><p>&quot;flush-start&quot;</p><p>对应 <code>LV_EVENT_FLUSH_START</code></p></li><li><p>&quot;flush-finish&quot;</p><p>对应 <code>LV_EVENT_FLUSH_FINISH</code></p></li><li><p>&quot;vsync&quot;</p><p>对应 <code>LV_EVENT_VSYNC</code></p></li><li><p>&quot;-last&quot;</p><p>对应 <code>_LV_EVENT_LAST</code></p></li><li><p>&quot;preprocess&quot;</p><p>对应 <code>LV_EVENT_PREPROCESS</code></p></li></ul><h3 id="lv_fs_res_t"></h3><hr><h3 id="常量类型-lv-fs-res-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-fs-res-t"><span>常量类型 lv_fs_res_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_fs_res_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;ok&quot;</p><p>对应 <code>LV_FS_RES_OK</code></p></li><li><p>&quot;hw-err&quot;</p><p>对应 <code>LV_FS_RES_HW_ERR</code></p></li><li><p>&quot;fs-err&quot;</p><p>对应 <code>LV_FS_RES_FS_ERR</code></p></li><li><p>&quot;not-ex&quot;</p><p>对应 <code>LV_FS_RES_NOT_EX</code></p></li><li><p>&quot;full&quot;</p><p>对应 <code>LV_FS_RES_FULL</code></p></li><li><p>&quot;locked&quot;</p><p>对应 <code>LV_FS_RES_LOCKED</code></p></li><li><p>&quot;denied&quot;</p><p>对应 <code>LV_FS_RES_DENIED</code></p></li><li><p>&quot;busy&quot;</p><p>对应 <code>LV_FS_RES_BUSY</code></p></li><li><p>&quot;tout&quot;</p><p>对应 <code>LV_FS_RES_TOUT</code></p></li><li><p>&quot;not-imp&quot;</p><p>对应 <code>LV_FS_RES_NOT_IMP</code></p></li><li><p>&quot;out-of-mem&quot;</p><p>对应 <code>LV_FS_RES_OUT_OF_MEM</code></p></li><li><p>&quot;inv-param&quot;</p><p>对应 <code>LV_FS_RES_INV_PARAM</code></p></li><li><p>&quot;unknown&quot;</p><p>对应 <code>LV_FS_RES_UNKNOWN</code></p></li></ul><h3 id="lv_fs_mode_t"></h3><hr><h3 id="常量类型-lv-fs-mode-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-fs-mode-t"><span>常量类型 lv_fs_mode_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_fs_mode_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;mode-wr&quot;</p><p>对应 <code>LV_FS_MODE_WR</code></p></li><li><p>&quot;mode-rd&quot;</p><p>对应 <code>LV_FS_MODE_RD</code></p></li></ul><h3 id="lv_fs_whence_t"></h3><hr><h3 id="常量类型-lv-fs-whence-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-fs-whence-t"><span>常量类型 lv_fs_whence_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_fs_whence_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;lv-fs-seek-set&quot;</p><p>对应 <code>LV_FS_SEEK_SET</code></p></li><li><p>&quot;lv-fs-seek-cur&quot;</p><p>对应 <code>LV_FS_SEEK_CUR</code></p></li><li><p>&quot;lv-fs-seek-end&quot;</p><p>对应 <code>LV_FS_SEEK_END</code></p></li></ul><h3 id="lv_image_src_t"></h3><hr><h3 id="常量类型-lv-image-src-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-image-src-t"><span>常量类型 lv_image_src_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_image_src_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;variable&quot;</p><p>对应 <code>LV_IMAGE_SRC_VARIABLE</code></p></li><li><p>&quot;file&quot;</p><p>对应 <code>LV_IMAGE_SRC_FILE</code></p></li><li><p>&quot;symbol&quot;</p><p>对应 <code>LV_IMAGE_SRC_SYMBOL</code></p></li><li><p>&quot;unknown&quot;</p><p>对应 <code>LV_IMAGE_SRC_UNKNOWN</code></p></li></ul><h3 id="lv_draw_task_type_t"></h3><hr><h3 id="常量类型-lv-draw-task-type-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-draw-task-type-t"><span>常量类型 lv_draw_task_type_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_draw_task_type_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;fill&quot;</p><p>对应 <code>LV_DRAW_TASK_TYPE_FILL</code></p></li><li><p>&quot;border&quot;</p><p>对应 <code>LV_DRAW_TASK_TYPE_BORDER</code></p></li><li><p>&quot;box-shadow&quot;</p><p>对应 <code>LV_DRAW_TASK_TYPE_BOX_SHADOW</code></p></li><li><p>&quot;label&quot;</p><p>对应 <code>LV_DRAW_TASK_TYPE_LABEL</code></p></li><li><p>&quot;image&quot;</p><p>对应 <code>LV_DRAW_TASK_TYPE_IMAGE</code></p></li><li><p>&quot;layer&quot;</p><p>对应 <code>LV_DRAW_TASK_TYPE_LAYER</code></p></li><li><p>&quot;line&quot;</p><p>对应 <code>LV_DRAW_TASK_TYPE_LINE</code></p></li><li><p>&quot;arc&quot;</p><p>对应 <code>LV_DRAW_TASK_TYPE_ARC</code></p></li><li><p>&quot;triangle&quot;</p><p>对应 <code>LV_DRAW_TASK_TYPE_TRIANGLE</code></p></li><li><p>&quot;mask-rectangle&quot;</p><p>对应 <code>LV_DRAW_TASK_TYPE_MASK_RECTANGLE</code></p></li><li><p>&quot;mask-bitmap&quot;</p><p>对应 <code>LV_DRAW_TASK_TYPE_MASK_BITMAP</code></p></li><li><p>&quot;vector&quot;</p><p>对应 <code>LV_DRAW_TASK_TYPE_VECTOR</code></p></li></ul><h3 id="lv_draw_task_state_t"></h3><hr><h3 id="常量类型-lv-draw-task-state-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-draw-task-state-t"><span>常量类型 lv_draw_task_state_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_draw_task_state_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;waiting&quot;</p><p>对应 <code>LV_DRAW_TASK_STATE_WAITING</code></p></li><li><p>&quot;queued&quot;</p><p>对应 <code>LV_DRAW_TASK_STATE_QUEUED</code></p></li><li><p>&quot;in-progress&quot;</p><p>对应 <code>LV_DRAW_TASK_STATE_IN_PROGRESS</code></p></li><li><p>&quot;ready&quot;</p><p>对应 <code>LV_DRAW_TASK_STATE_READY</code></p></li></ul><h3 id="lv_draw_glyph_bitmap_format_t"></h3><hr><h3 id="常量类型-lv-draw-glyph-bitmap-format-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-draw-glyph-bitmap-format-t"><span>常量类型 lv_draw_glyph_bitmap_format_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_draw_glyph_bitmap_format_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;lv-draw-letter-bitmap-format-invalid&quot;</p><p>对应 <code>LV_DRAW_LETTER_BITMAP_FORMAT_INVALID</code></p></li><li><p>&quot;lv-draw-letter-bitmap-format-a8&quot;</p><p>对应 <code>LV_DRAW_LETTER_BITMAP_FORMAT_A8</code></p></li><li><p>&quot;lv-draw-letter-bitmap-format-image&quot;</p><p>对应 <code>LV_DRAW_LETTER_BITMAP_FORMAT_IMAGE</code></p></li><li><p>&quot;lv-draw-letter-vector-format&quot;</p><p>对应 <code>LV_DRAW_LETTER_VECTOR_FORMAT</code></p></li></ul><h3 id="lv_display_rotation_t"></h3><hr><h3 id="常量类型-lv-display-rotation-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-display-rotation-t"><span>常量类型 lv_display_rotation_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_display_rotation_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;0&quot;</p><p>对应 <code>LV_DISPLAY_ROTATION_0</code></p></li><li><p>&quot;90&quot;</p><p>对应 <code>LV_DISPLAY_ROTATION_90</code></p></li><li><p>&quot;180&quot;</p><p>对应 <code>LV_DISPLAY_ROTATION_180</code></p></li><li><p>&quot;270&quot;</p><p>对应 <code>LV_DISPLAY_ROTATION_270</code></p></li></ul><h3 id="lv_display_render_mode_t"></h3><hr><h3 id="常量类型-lv-display-render-mode-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-display-render-mode-t"><span>常量类型 lv_display_render_mode_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_display_render_mode_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;mode-partial&quot;</p><p>对应 <code>LV_DISPLAY_RENDER_MODE_PARTIAL</code></p></li><li><p>&quot;mode-direct&quot;</p><p>对应 <code>LV_DISPLAY_RENDER_MODE_DIRECT</code></p></li><li><p>&quot;mode-full&quot;</p><p>对应 <code>LV_DISPLAY_RENDER_MODE_FULL</code></p></li></ul><h3 id="lv_screen_load_anim_t"></h3><hr><h3 id="常量类型-lv-screen-load-anim-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-screen-load-anim-t"><span>常量类型 lv_screen_load_anim_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_screen_load_anim_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;lv-scr-load-anim-none&quot;</p><p>对应 <code>LV_SCR_LOAD_ANIM_NONE</code></p></li><li><p>&quot;lv-scr-load-anim-over-left&quot;</p><p>对应 <code>LV_SCR_LOAD_ANIM_OVER_LEFT</code></p></li><li><p>&quot;lv-scr-load-anim-over-right&quot;</p><p>对应 <code>LV_SCR_LOAD_ANIM_OVER_RIGHT</code></p></li><li><p>&quot;lv-scr-load-anim-over-top&quot;</p><p>对应 <code>LV_SCR_LOAD_ANIM_OVER_TOP</code></p></li><li><p>&quot;lv-scr-load-anim-over-bottom&quot;</p><p>对应 <code>LV_SCR_LOAD_ANIM_OVER_BOTTOM</code></p></li><li><p>&quot;lv-scr-load-anim-move-left&quot;</p><p>对应 <code>LV_SCR_LOAD_ANIM_MOVE_LEFT</code></p></li><li><p>&quot;lv-scr-load-anim-move-right&quot;</p><p>对应 <code>LV_SCR_LOAD_ANIM_MOVE_RIGHT</code></p></li><li><p>&quot;lv-scr-load-anim-move-top&quot;</p><p>对应 <code>LV_SCR_LOAD_ANIM_MOVE_TOP</code></p></li><li><p>&quot;lv-scr-load-anim-move-bottom&quot;</p><p>对应 <code>LV_SCR_LOAD_ANIM_MOVE_BOTTOM</code></p></li><li><p>&quot;lv-scr-load-anim-fade-in&quot;</p><p>对应 <code>LV_SCR_LOAD_ANIM_FADE_IN</code></p></li><li><p>&quot;lv-scr-load-anim-fade-on&quot;</p><p>对应 <code>LV_SCR_LOAD_ANIM_FADE_ON</code></p></li><li><p>&quot;lv-scr-load-anim-fade-out&quot;</p><p>对应 <code>LV_SCR_LOAD_ANIM_FADE_OUT</code></p></li><li><p>&quot;lv-scr-load-anim-out-left&quot;</p><p>对应 <code>LV_SCR_LOAD_ANIM_OUT_LEFT</code></p></li><li><p>&quot;lv-scr-load-anim-out-right&quot;</p><p>对应 <code>LV_SCR_LOAD_ANIM_OUT_RIGHT</code></p></li><li><p>&quot;lv-scr-load-anim-out-top&quot;</p><p>对应 <code>LV_SCR_LOAD_ANIM_OUT_TOP</code></p></li><li><p>&quot;lv-scr-load-anim-out-bottom&quot;</p><p>对应 <code>LV_SCR_LOAD_ANIM_OUT_BOTTOM</code></p></li></ul><h3 id="lv_obj_tree_walk_res_t"></h3><hr><h3 id="常量类型-lv-obj-tree-walk-res-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-obj-tree-walk-res-t"><span>常量类型 lv_obj_tree_walk_res_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_obj_tree_walk_res_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;lv-obj-tree-walk-next&quot;</p><p>对应 <code>LV_OBJ_TREE_WALK_NEXT</code></p></li><li><p>&quot;lv-obj-tree-walk-skip-children&quot;</p><p>对应 <code>LV_OBJ_TREE_WALK_SKIP_CHILDREN</code></p></li><li><p>&quot;lv-obj-tree-walk-end&quot;</p><p>对应 <code>LV_OBJ_TREE_WALK_END</code></p></li></ul><h3 id="lv_scrollbar_mode_t"></h3><hr><h3 id="常量类型-lv-scrollbar-mode-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-scrollbar-mode-t"><span>常量类型 lv_scrollbar_mode_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_scrollbar_mode_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;mode-off&quot;</p><p>对应 <code>LV_SCROLLBAR_MODE_OFF</code></p></li><li><p>&quot;mode-on&quot;</p><p>对应 <code>LV_SCROLLBAR_MODE_ON</code></p></li><li><p>&quot;mode-active&quot;</p><p>对应 <code>LV_SCROLLBAR_MODE_ACTIVE</code></p></li><li><p>&quot;mode-auto&quot;</p><p>对应 <code>LV_SCROLLBAR_MODE_AUTO</code></p></li></ul><h3 id="lv_scroll_snap_t"></h3><hr><h3 id="常量类型-lv-scroll-snap-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-scroll-snap-t"><span>常量类型 lv_scroll_snap_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_scroll_snap_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;none&quot;</p><p>对应 <code>LV_SCROLL_SNAP_NONE</code></p></li><li><p>&quot;start&quot;</p><p>对应 <code>LV_SCROLL_SNAP_START</code></p></li><li><p>&quot;end&quot;</p><p>对应 <code>LV_SCROLL_SNAP_END</code></p></li><li><p>&quot;center&quot;</p><p>对应 <code>LV_SCROLL_SNAP_CENTER</code></p></li></ul><h3 id="_lv_style_state_cmp_t"></h3><hr><h3 id="常量类型-lv-style-state-cmp-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-style-state-cmp-t"><span>常量类型 _lv_style_state_cmp_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>_lv_style_state_cmp_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;-same&quot;</p><p>对应 <code>_LV_STYLE_STATE_CMP_SAME</code></p></li><li><p>&quot;-diff-redraw&quot;</p><p>对应 <code>_LV_STYLE_STATE_CMP_DIFF_REDRAW</code></p></li><li><p>&quot;-diff-draw-pad&quot;</p><p>对应 <code>_LV_STYLE_STATE_CMP_DIFF_DRAW_PAD</code></p></li><li><p>&quot;-diff-layout&quot;</p><p>对应 <code>_LV_STYLE_STATE_CMP_DIFF_LAYOUT</code></p></li></ul><h3 id="lv_layer_type_t"></h3><hr><h3 id="常量类型-lv-layer-type-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-layer-type-t"><span>常量类型 lv_layer_type_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_layer_type_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;none&quot;</p><p>对应 <code>LV_LAYER_TYPE_NONE</code></p></li><li><p>&quot;simple&quot;</p><p>对应 <code>LV_LAYER_TYPE_SIMPLE</code></p></li><li><p>&quot;transform&quot;</p><p>对应 <code>LV_LAYER_TYPE_TRANSFORM</code></p></li></ul><h3 id="lv_obj_class_editable_t"></h3><hr><h3 id="常量类型-lv-obj-class-editable-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-obj-class-editable-t"><span>常量类型 lv_obj_class_editable_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_obj_class_editable_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;inherit&quot;</p><p>对应 <code>LV_OBJ_CLASS_EDITABLE_INHERIT</code></p></li><li><p>&quot;true&quot;</p><p>对应 <code>LV_OBJ_CLASS_EDITABLE_TRUE</code></p></li><li><p>&quot;false&quot;</p><p>对应 <code>LV_OBJ_CLASS_EDITABLE_FALSE</code></p></li></ul><h3 id="lv_obj_class_group_def_t"></h3><hr><h3 id="常量类型-lv-obj-class-group-def-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-obj-class-group-def-t"><span>常量类型 lv_obj_class_group_def_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_obj_class_group_def_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;inherit&quot;</p><p>对应 <code>LV_OBJ_CLASS_GROUP_DEF_INHERIT</code></p></li><li><p>&quot;true&quot;</p><p>对应 <code>LV_OBJ_CLASS_GROUP_DEF_TRUE</code></p></li><li><p>&quot;false&quot;</p><p>对应 <code>LV_OBJ_CLASS_GROUP_DEF_FALSE</code></p></li></ul><h3 id="lv_obj_class_theme_inheritable_t"></h3><hr><h3 id="常量类型-lv-obj-class-theme-inheritable-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-obj-class-theme-inheritable-t"><span>常量类型 lv_obj_class_theme_inheritable_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_obj_class_theme_inheritable_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;false&quot;</p><p>对应 <code>LV_OBJ_CLASS_THEME_INHERITABLE_FALSE</code></p></li><li><p>&quot;true&quot;</p><p>对应 <code>LV_OBJ_CLASS_THEME_INHERITABLE_TRUE</code></p></li></ul><h3 id="lv_group_refocus_policy_t"></h3><hr><h3 id="常量类型-lv-group-refocus-policy-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-group-refocus-policy-t"><span>常量类型 lv_group_refocus_policy_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_group_refocus_policy_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;next&quot;</p><p>对应 <code>LV_GROUP_REFOCUS_POLICY_NEXT</code></p></li><li><p>&quot;prev&quot;</p><p>对应 <code>LV_GROUP_REFOCUS_POLICY_PREV</code></p></li></ul><h3 id="lv_indev_type_t"></h3><hr><h3 id="常量类型-lv-indev-type-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-indev-type-t"><span>常量类型 lv_indev_type_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_indev_type_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;none&quot;</p><p>对应 <code>LV_INDEV_TYPE_NONE</code></p></li><li><p>&quot;pointer&quot;</p><p>对应 <code>LV_INDEV_TYPE_POINTER</code></p></li><li><p>&quot;keypad&quot;</p><p>对应 <code>LV_INDEV_TYPE_KEYPAD</code></p></li><li><p>&quot;button&quot;</p><p>对应 <code>LV_INDEV_TYPE_BUTTON</code></p></li><li><p>&quot;encoder&quot;</p><p>对应 <code>LV_INDEV_TYPE_ENCODER</code></p></li></ul><h3 id="lv_indev_state_t"></h3><hr><h3 id="常量类型-lv-indev-state-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-indev-state-t"><span>常量类型 lv_indev_state_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_indev_state_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;released&quot;</p><p>对应 <code>LV_INDEV_STATE_RELEASED</code></p></li><li><p>&quot;pressed&quot;</p><p>对应 <code>LV_INDEV_STATE_PRESSED</code></p></li></ul><h3 id="lv_indev_mode_t"></h3><hr><h3 id="常量类型-lv-indev-mode-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-indev-mode-t"><span>常量类型 lv_indev_mode_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_indev_mode_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;mode-none&quot;</p><p>对应 <code>LV_INDEV_MODE_NONE</code></p></li><li><p>&quot;mode-timer&quot;</p><p>对应 <code>LV_INDEV_MODE_TIMER</code></p></li><li><p>&quot;mode-event&quot;</p><p>对应 <code>LV_INDEV_MODE_EVENT</code></p></li></ul><h3 id="lv_cover_res_t"></h3><hr><h3 id="常量类型-lv-cover-res-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-cover-res-t"><span>常量类型 lv_cover_res_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_cover_res_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;cover&quot;</p><p>对应 <code>LV_COVER_RES_COVER</code></p></li><li><p>&quot;not-cover&quot;</p><p>对应 <code>LV_COVER_RES_NOT_COVER</code></p></li><li><p>&quot;masked&quot;</p><p>对应 <code>LV_COVER_RES_MASKED</code></p></li></ul><h3 id="lv_obj_flag_t"></h3><hr><h3 id="常量类型-lv-obj-flag-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-obj-flag-t"><span>常量类型 lv_obj_flag_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_obj_flag_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;hidden&quot;</p><p>对应 <code>LV_OBJ_FLAG_HIDDEN</code></p></li><li><p>&quot;clickable&quot;</p><p>对应 <code>LV_OBJ_FLAG_CLICKABLE</code></p></li><li><p>&quot;click-focusable&quot;</p><p>对应 <code>LV_OBJ_FLAG_CLICK_FOCUSABLE</code></p></li><li><p>&quot;checkable&quot;</p><p>对应 <code>LV_OBJ_FLAG_CHECKABLE</code></p></li><li><p>&quot;scrollable&quot;</p><p>对应 <code>LV_OBJ_FLAG_SCROLLABLE</code></p></li><li><p>&quot;scroll-elastic&quot;</p><p>对应 <code>LV_OBJ_FLAG_SCROLL_ELASTIC</code></p></li><li><p>&quot;scroll-momentum&quot;</p><p>对应 <code>LV_OBJ_FLAG_SCROLL_MOMENTUM</code></p></li><li><p>&quot;scroll-one&quot;</p><p>对应 <code>LV_OBJ_FLAG_SCROLL_ONE</code></p></li><li><p>&quot;scroll-chain-hor&quot;</p><p>对应 <code>LV_OBJ_FLAG_SCROLL_CHAIN_HOR</code></p></li><li><p>&quot;scroll-chain-ver&quot;</p><p>对应 <code>LV_OBJ_FLAG_SCROLL_CHAIN_VER</code></p></li><li><p>&quot;scroll-chain&quot;</p><p>对应 <code>LV_OBJ_FLAG_SCROLL_CHAIN</code></p></li><li><p>&quot;scroll-on-focus&quot;</p><p>对应 <code>LV_OBJ_FLAG_SCROLL_ON_FOCUS</code></p></li><li><p>&quot;scroll-with-arrow&quot;</p><p>对应 <code>LV_OBJ_FLAG_SCROLL_WITH_ARROW</code></p></li><li><p>&quot;snappable&quot;</p><p>对应 <code>LV_OBJ_FLAG_SNAPPABLE</code></p></li><li><p>&quot;press-lock&quot;</p><p>对应 <code>LV_OBJ_FLAG_PRESS_LOCK</code></p></li><li><p>&quot;event-bubble&quot;</p><p>对应 <code>LV_OBJ_FLAG_EVENT_BUBBLE</code></p></li><li><p>&quot;gesture-bubble&quot;</p><p>对应 <code>LV_OBJ_FLAG_GESTURE_BUBBLE</code></p></li><li><p>&quot;adv-hittest&quot;</p><p>对应 <code>LV_OBJ_FLAG_ADV_HITTEST</code></p></li><li><p>&quot;ignore-layout&quot;</p><p>对应 <code>LV_OBJ_FLAG_IGNORE_LAYOUT</code></p></li><li><p>&quot;floating&quot;</p><p>对应 <code>LV_OBJ_FLAG_FLOATING</code></p></li><li><p>&quot;send-draw-task-events&quot;</p><p>对应 <code>LV_OBJ_FLAG_SEND_DRAW_TASK_EVENTS</code></p></li><li><p>&quot;overflow-visible&quot;</p><p>对应 <code>LV_OBJ_FLAG_OVERFLOW_VISIBLE</code></p></li><li><p>&quot;flex-in-new-track&quot;</p><p>对应 <code>LV_OBJ_FLAG_FLEX_IN_NEW_TRACK</code></p></li><li><p>&quot;layout-1&quot;</p><p>对应 <code>LV_OBJ_FLAG_LAYOUT_1</code></p></li><li><p>&quot;layout-2&quot;</p><p>对应 <code>LV_OBJ_FLAG_LAYOUT_2</code></p></li><li><p>&quot;widget-1&quot;</p><p>对应 <code>LV_OBJ_FLAG_WIDGET_1</code></p></li><li><p>&quot;widget-2&quot;</p><p>对应 <code>LV_OBJ_FLAG_WIDGET_2</code></p></li><li><p>&quot;user-1&quot;</p><p>对应 <code>LV_OBJ_FLAG_USER_1</code></p></li><li><p>&quot;user-2&quot;</p><p>对应 <code>LV_OBJ_FLAG_USER_2</code></p></li><li><p>&quot;user-3&quot;</p><p>对应 <code>LV_OBJ_FLAG_USER_3</code></p></li><li><p>&quot;user-4&quot;</p><p>对应 <code>LV_OBJ_FLAG_USER_4</code></p></li></ul><h3 id="lv_font_fmt_txt_cmap_type_t"></h3><hr><h3 id="常量类型-lv-font-fmt-txt-cmap-type-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-font-fmt-txt-cmap-type-t"><span>常量类型 lv_font_fmt_txt_cmap_type_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_font_fmt_txt_cmap_type_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;lv-font-fmt-txt-cmap-format0-full&quot;</p><p>对应 <code>LV_FONT_FMT_TXT_CMAP_FORMAT0_FULL</code></p></li><li><p>&quot;lv-font-fmt-txt-cmap-sparse-full&quot;</p><p>对应 <code>LV_FONT_FMT_TXT_CMAP_SPARSE_FULL</code></p></li><li><p>&quot;lv-font-fmt-txt-cmap-format0-tiny&quot;</p><p>对应 <code>LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY</code></p></li><li><p>&quot;lv-font-fmt-txt-cmap-sparse-tiny&quot;</p><p>对应 <code>LV_FONT_FMT_TXT_CMAP_SPARSE_TINY</code></p></li></ul><h3 id="lv_font_fmt_txt_bitmap_format_t"></h3><hr><h3 id="常量类型-lv-font-fmt-txt-bitmap-format-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-font-fmt-txt-bitmap-format-t"><span>常量类型 lv_font_fmt_txt_bitmap_format_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_font_fmt_txt_bitmap_format_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;lv-font-fmt-txt-plain&quot;</p><p>对应 <code>LV_FONT_FMT_TXT_PLAIN</code></p></li><li><p>&quot;lv-font-fmt-txt-compressed&quot;</p><p>对应 <code>LV_FONT_FMT_TXT_COMPRESSED</code></p></li><li><p>&quot;lv-font-fmt-txt-compressed-no-prefilter&quot;</p><p>对应 <code>LV_FONT_FMT_TXT_COMPRESSED_NO_PREFILTER</code></p></li></ul><h3 id="lv_image_align_t"></h3><hr><h3 id="常量类型-lv-image-align-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-image-align-t"><span>常量类型 lv_image_align_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_image_align_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;default&quot;</p><p>对应 <code>LV_IMAGE_ALIGN_DEFAULT</code></p></li><li><p>&quot;top-left&quot;</p><p>对应 <code>LV_IMAGE_ALIGN_TOP_LEFT</code></p></li><li><p>&quot;top-mid&quot;</p><p>对应 <code>LV_IMAGE_ALIGN_TOP_MID</code></p></li><li><p>&quot;top-right&quot;</p><p>对应 <code>LV_IMAGE_ALIGN_TOP_RIGHT</code></p></li><li><p>&quot;bottom-left&quot;</p><p>对应 <code>LV_IMAGE_ALIGN_BOTTOM_LEFT</code></p></li><li><p>&quot;bottom-mid&quot;</p><p>对应 <code>LV_IMAGE_ALIGN_BOTTOM_MID</code></p></li><li><p>&quot;bottom-right&quot;</p><p>对应 <code>LV_IMAGE_ALIGN_BOTTOM_RIGHT</code></p></li><li><p>&quot;left-mid&quot;</p><p>对应 <code>LV_IMAGE_ALIGN_LEFT_MID</code></p></li><li><p>&quot;right-mid&quot;</p><p>对应 <code>LV_IMAGE_ALIGN_RIGHT_MID</code></p></li><li><p>&quot;center&quot;</p><p>对应 <code>LV_IMAGE_ALIGN_CENTER</code></p></li><li><p>&quot;-auto-transform&quot;</p><p>对应 <code>_LV_IMAGE_ALIGN_AUTO_TRANSFORM</code></p></li><li><p>&quot;stretch&quot;</p><p>对应 <code>LV_IMAGE_ALIGN_STRETCH</code></p></li><li><p>&quot;tile&quot;</p><p>对应 <code>LV_IMAGE_ALIGN_TILE</code></p></li></ul><h3 id="lv_animimg_part_t"></h3><hr><h3 id="常量类型-lv-animimg-part-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-animimg-part-t"><span>常量类型 lv_animimg_part_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_animimg_part_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;lv-anim-image-part-main&quot;</p><p>对应 <code>LV_ANIM_IMAGE_PART_MAIN</code></p></li></ul><h3 id="lv_arc_mode_t"></h3><hr><h3 id="常量类型-lv-arc-mode-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-arc-mode-t"><span>常量类型 lv_arc_mode_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_arc_mode_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;mode-normal&quot;</p><p>对应 <code>LV_ARC_MODE_NORMAL</code></p></li><li><p>&quot;mode-symmetrical&quot;</p><p>对应 <code>LV_ARC_MODE_SYMMETRICAL</code></p></li><li><p>&quot;mode-reverse&quot;</p><p>对应 <code>LV_ARC_MODE_REVERSE</code></p></li></ul><h3 id="lv_label_long_mode_t"></h3><hr><h3 id="常量类型-lv-label-long-mode-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-label-long-mode-t"><span>常量类型 lv_label_long_mode_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_label_long_mode_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;wrap&quot;</p><p>对应 <code>LV_LABEL_LONG_WRAP</code></p></li><li><p>&quot;dot&quot;</p><p>对应 <code>LV_LABEL_LONG_DOT</code></p></li><li><p>&quot;scroll&quot;</p><p>对应 <code>LV_LABEL_LONG_SCROLL</code></p></li><li><p>&quot;scroll-circular&quot;</p><p>对应 <code>LV_LABEL_LONG_SCROLL_CIRCULAR</code></p></li><li><p>&quot;clip&quot;</p><p>对应 <code>LV_LABEL_LONG_CLIP</code></p></li></ul><h3 id="lv_bar_mode_t"></h3><hr><h3 id="常量类型-lv-bar-mode-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-bar-mode-t"><span>常量类型 lv_bar_mode_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_bar_mode_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;mode-normal&quot;</p><p>对应 <code>LV_BAR_MODE_NORMAL</code></p></li><li><p>&quot;mode-symmetrical&quot;</p><p>对应 <code>LV_BAR_MODE_SYMMETRICAL</code></p></li><li><p>&quot;mode-range&quot;</p><p>对应 <code>LV_BAR_MODE_RANGE</code></p></li></ul><h3 id="lv_buttonmatrix_ctrl_t"></h3><hr><h3 id="常量类型-lv-buttonmatrix-ctrl-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-buttonmatrix-ctrl-t"><span>常量类型 lv_buttonmatrix_ctrl_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_buttonmatrix_ctrl_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;-lv-buttonmatrix-width&quot;</p><p>对应 <code>_LV_BUTTONMATRIX_WIDTH</code></p></li><li><p>&quot;hidden&quot;</p><p>对应 <code>LV_BUTTONMATRIX_CTRL_HIDDEN</code></p></li><li><p>&quot;no-repeat&quot;</p><p>对应 <code>LV_BUTTONMATRIX_CTRL_NO_REPEAT</code></p></li><li><p>&quot;disabled&quot;</p><p>对应 <code>LV_BUTTONMATRIX_CTRL_DISABLED</code></p></li><li><p>&quot;checkable&quot;</p><p>对应 <code>LV_BUTTONMATRIX_CTRL_CHECKABLE</code></p></li><li><p>&quot;checked&quot;</p><p>对应 <code>LV_BUTTONMATRIX_CTRL_CHECKED</code></p></li><li><p>&quot;click-trig&quot;</p><p>对应 <code>LV_BUTTONMATRIX_CTRL_CLICK_TRIG</code></p></li><li><p>&quot;popover&quot;</p><p>对应 <code>LV_BUTTONMATRIX_CTRL_POPOVER</code></p></li><li><p>&quot;-reserved-1&quot;</p><p>对应 <code>_LV_BUTTONMATRIX_CTRL_RESERVED_1</code></p></li><li><p>&quot;-reserved-2&quot;</p><p>对应 <code>_LV_BUTTONMATRIX_CTRL_RESERVED_2</code></p></li><li><p>&quot;-reserved-3&quot;</p><p>对应 <code>_LV_BUTTONMATRIX_CTRL_RESERVED_3</code></p></li><li><p>&quot;custom-1&quot;</p><p>对应 <code>LV_BUTTONMATRIX_CTRL_CUSTOM_1</code></p></li><li><p>&quot;custom-2&quot;</p><p>对应 <code>LV_BUTTONMATRIX_CTRL_CUSTOM_2</code></p></li></ul><h3 id="lv_chart_type_t"></h3><hr><h3 id="常量类型-lv-chart-type-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-chart-type-t"><span>常量类型 lv_chart_type_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_chart_type_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;none&quot;</p><p>对应 <code>LV_CHART_TYPE_NONE</code></p></li><li><p>&quot;line&quot;</p><p>对应 <code>LV_CHART_TYPE_LINE</code></p></li><li><p>&quot;bar&quot;</p><p>对应 <code>LV_CHART_TYPE_BAR</code></p></li><li><p>&quot;scatter&quot;</p><p>对应 <code>LV_CHART_TYPE_SCATTER</code></p></li></ul><h3 id="lv_chart_update_mode_t"></h3><hr><h3 id="常量类型-lv-chart-update-mode-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-chart-update-mode-t"><span>常量类型 lv_chart_update_mode_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_chart_update_mode_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;mode-shift&quot;</p><p>对应 <code>LV_CHART_UPDATE_MODE_SHIFT</code></p></li><li><p>&quot;mode-circular&quot;</p><p>对应 <code>LV_CHART_UPDATE_MODE_CIRCULAR</code></p></li></ul><h3 id="lv_chart_axis_t"></h3><hr><h3 id="常量类型-lv-chart-axis-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-chart-axis-t"><span>常量类型 lv_chart_axis_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_chart_axis_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;primary-y&quot;</p><p>对应 <code>LV_CHART_AXIS_PRIMARY_Y</code></p></li><li><p>&quot;secondary-y&quot;</p><p>对应 <code>LV_CHART_AXIS_SECONDARY_Y</code></p></li><li><p>&quot;primary-x&quot;</p><p>对应 <code>LV_CHART_AXIS_PRIMARY_X</code></p></li><li><p>&quot;secondary-x&quot;</p><p>对应 <code>LV_CHART_AXIS_SECONDARY_X</code></p></li><li><p>&quot;-last&quot;</p><p>对应 <code>_LV_CHART_AXIS_LAST</code></p></li></ul><h3 id="lv_imagebutton_state_t"></h3><hr><h3 id="常量类型-lv-imagebutton-state-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-imagebutton-state-t"><span>常量类型 lv_imagebutton_state_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_imagebutton_state_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;released&quot;</p><p>对应 <code>LV_IMAGEBUTTON_STATE_RELEASED</code></p></li><li><p>&quot;pressed&quot;</p><p>对应 <code>LV_IMAGEBUTTON_STATE_PRESSED</code></p></li><li><p>&quot;disabled&quot;</p><p>对应 <code>LV_IMAGEBUTTON_STATE_DISABLED</code></p></li><li><p>&quot;checked-released&quot;</p><p>对应 <code>LV_IMAGEBUTTON_STATE_CHECKED_RELEASED</code></p></li><li><p>&quot;checked-pressed&quot;</p><p>对应 <code>LV_IMAGEBUTTON_STATE_CHECKED_PRESSED</code></p></li><li><p>&quot;checked-disabled&quot;</p><p>对应 <code>LV_IMAGEBUTTON_STATE_CHECKED_DISABLED</code></p></li><li><p>&quot;-num&quot;</p><p>对应 <code>_LV_IMAGEBUTTON_STATE_NUM</code></p></li></ul><h3 id="lv_keyboard_mode_t"></h3><hr><h3 id="常量类型-lv-keyboard-mode-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-keyboard-mode-t"><span>常量类型 lv_keyboard_mode_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_keyboard_mode_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;mode-text-lower&quot;</p><p>对应 <code>LV_KEYBOARD_MODE_TEXT_LOWER</code></p></li><li><p>&quot;mode-text-upper&quot;</p><p>对应 <code>LV_KEYBOARD_MODE_TEXT_UPPER</code></p></li><li><p>&quot;mode-special&quot;</p><p>对应 <code>LV_KEYBOARD_MODE_SPECIAL</code></p></li><li><p>&quot;mode-number&quot;</p><p>对应 <code>LV_KEYBOARD_MODE_NUMBER</code></p></li><li><p>&quot;mode-user-1&quot;</p><p>对应 <code>LV_KEYBOARD_MODE_USER_1</code></p></li><li><p>&quot;mode-user-2&quot;</p><p>对应 <code>LV_KEYBOARD_MODE_USER_2</code></p></li><li><p>&quot;mode-user-3&quot;</p><p>对应 <code>LV_KEYBOARD_MODE_USER_3</code></p></li><li><p>&quot;mode-user-4&quot;</p><p>对应 <code>LV_KEYBOARD_MODE_USER_4</code></p></li></ul><h3 id="lv_menu_mode_header_t"></h3><hr><h3 id="常量类型-lv-menu-mode-header-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-menu-mode-header-t"><span>常量类型 lv_menu_mode_header_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_menu_mode_header_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;top-fixed&quot;</p><p>对应 <code>LV_MENU_HEADER_TOP_FIXED</code></p></li><li><p>&quot;top-unfixed&quot;</p><p>对应 <code>LV_MENU_HEADER_TOP_UNFIXED</code></p></li><li><p>&quot;bottom-fixed&quot;</p><p>对应 <code>LV_MENU_HEADER_BOTTOM_FIXED</code></p></li></ul><h3 id="lv_menu_mode_root_back_button_t"></h3><hr><h3 id="常量类型-lv-menu-mode-root-back-button-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-menu-mode-root-back-button-t"><span>常量类型 lv_menu_mode_root_back_button_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_menu_mode_root_back_button_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;disabled&quot;</p><p>对应 <code>LV_MENU_ROOT_BACK_BUTTON_DISABLED</code></p></li><li><p>&quot;enabled&quot;</p><p>对应 <code>LV_MENU_ROOT_BACK_BUTTON_ENABLED</code></p></li></ul><h3 id="lv_roller_mode_t"></h3><hr><h3 id="常量类型-lv-roller-mode-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-roller-mode-t"><span>常量类型 lv_roller_mode_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_roller_mode_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;mode-normal&quot;</p><p>对应 <code>LV_ROLLER_MODE_NORMAL</code></p></li><li><p>&quot;mode-infinite&quot;</p><p>对应 <code>LV_ROLLER_MODE_INFINITE</code></p></li></ul><h3 id="lv_scale_mode_t"></h3><hr><h3 id="常量类型-lv-scale-mode-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-scale-mode-t"><span>常量类型 lv_scale_mode_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_scale_mode_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;mode-horizontal-top&quot;</p><p>对应 <code>LV_SCALE_MODE_HORIZONTAL_TOP</code></p></li><li><p>&quot;mode-horizontal-bottom&quot;</p><p>对应 <code>LV_SCALE_MODE_HORIZONTAL_BOTTOM</code></p></li><li><p>&quot;mode-vertical-left&quot;</p><p>对应 <code>LV_SCALE_MODE_VERTICAL_LEFT</code></p></li><li><p>&quot;mode-vertical-right&quot;</p><p>对应 <code>LV_SCALE_MODE_VERTICAL_RIGHT</code></p></li><li><p>&quot;mode-round-inner&quot;</p><p>对应 <code>LV_SCALE_MODE_ROUND_INNER</code></p></li><li><p>&quot;mode-round-outer&quot;</p><p>对应 <code>LV_SCALE_MODE_ROUND_OUTER</code></p></li><li><p>&quot;-mode-last&quot;</p><p>对应 <code>_LV_SCALE_MODE_LAST</code></p></li></ul><h3 id="lv_slider_mode_t"></h3><hr><h3 id="常量类型-lv-slider-mode-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-slider-mode-t"><span>常量类型 lv_slider_mode_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_slider_mode_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;mode-normal&quot;</p><p>对应 <code>LV_SLIDER_MODE_NORMAL</code></p></li><li><p>&quot;mode-symmetrical&quot;</p><p>对应 <code>LV_SLIDER_MODE_SYMMETRICAL</code></p></li><li><p>&quot;mode-range&quot;</p><p>对应 <code>LV_SLIDER_MODE_RANGE</code></p></li></ul><h3 id="lv_span_overflow_t"></h3><hr><h3 id="常量类型-lv-span-overflow-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-span-overflow-t"><span>常量类型 lv_span_overflow_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_span_overflow_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;clip&quot;</p><p>对应 <code>LV_SPAN_OVERFLOW_CLIP</code></p></li><li><p>&quot;ellipsis&quot;</p><p>对应 <code>LV_SPAN_OVERFLOW_ELLIPSIS</code></p></li><li><p>&quot;-last&quot;</p><p>对应 <code>_LV_SPAN_OVERFLOW_LAST</code></p></li></ul><h3 id="lv_span_mode_t"></h3><hr><h3 id="常量类型-lv-span-mode-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-span-mode-t"><span>常量类型 lv_span_mode_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_span_mode_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;mode-fixed&quot;</p><p>对应 <code>LV_SPAN_MODE_FIXED</code></p></li><li><p>&quot;mode-expand&quot;</p><p>对应 <code>LV_SPAN_MODE_EXPAND</code></p></li><li><p>&quot;mode-break&quot;</p><p>对应 <code>LV_SPAN_MODE_BREAK</code></p></li><li><p>&quot;-mode-last&quot;</p><p>对应 <code>_LV_SPAN_MODE_LAST</code></p></li></ul><h3 id="lv_table_cell_ctrl_t"></h3><hr><h3 id="常量类型-lv-table-cell-ctrl-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-table-cell-ctrl-t"><span>常量类型 lv_table_cell_ctrl_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_table_cell_ctrl_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;merge-right&quot;</p><p>对应 <code>LV_TABLE_CELL_CTRL_MERGE_RIGHT</code></p></li><li><p>&quot;text-crop&quot;</p><p>对应 <code>LV_TABLE_CELL_CTRL_TEXT_CROP</code></p></li><li><p>&quot;custom-1&quot;</p><p>对应 <code>LV_TABLE_CELL_CTRL_CUSTOM_1</code></p></li><li><p>&quot;custom-2&quot;</p><p>对应 <code>LV_TABLE_CELL_CTRL_CUSTOM_2</code></p></li><li><p>&quot;custom-3&quot;</p><p>对应 <code>LV_TABLE_CELL_CTRL_CUSTOM_3</code></p></li><li><p>&quot;custom-4&quot;</p><p>对应 <code>LV_TABLE_CELL_CTRL_CUSTOM_4</code></p></li></ul><h3 id="lv_subject_type_t"></h3><hr><h3 id="常量类型-lv-subject-type-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-subject-type-t"><span>常量类型 lv_subject_type_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_subject_type_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;invalid&quot;</p><p>对应 <code>LV_SUBJECT_TYPE_INVALID</code></p></li><li><p>&quot;none&quot;</p><p>对应 <code>LV_SUBJECT_TYPE_NONE</code></p></li><li><p>&quot;int&quot;</p><p>对应 <code>LV_SUBJECT_TYPE_INT</code></p></li><li><p>&quot;pointer&quot;</p><p>对应 <code>LV_SUBJECT_TYPE_POINTER</code></p></li><li><p>&quot;color&quot;</p><p>对应 <code>LV_SUBJECT_TYPE_COLOR</code></p></li><li><p>&quot;group&quot;</p><p>对应 <code>LV_SUBJECT_TYPE_GROUP</code></p></li><li><p>&quot;string&quot;</p><p>对应 <code>LV_SUBJECT_TYPE_STRING</code></p></li></ul><h3 id="lv_draw_sw_mask_res_t"></h3><hr><h3 id="常量类型-lv-draw-sw-mask-res-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-draw-sw-mask-res-t"><span>常量类型 lv_draw_sw_mask_res_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_draw_sw_mask_res_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;transp&quot;</p><p>对应 <code>LV_DRAW_SW_MASK_RES_TRANSP</code></p></li><li><p>&quot;full-cover&quot;</p><p>对应 <code>LV_DRAW_SW_MASK_RES_FULL_COVER</code></p></li><li><p>&quot;changed&quot;</p><p>对应 <code>LV_DRAW_SW_MASK_RES_CHANGED</code></p></li><li><p>&quot;unknown&quot;</p><p>对应 <code>LV_DRAW_SW_MASK_RES_UNKNOWN</code></p></li></ul><h3 id="lv_draw_sw_mask_type_t"></h3><hr><h3 id="常量类型-lv-draw-sw-mask-type-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-draw-sw-mask-type-t"><span>常量类型 lv_draw_sw_mask_type_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_draw_sw_mask_type_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;line&quot;</p><p>对应 <code>LV_DRAW_SW_MASK_TYPE_LINE</code></p></li><li><p>&quot;angle&quot;</p><p>对应 <code>LV_DRAW_SW_MASK_TYPE_ANGLE</code></p></li><li><p>&quot;radius&quot;</p><p>对应 <code>LV_DRAW_SW_MASK_TYPE_RADIUS</code></p></li><li><p>&quot;fade&quot;</p><p>对应 <code>LV_DRAW_SW_MASK_TYPE_FADE</code></p></li><li><p>&quot;map&quot;</p><p>对应 <code>LV_DRAW_SW_MASK_TYPE_MAP</code></p></li></ul><h3 id="lv_state_t"></h3><hr><h3 id="常量类型-lv-state-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-state-t"><span>常量类型 lv_state_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_state_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;default&quot;</p><p>对应 <code>LV_STATE_DEFAULT</code></p></li><li><p>&quot;checked&quot;</p><p>对应 <code>LV_STATE_CHECKED</code></p></li><li><p>&quot;focused&quot;</p><p>对应 <code>LV_STATE_FOCUSED</code></p></li><li><p>&quot;focus-key&quot;</p><p>对应 <code>LV_STATE_FOCUS_KEY</code></p></li><li><p>&quot;edited&quot;</p><p>对应 <code>LV_STATE_EDITED</code></p></li><li><p>&quot;hovered&quot;</p><p>对应 <code>LV_STATE_HOVERED</code></p></li><li><p>&quot;pressed&quot;</p><p>对应 <code>LV_STATE_PRESSED</code></p></li><li><p>&quot;scrolled&quot;</p><p>对应 <code>LV_STATE_SCROLLED</code></p></li><li><p>&quot;disabled&quot;</p><p>对应 <code>LV_STATE_DISABLED</code></p></li><li><p>&quot;user-1&quot;</p><p>对应 <code>LV_STATE_USER_1</code></p></li><li><p>&quot;user-2&quot;</p><p>对应 <code>LV_STATE_USER_2</code></p></li><li><p>&quot;user-3&quot;</p><p>对应 <code>LV_STATE_USER_3</code></p></li><li><p>&quot;user-4&quot;</p><p>对应 <code>LV_STATE_USER_4</code></p></li><li><p>&quot;any&quot;</p><p>对应 <code>LV_STATE_ANY</code></p></li></ul><h3 id="_lv_part_t"></h3><hr><h3 id="常量类型-lv-part-t" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-part-t"><span>常量类型 _lv_part_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>_lv_part_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;main&quot;</p><p>对应 <code>LV_PART_MAIN</code></p></li><li><p>&quot;scrollbar&quot;</p><p>对应 <code>LV_PART_SCROLLBAR</code></p></li><li><p>&quot;indicator&quot;</p><p>对应 <code>LV_PART_INDICATOR</code></p></li><li><p>&quot;knob&quot;</p><p>对应 <code>LV_PART_KNOB</code></p></li><li><p>&quot;selected&quot;</p><p>对应 <code>LV_PART_SELECTED</code></p></li><li><p>&quot;items&quot;</p><p>对应 <code>LV_PART_ITEMS</code></p></li><li><p>&quot;cursor&quot;</p><p>对应 <code>LV_PART_CURSOR</code></p></li><li><p>&quot;custom-first&quot;</p><p>对应 <code>LV_PART_CUSTOM_FIRST</code></p></li><li><p>&quot;any&quot;</p><p>对应 <code>LV_PART_ANY</code></p></li></ul><h3 id="lv_obj_flag_t"></h3><hr><h3 id="常量类型-lv-obj-flag-t-1" tabindex="-1"><a class="header-anchor" href="#常量类型-lv-obj-flag-t-1"><span>常量类型 lv_obj_flag_t</span></a></h3><p>BeShell 将 LVGL C API 中的常量类型 <code>lv_obj_flag_t</code> 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。</p><p>可用值(js 字符串):</p><ul><li><p>&quot;hidden&quot;</p><p>对应 <code>LV_OBJ_FLAG_HIDDEN</code></p></li><li><p>&quot;clickable&quot;</p><p>对应 <code>LV_OBJ_FLAG_CLICKABLE</code></p></li><li><p>&quot;click-focusable&quot;</p><p>对应 <code>LV_OBJ_FLAG_CLICK_FOCUSABLE</code></p></li><li><p>&quot;checkable&quot;</p><p>对应 <code>LV_OBJ_FLAG_CHECKABLE</code></p></li><li><p>&quot;scrollable&quot;</p><p>对应 <code>LV_OBJ_FLAG_SCROLLABLE</code></p></li><li><p>&quot;scroll-elastic&quot;</p><p>对应 <code>LV_OBJ_FLAG_SCROLL_ELASTIC</code></p></li><li><p>&quot;scroll-momentum&quot;</p><p>对应 <code>LV_OBJ_FLAG_SCROLL_MOMENTUM</code></p></li><li><p>&quot;scroll-one&quot;</p><p>对应 <code>LV_OBJ_FLAG_SCROLL_ONE</code></p></li><li><p>&quot;scroll-chain-hor&quot;</p><p>对应 <code>LV_OBJ_FLAG_SCROLL_CHAIN_HOR</code></p></li><li><p>&quot;scroll-chain-ver&quot;</p><p>对应 <code>LV_OBJ_FLAG_SCROLL_CHAIN_VER</code></p></li><li><p>&quot;scroll-chain&quot;</p><p>对应 <code>LV_OBJ_FLAG_SCROLL_CHAIN</code></p></li><li><p>&quot;scroll-on-focus&quot;</p><p>对应 <code>LV_OBJ_FLAG_SCROLL_ON_FOCUS</code></p></li><li><p>&quot;scroll-with-arrow&quot;</p><p>对应 <code>LV_OBJ_FLAG_SCROLL_WITH_ARROW</code></p></li><li><p>&quot;snappable&quot;</p><p>对应 <code>LV_OBJ_FLAG_SNAPPABLE</code></p></li><li><p>&quot;press-lock&quot;</p><p>对应 <code>LV_OBJ_FLAG_PRESS_LOCK</code></p></li><li><p>&quot;event-bubble&quot;</p><p>对应 <code>LV_OBJ_FLAG_EVENT_BUBBLE</code></p></li><li><p>&quot;gesture-bubble&quot;</p><p>对应 <code>LV_OBJ_FLAG_GESTURE_BUBBLE</code></p></li><li><p>&quot;adv-hittest&quot;</p><p>对应 <code>LV_OBJ_FLAG_ADV_HITTEST</code></p></li><li><p>&quot;ignore-layout&quot;</p><p>对应 <code>LV_OBJ_FLAG_IGNORE_LAYOUT</code></p></li><li><p>&quot;floating&quot;</p><p>对应 <code>LV_OBJ_FLAG_FLOATING</code></p></li><li><p>&quot;send-draw-task-events&quot;</p><p>对应 <code>LV_OBJ_FLAG_SEND_DRAW_TASK_EVENTS</code></p></li><li><p>&quot;overflow-visible&quot;</p><p>对应 <code>LV_OBJ_FLAG_OVERFLOW_VISIBLE</code></p></li><li><p>&quot;flex-in-new-track&quot;</p><p>对应 <code>LV_OBJ_FLAG_FLEX_IN_NEW_TRACK</code></p></li><li><p>&quot;layout-1&quot;</p><p>对应 <code>LV_OBJ_FLAG_LAYOUT_1</code></p></li><li><p>&quot;layout-2&quot;</p><p>对应 <code>LV_OBJ_FLAG_LAYOUT_2</code></p></li><li><p>&quot;widget-1&quot;</p><p>对应 <code>LV_OBJ_FLAG_WIDGET_1</code></p></li><li><p>&quot;widget-2&quot;</p><p>对应 <code>LV_OBJ_FLAG_WIDGET_2</code></p></li><li><p>&quot;user-1&quot;</p><p>对应 <code>LV_OBJ_FLAG_USER_1</code></p></li><li><p>&quot;user-2&quot;</p><p>对应 <code>LV_OBJ_FLAG_USER_2</code></p></li><li><p>&quot;user-3&quot;</p><p>对应 <code>LV_OBJ_FLAG_USER_3</code></p></li><li><p>&quot;user-4&quot;</p><p>对应 <code>LV_OBJ_FLAG_USER_4</code></p></li></ul>',468),i=[_];function d(c,a){return l(),e("div",null,i)}const r=o(t,[["render",d],["__file","consts.html.vue"]]),q=JSON.parse('{"path":"/api/lvgl/consts.html","title":"","lang":"zh-CN","frontmatter":{"description":"常量类型 lv_result_t BeShell 将 LVGL C API 中的常量类型 lv_result_t 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。 可用值(js 字符串): \\"invalid\\" 对应 LV_RESULT_INVALID \\"ok\\" 对应 LV_RESUL...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/api/lvgl/consts.html"}],["meta",{"property":"og:description","content":"常量类型 lv_result_t BeShell 将 LVGL C API 中的常量类型 lv_result_t 映射为 JS 字符串，在访问 JavaScript lvgl api 时，应使用对应的字符串替代 LVGL C 常量。 可用值(js 字符串): \\"invalid\\" 对应 LV_RESULT_INVALID \\"ok\\" 对应 LV_RESUL..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-06T10:23:18.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-06T10:23:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-06T10:23:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"常量类型 lv_result_t","slug":"常量类型-lv-result-t","link":"#常量类型-lv-result-t","children":[]},{"level":3,"title":"常量类型 lv_anim_enable_t","slug":"常量类型-lv-anim-enable-t","link":"#常量类型-lv-anim-enable-t","children":[]},{"level":3,"title":"常量类型 lv_rb_color_t","slug":"常量类型-lv-rb-color-t","link":"#常量类型-lv-rb-color-t","children":[]},{"level":3,"title":"常量类型 lv_align_t","slug":"常量类型-lv-align-t","link":"#常量类型-lv-align-t","children":[]},{"level":3,"title":"常量类型 lv_dir_t","slug":"常量类型-lv-dir-t","link":"#常量类型-lv-dir-t","children":[]},{"level":3,"title":"常量类型 lv_opa_t","slug":"常量类型-lv-opa-t","link":"#常量类型-lv-opa-t","children":[]},{"level":3,"title":"常量类型 lv_color_format_t","slug":"常量类型-lv-color-format-t","link":"#常量类型-lv-color-format-t","children":[]},{"level":3,"title":"常量类型 lv_palette_t","slug":"常量类型-lv-palette-t","link":"#常量类型-lv-palette-t","children":[]},{"level":3,"title":"常量类型 lv_image_flags_t","slug":"常量类型-lv-image-flags-t","link":"#常量类型-lv-image-flags-t","children":[]},{"level":3,"title":"常量类型 lv_image_compress_t","slug":"常量类型-lv-image-compress-t","link":"#常量类型-lv-image-compress-t","children":[]},{"level":3,"title":"常量类型 lv_thread_prio_t","slug":"常量类型-lv-thread-prio-t","link":"#常量类型-lv-thread-prio-t","children":[]},{"level":3,"title":"常量类型 lv_font_subpx_t","slug":"常量类型-lv-font-subpx-t","link":"#常量类型-lv-font-subpx-t","children":[]},{"level":3,"title":"常量类型 lv_font_kerning_t","slug":"常量类型-lv-font-kerning-t","link":"#常量类型-lv-font-kerning-t","children":[]},{"level":3,"title":"常量类型 lv_text_flag_t","slug":"常量类型-lv-text-flag-t","link":"#常量类型-lv-text-flag-t","children":[]},{"level":3,"title":"常量类型 lv_text_align_t","slug":"常量类型-lv-text-align-t","link":"#常量类型-lv-text-align-t","children":[]},{"level":3,"title":"常量类型 lv_base_dir_t","slug":"常量类型-lv-base-dir-t","link":"#常量类型-lv-base-dir-t","children":[]},{"level":3,"title":"常量类型 lv_layout_t","slug":"常量类型-lv-layout-t","link":"#常量类型-lv-layout-t","children":[]},{"level":3,"title":"常量类型 lv_flex_align_t","slug":"常量类型-lv-flex-align-t","link":"#常量类型-lv-flex-align-t","children":[]},{"level":3,"title":"常量类型 lv_flex_flow_t","slug":"常量类型-lv-flex-flow-t","link":"#常量类型-lv-flex-flow-t","children":[]},{"level":3,"title":"常量类型 lv_grid_align_t","slug":"常量类型-lv-grid-align-t","link":"#常量类型-lv-grid-align-t","children":[]},{"level":3,"title":"常量类型 lv_blend_mode_t","slug":"常量类型-lv-blend-mode-t","link":"#常量类型-lv-blend-mode-t","children":[]},{"level":3,"title":"常量类型 lv_text_decor_t","slug":"常量类型-lv-text-decor-t","link":"#常量类型-lv-text-decor-t","children":[]},{"level":3,"title":"常量类型 lv_border_side_t","slug":"常量类型-lv-border-side-t","link":"#常量类型-lv-border-side-t","children":[]},{"level":3,"title":"常量类型 lv_grad_dir_t","slug":"常量类型-lv-grad-dir-t","link":"#常量类型-lv-grad-dir-t","children":[]},{"level":3,"title":"常量类型 lv_style_prop_t","slug":"常量类型-lv-style-prop-t","link":"#常量类型-lv-style-prop-t","children":[]},{"level":3,"title":"常量类型 lv_style_res_t","slug":"常量类型-lv-style-res-t","link":"#常量类型-lv-style-res-t","children":[]},{"level":3,"title":"常量类型 lv_event_code_t","slug":"常量类型-lv-event-code-t","link":"#常量类型-lv-event-code-t","children":[]},{"level":3,"title":"常量类型 lv_fs_res_t","slug":"常量类型-lv-fs-res-t","link":"#常量类型-lv-fs-res-t","children":[]},{"level":3,"title":"常量类型 lv_fs_mode_t","slug":"常量类型-lv-fs-mode-t","link":"#常量类型-lv-fs-mode-t","children":[]},{"level":3,"title":"常量类型 lv_fs_whence_t","slug":"常量类型-lv-fs-whence-t","link":"#常量类型-lv-fs-whence-t","children":[]},{"level":3,"title":"常量类型 lv_image_src_t","slug":"常量类型-lv-image-src-t","link":"#常量类型-lv-image-src-t","children":[]},{"level":3,"title":"常量类型 lv_draw_task_type_t","slug":"常量类型-lv-draw-task-type-t","link":"#常量类型-lv-draw-task-type-t","children":[]},{"level":3,"title":"常量类型 lv_draw_task_state_t","slug":"常量类型-lv-draw-task-state-t","link":"#常量类型-lv-draw-task-state-t","children":[]},{"level":3,"title":"常量类型 lv_draw_glyph_bitmap_format_t","slug":"常量类型-lv-draw-glyph-bitmap-format-t","link":"#常量类型-lv-draw-glyph-bitmap-format-t","children":[]},{"level":3,"title":"常量类型 lv_display_rotation_t","slug":"常量类型-lv-display-rotation-t","link":"#常量类型-lv-display-rotation-t","children":[]},{"level":3,"title":"常量类型 lv_display_render_mode_t","slug":"常量类型-lv-display-render-mode-t","link":"#常量类型-lv-display-render-mode-t","children":[]},{"level":3,"title":"常量类型 lv_screen_load_anim_t","slug":"常量类型-lv-screen-load-anim-t","link":"#常量类型-lv-screen-load-anim-t","children":[]},{"level":3,"title":"常量类型 lv_obj_tree_walk_res_t","slug":"常量类型-lv-obj-tree-walk-res-t","link":"#常量类型-lv-obj-tree-walk-res-t","children":[]},{"level":3,"title":"常量类型 lv_scrollbar_mode_t","slug":"常量类型-lv-scrollbar-mode-t","link":"#常量类型-lv-scrollbar-mode-t","children":[]},{"level":3,"title":"常量类型 lv_scroll_snap_t","slug":"常量类型-lv-scroll-snap-t","link":"#常量类型-lv-scroll-snap-t","children":[]},{"level":3,"title":"常量类型 _lv_style_state_cmp_t","slug":"常量类型-lv-style-state-cmp-t","link":"#常量类型-lv-style-state-cmp-t","children":[]},{"level":3,"title":"常量类型 lv_layer_type_t","slug":"常量类型-lv-layer-type-t","link":"#常量类型-lv-layer-type-t","children":[]},{"level":3,"title":"常量类型 lv_obj_class_editable_t","slug":"常量类型-lv-obj-class-editable-t","link":"#常量类型-lv-obj-class-editable-t","children":[]},{"level":3,"title":"常量类型 lv_obj_class_group_def_t","slug":"常量类型-lv-obj-class-group-def-t","link":"#常量类型-lv-obj-class-group-def-t","children":[]},{"level":3,"title":"常量类型 lv_obj_class_theme_inheritable_t","slug":"常量类型-lv-obj-class-theme-inheritable-t","link":"#常量类型-lv-obj-class-theme-inheritable-t","children":[]},{"level":3,"title":"常量类型 lv_group_refocus_policy_t","slug":"常量类型-lv-group-refocus-policy-t","link":"#常量类型-lv-group-refocus-policy-t","children":[]},{"level":3,"title":"常量类型 lv_indev_type_t","slug":"常量类型-lv-indev-type-t","link":"#常量类型-lv-indev-type-t","children":[]},{"level":3,"title":"常量类型 lv_indev_state_t","slug":"常量类型-lv-indev-state-t","link":"#常量类型-lv-indev-state-t","children":[]},{"level":3,"title":"常量类型 lv_indev_mode_t","slug":"常量类型-lv-indev-mode-t","link":"#常量类型-lv-indev-mode-t","children":[]},{"level":3,"title":"常量类型 lv_cover_res_t","slug":"常量类型-lv-cover-res-t","link":"#常量类型-lv-cover-res-t","children":[]},{"level":3,"title":"常量类型 lv_obj_flag_t","slug":"常量类型-lv-obj-flag-t","link":"#常量类型-lv-obj-flag-t","children":[]},{"level":3,"title":"常量类型 lv_font_fmt_txt_cmap_type_t","slug":"常量类型-lv-font-fmt-txt-cmap-type-t","link":"#常量类型-lv-font-fmt-txt-cmap-type-t","children":[]},{"level":3,"title":"常量类型 lv_font_fmt_txt_bitmap_format_t","slug":"常量类型-lv-font-fmt-txt-bitmap-format-t","link":"#常量类型-lv-font-fmt-txt-bitmap-format-t","children":[]},{"level":3,"title":"常量类型 lv_image_align_t","slug":"常量类型-lv-image-align-t","link":"#常量类型-lv-image-align-t","children":[]},{"level":3,"title":"常量类型 lv_animimg_part_t","slug":"常量类型-lv-animimg-part-t","link":"#常量类型-lv-animimg-part-t","children":[]},{"level":3,"title":"常量类型 lv_arc_mode_t","slug":"常量类型-lv-arc-mode-t","link":"#常量类型-lv-arc-mode-t","children":[]},{"level":3,"title":"常量类型 lv_label_long_mode_t","slug":"常量类型-lv-label-long-mode-t","link":"#常量类型-lv-label-long-mode-t","children":[]},{"level":3,"title":"常量类型 lv_bar_mode_t","slug":"常量类型-lv-bar-mode-t","link":"#常量类型-lv-bar-mode-t","children":[]},{"level":3,"title":"常量类型 lv_buttonmatrix_ctrl_t","slug":"常量类型-lv-buttonmatrix-ctrl-t","link":"#常量类型-lv-buttonmatrix-ctrl-t","children":[]},{"level":3,"title":"常量类型 lv_chart_type_t","slug":"常量类型-lv-chart-type-t","link":"#常量类型-lv-chart-type-t","children":[]},{"level":3,"title":"常量类型 lv_chart_update_mode_t","slug":"常量类型-lv-chart-update-mode-t","link":"#常量类型-lv-chart-update-mode-t","children":[]},{"level":3,"title":"常量类型 lv_chart_axis_t","slug":"常量类型-lv-chart-axis-t","link":"#常量类型-lv-chart-axis-t","children":[]},{"level":3,"title":"常量类型 lv_imagebutton_state_t","slug":"常量类型-lv-imagebutton-state-t","link":"#常量类型-lv-imagebutton-state-t","children":[]},{"level":3,"title":"常量类型 lv_keyboard_mode_t","slug":"常量类型-lv-keyboard-mode-t","link":"#常量类型-lv-keyboard-mode-t","children":[]},{"level":3,"title":"常量类型 lv_menu_mode_header_t","slug":"常量类型-lv-menu-mode-header-t","link":"#常量类型-lv-menu-mode-header-t","children":[]},{"level":3,"title":"常量类型 lv_menu_mode_root_back_button_t","slug":"常量类型-lv-menu-mode-root-back-button-t","link":"#常量类型-lv-menu-mode-root-back-button-t","children":[]},{"level":3,"title":"常量类型 lv_roller_mode_t","slug":"常量类型-lv-roller-mode-t","link":"#常量类型-lv-roller-mode-t","children":[]},{"level":3,"title":"常量类型 lv_scale_mode_t","slug":"常量类型-lv-scale-mode-t","link":"#常量类型-lv-scale-mode-t","children":[]},{"level":3,"title":"常量类型 lv_slider_mode_t","slug":"常量类型-lv-slider-mode-t","link":"#常量类型-lv-slider-mode-t","children":[]},{"level":3,"title":"常量类型 lv_span_overflow_t","slug":"常量类型-lv-span-overflow-t","link":"#常量类型-lv-span-overflow-t","children":[]},{"level":3,"title":"常量类型 lv_span_mode_t","slug":"常量类型-lv-span-mode-t","link":"#常量类型-lv-span-mode-t","children":[]},{"level":3,"title":"常量类型 lv_table_cell_ctrl_t","slug":"常量类型-lv-table-cell-ctrl-t","link":"#常量类型-lv-table-cell-ctrl-t","children":[]},{"level":3,"title":"常量类型 lv_subject_type_t","slug":"常量类型-lv-subject-type-t","link":"#常量类型-lv-subject-type-t","children":[]},{"level":3,"title":"常量类型 lv_draw_sw_mask_res_t","slug":"常量类型-lv-draw-sw-mask-res-t","link":"#常量类型-lv-draw-sw-mask-res-t","children":[]},{"level":3,"title":"常量类型 lv_draw_sw_mask_type_t","slug":"常量类型-lv-draw-sw-mask-type-t","link":"#常量类型-lv-draw-sw-mask-type-t","children":[]},{"level":3,"title":"常量类型 lv_state_t","slug":"常量类型-lv-state-t","link":"#常量类型-lv-state-t","children":[]},{"level":3,"title":"常量类型 _lv_part_t","slug":"常量类型-lv-part-t","link":"#常量类型-lv-part-t","children":[]},{"level":3,"title":"常量类型 lv_obj_flag_t","slug":"常量类型-lv-obj-flag-t-1","link":"#常量类型-lv-obj-flag-t-1","children":[]}],"git":{"createdTime":1714921960000,"updatedTime":1714990998000,"contributors":[{"name":"alee","email":"alee@chou.im","commits":2},{"name":"alee","email":"alee_zhou@seminstructs.com","commits":1}]},"readingTime":{"minutes":25.7,"words":7709},"filePathRelative":"api/lvgl/consts.md","localizedDate":"2024年5月5日","autoDesc":true}');export{r as comp,q as data};
