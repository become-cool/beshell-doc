import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a as p,b as t,d as l,e as r,w as d,r as s,o as x}from"./app-CbJW3NnK.js";const u={},h={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},L={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},y={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},A={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},V={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},I={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},P={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},G={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},w={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},C={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},T={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},q={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},S={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},R={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},N={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},D={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},B={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},j={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"},z={href:"https://docs.lvgl.io/9.0/API/index.html",target:"_blank",rel:"noopener noreferrer"};function E(F,e){const n=s("ExternalLinkIcon"),o=s("RouteLink");return x(),i("div",null,[e[116]||(e[116]=p('<h1 id="类-textarea" tabindex="-1"><a class="header-anchor" href="#类-textarea"><span>类: TextArea</span></a></h1><h2 id="类属性" tabindex="-1"><a class="header-anchor" href="#类属性"><span>类属性</span></a></h2><p style="height:10px;margin:0px;"></p><h3 id="属性-text" tabindex="-1"><a class="header-anchor" href="#属性-text"><span><span class="member-header property"></span> 属性 text</span></a></h3><p>类型:</p><p>访问: 只写</p>',6)),t("blockquote",null,[t("p",null,[e[1]||(e[1]=l("该属性是对 LVGL C API ")),e[2]||(e[2]=t("code",null,"lv_textarea_set_text",-1)),e[3]||(e[3]=l(" 的封装， 具体用法请参考 ")),t("a",h,[e[0]||(e[0]=l("LVGL文档")),r(n)])])]),e[117]||(e[117]=p('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-placeholdertext" tabindex="-1"><a class="header-anchor" href="#属性-placeholdertext"><span><span class="member-header property"></span> 属性 placeholderText</span></a></h3><p>类型:</p><p>访问: 只写</p>',5)),t("blockquote",null,[t("p",null,[e[5]||(e[5]=l("该属性是对 LVGL C API ")),e[6]||(e[6]=t("code",null,"lv_textarea_set_placeholder_text",-1)),e[7]||(e[7]=l(" 的封装， 具体用法请参考 ")),t("a",g,[e[4]||(e[4]=l("LVGL文档")),r(n)])])]),e[118]||(e[118]=p('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-cursorpos" tabindex="-1"><a class="header-anchor" href="#属性-cursorpos"><span><span class="member-header property"></span> 属性 cursorPos</span></a></h3><p>类型: number</p><p>访问: 可读, 可写</p>',5)),t("blockquote",null,[t("p",null,[e[9]||(e[9]=l("该属性是对 LVGL C API ")),e[10]||(e[10]=t("code",null,"lv_textarea_get_cursor_pos",-1)),e[11]||(e[11]=l(", ")),e[12]||(e[12]=t("code",null,"lv_textarea_set_cursor_pos",-1)),e[13]||(e[13]=l(" 的封装， 具体用法请参考 ")),t("a",m,[e[8]||(e[8]=l("LVGL文档")),r(n)])])]),e[119]||(e[119]=p('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-cursorclickpos" tabindex="-1"><a class="header-anchor" href="#属性-cursorclickpos"><span><span class="member-header property"></span> 属性 cursorClickPos</span></a></h3><p>类型: number</p><p>访问: 可读, 可写</p>',5)),t("blockquote",null,[t("p",null,[e[15]||(e[15]=l("该属性是对 LVGL C API ")),e[16]||(e[16]=t("code",null,"lv_textarea_get_cursor_click_pos",-1)),e[17]||(e[17]=l(", ")),e[18]||(e[18]=t("code",null,"lv_textarea_set_cursor_click_pos",-1)),e[19]||(e[19]=l(" 的封装， 具体用法请参考 ")),t("a",b,[e[14]||(e[14]=l("LVGL文档")),r(n)])])]),e[120]||(e[120]=p('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-passwordmode" tabindex="-1"><a class="header-anchor" href="#属性-passwordmode"><span><span class="member-header property"></span> 属性 passwordMode</span></a></h3><p>类型: number</p><p>访问: 可读, 可写</p>',5)),t("blockquote",null,[t("p",null,[e[21]||(e[21]=l("该属性是对 LVGL C API ")),e[22]||(e[22]=t("code",null,"lv_textarea_get_password_mode",-1)),e[23]||(e[23]=l(", ")),e[24]||(e[24]=t("code",null,"lv_textarea_set_password_mode",-1)),e[25]||(e[25]=l(" 的封装， 具体用法请参考 ")),t("a",f,[e[20]||(e[20]=l("LVGL文档")),r(n)])])]),e[121]||(e[121]=p('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-passwordbullet" tabindex="-1"><a class="header-anchor" href="#属性-passwordbullet"><span><span class="member-header property"></span> 属性 passwordBullet</span></a></h3><p>类型:</p><p>访问: 只写</p>',5)),t("blockquote",null,[t("p",null,[e[27]||(e[27]=l("该属性是对 LVGL C API ")),e[28]||(e[28]=t("code",null,"lv_textarea_set_password_bullet",-1)),e[29]||(e[29]=l(" 的封装， 具体用法请参考 ")),t("a",L,[e[26]||(e[26]=l("LVGL文档")),r(n)])])]),e[122]||(e[122]=p('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-oneline" tabindex="-1"><a class="header-anchor" href="#属性-oneline"><span><span class="member-header property"></span> 属性 oneLine</span></a></h3><p>类型: number</p><p>访问: 可读, 可写</p>',5)),t("blockquote",null,[t("p",null,[e[31]||(e[31]=l("该属性是对 LVGL C API ")),e[32]||(e[32]=t("code",null,"lv_textarea_get_one_line",-1)),e[33]||(e[33]=l(", ")),e[34]||(e[34]=t("code",null,"lv_textarea_set_one_line",-1)),e[35]||(e[35]=l(" 的封装， 具体用法请参考 ")),t("a",v,[e[30]||(e[30]=l("LVGL文档")),r(n)])])]),e[123]||(e[123]=p('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-acceptedchars" tabindex="-1"><a class="header-anchor" href="#属性-acceptedchars"><span><span class="member-header property"></span> 属性 acceptedChars</span></a></h3><p>类型:</p><p>访问: 只写</p>',5)),t("blockquote",null,[t("p",null,[e[37]||(e[37]=l("该属性是对 LVGL C API ")),e[38]||(e[38]=t("code",null,"lv_textarea_set_accepted_chars",-1)),e[39]||(e[39]=l(" 的封装， 具体用法请参考 ")),t("a",k,[e[36]||(e[36]=l("LVGL文档")),r(n)])])]),e[124]||(e[124]=p('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-maxlength" tabindex="-1"><a class="header-anchor" href="#属性-maxlength"><span><span class="member-header property"></span> 属性 maxLength</span></a></h3><p>类型: number</p><p>访问: 可读, 可写</p>',5)),t("blockquote",null,[t("p",null,[e[41]||(e[41]=l("该属性是对 LVGL C API ")),e[42]||(e[42]=t("code",null,"lv_textarea_get_max_length",-1)),e[43]||(e[43]=l(", ")),e[44]||(e[44]=t("code",null,"lv_textarea_set_max_length",-1)),e[45]||(e[45]=l(" 的封装， 具体用法请参考 ")),t("a",y,[e[40]||(e[40]=l("LVGL文档")),r(n)])])]),e[125]||(e[125]=p('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-insertreplace" tabindex="-1"><a class="header-anchor" href="#属性-insertreplace"><span><span class="member-header property"></span> 属性 insertReplace</span></a></h3><p>类型:</p><p>访问: 只写</p>',5)),t("blockquote",null,[t("p",null,[e[47]||(e[47]=l("该属性是对 LVGL C API ")),e[48]||(e[48]=t("code",null,"lv_textarea_set_insert_replace",-1)),e[49]||(e[49]=l(" 的封装， 具体用法请参考 ")),t("a",A,[e[46]||(e[46]=l("LVGL文档")),r(n)])])]),e[126]||(e[126]=p('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-textselection" tabindex="-1"><a class="header-anchor" href="#属性-textselection"><span><span class="member-header property"></span> 属性 textSelection</span></a></h3><p>类型: number</p><p>访问: 可读, 可写</p>',5)),t("blockquote",null,[t("p",null,[e[51]||(e[51]=l("该属性是对 LVGL C API ")),e[52]||(e[52]=t("code",null,"lv_textarea_get_text_selection",-1)),e[53]||(e[53]=l(", ")),e[54]||(e[54]=t("code",null,"lv_textarea_set_text_selection",-1)),e[55]||(e[55]=l(" 的封装， 具体用法请参考 ")),t("a",V,[e[50]||(e[50]=l("LVGL文档")),r(n)])])]),e[127]||(e[127]=p('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-passwordshowtime" tabindex="-1"><a class="header-anchor" href="#属性-passwordshowtime"><span><span class="member-header property"></span> 属性 passwordShowTime</span></a></h3><p>类型: number</p><p>访问: 可读, 可写</p>',5)),t("blockquote",null,[t("p",null,[e[57]||(e[57]=l("该属性是对 LVGL C API ")),e[58]||(e[58]=t("code",null,"lv_textarea_get_password_show_time",-1)),e[59]||(e[59]=l(", ")),e[60]||(e[60]=t("code",null,"lv_textarea_set_password_show_time",-1)),e[61]||(e[61]=l(" 的封装， 具体用法请参考 ")),t("a",I,[e[56]||(e[56]=l("LVGL文档")),r(n)])])]),e[128]||(e[128]=p('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-align" tabindex="-1"><a class="header-anchor" href="#属性-align"><span><span class="member-header property"></span> 属性 align</span></a></h3><p>类型: number</p><p>访问: 只写</p>',5)),t("blockquote",null,[t("p",null,[e[63]||(e[63]=l("该属性是对 LVGL C API ")),e[64]||(e[64]=t("code",null,"lv_textarea_set_align",-1)),e[65]||(e[65]=l(" 的封装， 具体用法请参考 ")),t("a",P,[e[62]||(e[62]=l("LVGL文档")),r(n)])])]),e[129]||(e[129]=p('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-label" tabindex="-1"><a class="header-anchor" href="#属性-label"><span><span class="member-header property"></span> 属性 label</span></a></h3>',3)),t("p",null,[e[67]||(e[67]=l("类型: ")),r(o,{to:"/api/lvgl/widgets/obj.html"},{default:d(()=>e[66]||(e[66]=[l("obj")])),_:1})]),e[130]||(e[130]=t("p",null,"访问: 只读",-1)),t("blockquote",null,[t("p",null,[e[69]||(e[69]=l("该属性是对 LVGL C API ")),e[70]||(e[70]=t("code",null,"lv_textarea_get_label",-1)),e[71]||(e[71]=l(" 的封装， 具体用法请参考 ")),t("a",G,[e[68]||(e[68]=l("LVGL文档")),r(n)])])]),e[131]||(e[131]=p('<p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="属性-currentchar" tabindex="-1"><a class="header-anchor" href="#属性-currentchar"><span><span class="member-header property"></span> 属性 currentChar</span></a></h3><p>类型: number</p><p>访问: 只读</p>',5)),t("blockquote",null,[t("p",null,[e[73]||(e[73]=l("该属性是对 LVGL C API ")),e[74]||(e[74]=t("code",null,"lv_textarea_get_current_char",-1)),e[75]||(e[75]=l(" 的封装， 具体用法请参考 ")),t("a",w,[e[72]||(e[72]=l("LVGL文档")),r(n)])])]),e[132]||(e[132]=p('<p style="height:10px;margin:0px;"></p><h2 id="类方法" tabindex="-1"><a class="header-anchor" href="#类方法"><span>类方法</span></a></h2><p style="height:10px;margin:0px;"></p><h3 id="方法-addchar" tabindex="-1"><a class="header-anchor" href="#方法-addchar"><span><span class="member-header function"></span> 方法 addChar</span></a></h3><p>原型: addChar ()</p>',5)),t("blockquote",null,[t("p",null,[e[77]||(e[77]=l("该方法是对 LVGL C API ")),e[78]||(e[78]=t("code",null,"lv_textarea_add_char",-1)),e[79]||(e[79]=l(" 的封装，具体用法请参考 ")),t("a",C,[e[76]||(e[76]=l("LVGL文档")),r(n)])])]),e[133]||(e[133]=p('<h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值"><span>返回值:</span></a></h4><p><code>undefined</code></p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-addtext" tabindex="-1"><a class="header-anchor" href="#方法-addtext"><span><span class="member-header function"></span> 方法 addText</span></a></h3><p>原型: addText ()</p>',6)),t("blockquote",null,[t("p",null,[e[81]||(e[81]=l("该方法是对 LVGL C API ")),e[82]||(e[82]=t("code",null,"lv_textarea_add_text",-1)),e[83]||(e[83]=l(" 的封装，具体用法请参考 ")),t("a",T,[e[80]||(e[80]=l("LVGL文档")),r(n)])])]),e[134]||(e[134]=p('<h4 id="返回值-1" tabindex="-1"><a class="header-anchor" href="#返回值-1"><span>返回值:</span></a></h4><p><code>undefined</code></p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-deletechar" tabindex="-1"><a class="header-anchor" href="#方法-deletechar"><span><span class="member-header function"></span> 方法 deleteChar</span></a></h3><p>原型: deleteChar ()</p>',6)),t("blockquote",null,[t("p",null,[e[85]||(e[85]=l("该方法是对 LVGL C API ")),e[86]||(e[86]=t("code",null,"lv_textarea_delete_char",-1)),e[87]||(e[87]=l(" 的封装，具体用法请参考 ")),t("a",q,[e[84]||(e[84]=l("LVGL文档")),r(n)])])]),e[135]||(e[135]=p('<h4 id="返回值-2" tabindex="-1"><a class="header-anchor" href="#返回值-2"><span>返回值:</span></a></h4><p><code>undefined</code></p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-deletecharforward" tabindex="-1"><a class="header-anchor" href="#方法-deletecharforward"><span><span class="member-header function"></span> 方法 deleteCharForward</span></a></h3><p>原型: deleteCharForward ()</p>',6)),t("blockquote",null,[t("p",null,[e[89]||(e[89]=l("该方法是对 LVGL C API ")),e[90]||(e[90]=t("code",null,"lv_textarea_delete_char_forward",-1)),e[91]||(e[91]=l(" 的封装，具体用法请参考 ")),t("a",S,[e[88]||(e[88]=l("LVGL文档")),r(n)])])]),e[136]||(e[136]=p('<h4 id="返回值-3" tabindex="-1"><a class="header-anchor" href="#返回值-3"><span>返回值:</span></a></h4><p><code>undefined</code></p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-textisselected" tabindex="-1"><a class="header-anchor" href="#方法-textisselected"><span><span class="member-header function"></span> 方法 textIsSelected</span></a></h3><p>原型: textIsSelected ()</p>',6)),t("blockquote",null,[t("p",null,[e[93]||(e[93]=l("该方法是对 LVGL C API ")),e[94]||(e[94]=t("code",null,"lv_textarea_text_is_selected",-1)),e[95]||(e[95]=l(" 的封装，具体用法请参考 ")),t("a",R,[e[92]||(e[92]=l("LVGL文档")),r(n)])])]),e[137]||(e[137]=p('<h4 id="返回值-4" tabindex="-1"><a class="header-anchor" href="#返回值-4"><span>返回值:</span></a></h4><p><code>undefined</code></p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-clearselection" tabindex="-1"><a class="header-anchor" href="#方法-clearselection"><span><span class="member-header function"></span> 方法 clearSelection</span></a></h3><p>原型: clearSelection ()</p>',6)),t("blockquote",null,[t("p",null,[e[97]||(e[97]=l("该方法是对 LVGL C API ")),e[98]||(e[98]=t("code",null,"lv_textarea_clear_selection",-1)),e[99]||(e[99]=l(" 的封装，具体用法请参考 ")),t("a",N,[e[96]||(e[96]=l("LVGL文档")),r(n)])])]),e[138]||(e[138]=p('<h4 id="返回值-5" tabindex="-1"><a class="header-anchor" href="#返回值-5"><span>返回值:</span></a></h4><p><code>undefined</code></p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-cursorright" tabindex="-1"><a class="header-anchor" href="#方法-cursorright"><span><span class="member-header function"></span> 方法 cursorRight</span></a></h3><p>原型: cursorRight ()</p>',6)),t("blockquote",null,[t("p",null,[e[101]||(e[101]=l("该方法是对 LVGL C API ")),e[102]||(e[102]=t("code",null,"lv_textarea_cursor_right",-1)),e[103]||(e[103]=l(" 的封装，具体用法请参考 ")),t("a",D,[e[100]||(e[100]=l("LVGL文档")),r(n)])])]),e[139]||(e[139]=p('<h4 id="返回值-6" tabindex="-1"><a class="header-anchor" href="#返回值-6"><span>返回值:</span></a></h4><p><code>undefined</code></p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-cursorleft" tabindex="-1"><a class="header-anchor" href="#方法-cursorleft"><span><span class="member-header function"></span> 方法 cursorLeft</span></a></h3><p>原型: cursorLeft ()</p>',6)),t("blockquote",null,[t("p",null,[e[105]||(e[105]=l("该方法是对 LVGL C API ")),e[106]||(e[106]=t("code",null,"lv_textarea_cursor_left",-1)),e[107]||(e[107]=l(" 的封装，具体用法请参考 ")),t("a",B,[e[104]||(e[104]=l("LVGL文档")),r(n)])])]),e[140]||(e[140]=p('<h4 id="返回值-7" tabindex="-1"><a class="header-anchor" href="#返回值-7"><span>返回值:</span></a></h4><p><code>undefined</code></p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-cursordown" tabindex="-1"><a class="header-anchor" href="#方法-cursordown"><span><span class="member-header function"></span> 方法 cursorDown</span></a></h3><p>原型: cursorDown ()</p>',6)),t("blockquote",null,[t("p",null,[e[109]||(e[109]=l("该方法是对 LVGL C API ")),e[110]||(e[110]=t("code",null,"lv_textarea_cursor_down",-1)),e[111]||(e[111]=l(" 的封装，具体用法请参考 ")),t("a",j,[e[108]||(e[108]=l("LVGL文档")),r(n)])])]),e[141]||(e[141]=p('<h4 id="返回值-8" tabindex="-1"><a class="header-anchor" href="#返回值-8"><span>返回值:</span></a></h4><p><code>undefined</code></p><p style="height:10px;margin:0px;"></p><p style="height:10px;margin:0px;"></p><h3 id="方法-cursorup" tabindex="-1"><a class="header-anchor" href="#方法-cursorup"><span><span class="member-header function"></span> 方法 cursorUp</span></a></h3><p>原型: cursorUp ()</p>',6)),t("blockquote",null,[t("p",null,[e[113]||(e[113]=l("该方法是对 LVGL C API ")),e[114]||(e[114]=t("code",null,"lv_textarea_cursor_up",-1)),e[115]||(e[115]=l(" 的封装，具体用法请参考 ")),t("a",z,[e[112]||(e[112]=l("LVGL文档")),r(n)])])]),e[142]||(e[142]=t("h4",{id:"返回值-9",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#返回值-9"},[t("span",null,"返回值:")])],-1)),e[143]||(e[143]=t("p",null,[t("code",null,"undefined")],-1)),e[144]||(e[144]=t("p",{style:{height:"10px",margin:"0px"}},null,-1))])}const Z=a(u,[["render",E],["__file","TextArea.html.vue"]]),J=JSON.parse('{"path":"/api/lvgl/widgets/TextArea.html","title":"类: TextArea","lang":"zh-CN","frontmatter":{"headerDepth":2,"description":"类: TextArea 类属性 属性 text 类型: 访问: 只写 该属性是对 LVGL C API lv_textarea_set_text 的封装， 具体用法请参考 LVGL文档 属性 placeholderText 类型: 访问: 只写 该属性是对 LVGL C API lv_textarea_set_placeholder_text 的封装，...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/api/lvgl/widgets/TextArea.html"}],["meta",{"property":"og:title","content":"类: TextArea"}],["meta",{"property":"og:description","content":"类: TextArea 类属性 属性 text 类型: 访问: 只写 该属性是对 LVGL C API lv_textarea_set_text 的封装， 具体用法请参考 LVGL文档 属性 placeholderText 类型: 访问: 只写 该属性是对 LVGL C API lv_textarea_set_placeholder_text 的封装，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-30T15:47:51.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-30T15:47:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类: TextArea\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-30T15:47:51.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"类属性","slug":"类属性","link":"#类属性","children":[{"level":3,"title":"属性 text","slug":"属性-text","link":"#属性-text","children":[]},{"level":3,"title":"属性 placeholderText","slug":"属性-placeholdertext","link":"#属性-placeholdertext","children":[]},{"level":3,"title":"属性 cursorPos","slug":"属性-cursorpos","link":"#属性-cursorpos","children":[]},{"level":3,"title":"属性 cursorClickPos","slug":"属性-cursorclickpos","link":"#属性-cursorclickpos","children":[]},{"level":3,"title":"属性 passwordMode","slug":"属性-passwordmode","link":"#属性-passwordmode","children":[]},{"level":3,"title":"属性 passwordBullet","slug":"属性-passwordbullet","link":"#属性-passwordbullet","children":[]},{"level":3,"title":"属性 oneLine","slug":"属性-oneline","link":"#属性-oneline","children":[]},{"level":3,"title":"属性 acceptedChars","slug":"属性-acceptedchars","link":"#属性-acceptedchars","children":[]},{"level":3,"title":"属性 maxLength","slug":"属性-maxlength","link":"#属性-maxlength","children":[]},{"level":3,"title":"属性 insertReplace","slug":"属性-insertreplace","link":"#属性-insertreplace","children":[]},{"level":3,"title":"属性 textSelection","slug":"属性-textselection","link":"#属性-textselection","children":[]},{"level":3,"title":"属性 passwordShowTime","slug":"属性-passwordshowtime","link":"#属性-passwordshowtime","children":[]},{"level":3,"title":"属性 align","slug":"属性-align","link":"#属性-align","children":[]},{"level":3,"title":"属性 label","slug":"属性-label","link":"#属性-label","children":[]},{"level":3,"title":"属性 currentChar","slug":"属性-currentchar","link":"#属性-currentchar","children":[]}]},{"level":2,"title":"类方法","slug":"类方法","link":"#类方法","children":[{"level":3,"title":"方法  addChar","slug":"方法-addchar","link":"#方法-addchar","children":[]},{"level":3,"title":"方法  addText","slug":"方法-addtext","link":"#方法-addtext","children":[]},{"level":3,"title":"方法  deleteChar","slug":"方法-deletechar","link":"#方法-deletechar","children":[]},{"level":3,"title":"方法  deleteCharForward","slug":"方法-deletecharforward","link":"#方法-deletecharforward","children":[]},{"level":3,"title":"方法  textIsSelected","slug":"方法-textisselected","link":"#方法-textisselected","children":[]},{"level":3,"title":"方法  clearSelection","slug":"方法-clearselection","link":"#方法-clearselection","children":[]},{"level":3,"title":"方法  cursorRight","slug":"方法-cursorright","link":"#方法-cursorright","children":[]},{"level":3,"title":"方法  cursorLeft","slug":"方法-cursorleft","link":"#方法-cursorleft","children":[]},{"level":3,"title":"方法  cursorDown","slug":"方法-cursordown","link":"#方法-cursordown","children":[]},{"level":3,"title":"方法  cursorUp","slug":"方法-cursorup","link":"#方法-cursorup","children":[]}]}],"git":{"createdTime":1714757277000,"updatedTime":1717084071000,"contributors":[{"name":"alee","email":"alee@chou.im","commits":5}]},"readingTime":{"minutes":4.59,"words":1377},"filePathRelative":"api/lvgl/widgets/TextArea.md","localizedDate":"2024年5月4日","autoDesc":true}');export{Z as comp,J as data};
